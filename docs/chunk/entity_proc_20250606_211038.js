var Cl=Object.defineProperty;var dr=(e,t)=>(t=Symbol[e])?t:Symbol.for("Symbol."+e),fr=e=>{throw TypeError(e)};var Tl=(e,t,i)=>t in e?Cl(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var o=(e,t,i)=>Tl(e,typeof t!="symbol"?t+"":t,i);var pr=(e,t,i)=>{if(t!=null){typeof t!="object"&&typeof t!="function"&&fr("Object expected");var a,r;i&&(a=t[dr("asyncDispose")]),a===void 0&&(a=t[dr("dispose")],i&&(r=a)),typeof a!="function"&&fr("Object not disposable"),r&&(a=function(){try{r.call(this)}catch(n){return Promise.reject(n)}}),e.push([i,a,t])}else i&&e.push([i]);return t},gr=(e,t,i)=>{var a=typeof SuppressedError=="function"?SuppressedError:function(s,l,u,c){return c=Error(u),c.name="SuppressedError",c.error=s,c.suppressed=l,c},r=s=>t=i?new a(s,t,"An error was suppressed during disposal"):(i=!0,s),n=s=>{for(;s=e.pop();)try{var l=s[1]&&s[1].call(s[2]);if(s[0])return Promise.resolve(l).then(n,u=>(r(u),n()))}catch(u){r(u)}if(i)throw t};return n()};import{j as wl}from"./json_20250606_211038.js";const ka=!1;var Va=Array.isArray,bl=Array.prototype.indexOf,Wa=Array.from,El=Object.defineProperty,At=Object.getOwnPropertyDescriptor,Vr=Object.getOwnPropertyDescriptors,kl=Object.prototype,Dl=Array.prototype,Qa=Object.getPrototypeOf;function xl(e){return typeof e=="function"}const Wt=()=>{};function Al(e){return typeof(e==null?void 0:e.then)=="function"}function Pl(e){return e()}function Da(e){for(var t=0;t<e.length;t++)e[t]()}const be=2,Wr=4,Ji=8,Ii=16,Xe=32,si=64,ki=128,we=256,Di=512,de=1024,Ke=2048,Bt=4096,We=8192,ea=16384,Qr=32768,ta=65536,Xr=1<<17,Ml=1<<19,Kr=1<<20,Qe=Symbol("$state"),Fl=Symbol("legacy props"),Ol=Symbol("");function Yr(e){return e===this.v}function Nl(e,t){return e!=e?t==t:e!==t||e!==null&&typeof e=="object"||typeof e=="function"}function Xa(e){return!Nl(e,this.v)}function Bl(e){throw new Error("https://svelte.dev/e/effect_in_teardown")}function Ll(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function ql(e){throw new Error("https://svelte.dev/e/effect_orphan")}function Rl(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function Hl(e){throw new Error("https://svelte.dev/e/props_invalid_value")}function Zl(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function Gl(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function $l(){throw new Error("https://svelte.dev/e/state_unsafe_local_read")}function Ul(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let li=!1,jl=!1;function zl(){li=!0}const Ka=1,Ya=2,Jr=4,Vl=8,Wl=16,Ql=1,Xl=2,Kl=4,Yl=8,Jl=16,Il=1,eo=2,to=4,io=1,ao=2,se=Symbol();let W=null;function xi(e){W=e}function ct(e,t=!1,i){W={p:W,c:null,e:null,m:!1,s:e,x:null,l:null},li&&!t&&(W.l={s:null,u:null,r1:[],r2:oe(!1)})}function ut(e){const t=W;if(t!==null){const s=t.e;if(s!==null){var i=Z,a=$;t.e=null;try{for(var r=0;r<s.length;r++){var n=s[r];ke(n.effect),Ee(n.reaction),Rt(n.fn)}}finally{ke(i),Ee(a)}}W=t.p,t.m=!0}return{}}function Lt(){return!li||W!==null&&W.l===null}function oe(e,t){var i={f:0,v:e,reactions:null,equals:Yr,rv:0,wv:0};return i}function ro(e){return Ir(oe(e))}function Yt(e,t=!1){var a;const i=oe(e);return t||(i.equals=Xa),li&&W!==null&&W.l!==null&&((a=W.l).s??(a.s=[])).push(i),i}function Ai(e,t=!1){return Ir(Yt(e,t))}function Ir(e){return $!==null&&!Be&&$.f&be&&(Le===null?yo([e]):Le.push(e)),e}function gp(e,t){return Y(e,qe(()=>P(e))),t}function Y(e,t){return $!==null&&!Be&&Lt()&&$.f&(be|Ii)&&(Le===null||!Le.includes(e))&&Ul(),it(e,t)}function it(e,t){return e.equals(t)||(e.v,e.v=t,e.wv=mn(),en(e,Ke),Lt()&&Z!==null&&Z.f&de&&!(Z.f&(Xe|si))&&(ze===null?vo([e]):ze.push(e))),t}function en(e,t){var i=e.reactions;if(i!==null)for(var a=Lt(),r=i.length,n=0;n<r;n++){var s=i[n],l=s.f;l&Ke||!a&&s===Z||(Re(s,t),l&(de|we)&&(l&be?en(s,Bt):sa(s)))}}let tn=!1;function Ie(e,t=null,i){if(typeof e!="object"||e===null||Qe in e)return e;const a=Qa(e);if(a!==kl&&a!==Dl)return e;var r=new Map,n=Va(e),s=oe(0);n&&r.set("length",oe(e.length));var l;return new Proxy(e,{defineProperty(u,c,d){(!("value"in d)||d.configurable===!1||d.enumerable===!1||d.writable===!1)&&Zl();var f=r.get(c);return f===void 0?(f=oe(d.value),r.set(c,f)):Y(f,Ie(d.value,l)),!0},deleteProperty(u,c){var d=r.get(c);if(d===void 0)c in u&&r.set(c,oe(se));else{if(n&&typeof c=="string"){var f=r.get("length"),p=Number(c);Number.isInteger(p)&&p<f.v&&Y(f,p)}Y(d,se),hr(s)}return!0},get(u,c,d){var y;if(c===Qe)return e;var f=r.get(c),p=c in u;if(f===void 0&&(!p||(y=At(u,c))!=null&&y.writable)&&(f=oe(Ie(p?u[c]:se,l)),r.set(c,f)),f!==void 0){var h=P(f);return h===se?void 0:h}return Reflect.get(u,c,d)},getOwnPropertyDescriptor(u,c){var d=Reflect.getOwnPropertyDescriptor(u,c);if(d&&"value"in d){var f=r.get(c);f&&(d.value=P(f))}else if(d===void 0){var p=r.get(c),h=p==null?void 0:p.v;if(p!==void 0&&h!==se)return{enumerable:!0,configurable:!0,value:h,writable:!0}}return d},has(u,c){var h;if(c===Qe)return!0;var d=r.get(c),f=d!==void 0&&d.v!==se||Reflect.has(u,c);if(d!==void 0||Z!==null&&(!f||(h=At(u,c))!=null&&h.writable)){d===void 0&&(d=oe(f?Ie(u[c],l):se),r.set(c,d));var p=P(d);if(p===se)return!1}return f},set(u,c,d,f){var D;var p=r.get(c),h=c in u;if(n&&c==="length")for(var y=d;y<p.v;y+=1){var v=r.get(y+"");v!==void 0?Y(v,se):y in u&&(v=oe(se),r.set(y+"",v))}p===void 0?(!h||(D=At(u,c))!=null&&D.writable)&&(p=oe(void 0),Y(p,Ie(d,l)),r.set(c,p)):(h=p.v!==se,Y(p,Ie(d,l)));var g=Reflect.getOwnPropertyDescriptor(u,c);if(g!=null&&g.set&&g.set.call(f,d),!h){if(n&&typeof c=="string"){var m=r.get("length"),T=Number(c);Number.isInteger(T)&&T>=m.v&&Y(m,T+1)}hr(s)}return!0},ownKeys(u){P(s);var c=Reflect.ownKeys(u).filter(p=>{var h=r.get(p);return h===void 0||h.v!==se});for(var[d,f]of r)f.v!==se&&!(d in u)&&c.push(d);return c},setPrototypeOf(){Gl()}})}function hr(e,t=1){Y(e,e.v+t)}function yr(e){return e!==null&&typeof e=="object"&&Qe in e?e[Qe]:e}function an(e,t){return Object.is(yr(e),yr(t))}var vr,rn,nn,sn;function no(){if(vr===void 0){vr=window,rn=/Firefox/.test(navigator.userAgent);var e=Element.prototype,t=Node.prototype;nn=At(t,"firstChild").get,sn=At(t,"nextSibling").get,e.__click=void 0,e.__className="",e.__attributes=null,e.__styles=null,e.__e=void 0,Text.prototype.__t=void 0}}function ia(e=""){return document.createTextNode(e)}function Pi(e){return nn.call(e)}function aa(e){return sn.call(e)}function L(e,t){return Pi(e)}function Ne(e,t){{var i=Pi(e);return i instanceof Comment&&i.data===""?aa(i):i}}function Q(e,t=1,i=!1){let a=e;for(;t--;)a=aa(a);return a}function so(e){e.textContent=""}function Jt(e){var t=be|Ke,i=$!==null&&$.f&be?$:null;return Z===null||i!==null&&i.f&we?t|=we:Z.f|=Kr,{ctx:W,deps:null,effects:null,equals:Yr,f:t,fn:e,reactions:null,rv:0,v:null,wv:0,parent:i??Z}}function at(e){const t=Jt(e);return t.equals=Xa,t}function ln(e){var t=e.effects;if(t!==null){e.effects=null;for(var i=0;i<t.length;i+=1)nt(t[i])}}function lo(e){for(var t=e.parent;t!==null;){if(!(t.f&be))return t;t=t.parent}return null}function oo(e){var t,i=Z;ke(lo(e));try{ln(e),t=_n(e)}finally{ke(i)}return t}function on(e){var t=oo(e),i=(tt||e.f&we)&&e.deps!==null?Bt:de;Re(e,i),e.equals(t)||(e.v=t,e.wv=mn())}function cn(e){Z===null&&$===null&&ql(),$!==null&&$.f&we&&Z===null&&Ll(),er&&Bl()}function co(e,t){var i=t.last;i===null?t.last=t.first=e:(i.next=e,e.prev=i,t.last=e)}function qt(e,t,i,a=!0){var r=(e&si)!==0,n=Z,s={ctx:W,deps:null,nodes_start:null,nodes_end:null,f:e|Ke,first:null,fn:t,last:null,next:null,parent:r?null:n,prev:null,teardown:null,transitions:null,wv:0};if(i){var l=Pt;try{Sr(!0),tr(s),s.f|=Qr}catch(d){throw nt(s),d}finally{Sr(l)}}else t!==null&&sa(s);var u=i&&s.deps===null&&s.first===null&&s.nodes_start===null&&s.teardown===null&&(s.f&(Kr|ki))===0;if(!u&&!r&&a&&(n!==null&&co(s,n),$!==null&&$.f&be)){var c=$;(c.effects??(c.effects=[])).push(s)}return s}function Ja(e){const t=qt(Ji,null,!1);return Re(t,de),t.teardown=e,t}function mr(e){cn();var t=Z!==null&&(Z.f&Xe)!==0&&W!==null&&!W.m;if(t){var i=W;(i.e??(i.e=[])).push({fn:e,effect:Z,reaction:$})}else{var a=Rt(e);return a}}function uo(e){return cn(),Ht(e)}function fo(e){const t=qt(si,e,!0);return(i={})=>new Promise(a=>{i.outro?vt(t,()=>{nt(t),a(void 0)}):(nt(t),a(void 0))})}function Rt(e){return qt(Wr,e,!1)}function Ht(e){return qt(Ji,e,!0)}function te(e,t=[],i=Jt){const a=t.map(i);return ra(()=>e(...a.map(P)))}function ra(e,t=0){return qt(Ji|Ii|t,e,!0)}function St(e,t=!0){return qt(Ji|Xe,e,!0,t)}function un(e){var t=e.teardown;if(t!==null){const i=er,a=$;_r(!0),Ee(null);try{t.call(null)}finally{_r(i),Ee(a)}}}function dn(e,t=!1){var i=e.first;for(e.first=e.last=null;i!==null;){var a=i.next;nt(i,t),i=a}}function po(e){for(var t=e.first;t!==null;){var i=t.next;t.f&Xe||nt(t),t=i}}function nt(e,t=!0){var i=!1;if((t||e.f&Ml)&&e.nodes_start!==null){for(var a=e.nodes_start,r=e.nodes_end;a!==null;){var n=a===r?null:aa(a);a.remove(),a=n}i=!0}dn(e,t&&!i),Oi(e,0),Re(e,ea);var s=e.transitions;if(s!==null)for(const u of s)u.stop();un(e);var l=e.parent;l!==null&&l.first!==null&&fn(e),e.next=e.prev=e.teardown=e.ctx=e.deps=e.fn=e.nodes_start=e.nodes_end=null}function fn(e){var t=e.parent,i=e.prev,a=e.next;i!==null&&(i.next=a),a!==null&&(a.prev=i),t!==null&&(t.first===e&&(t.first=a),t.last===e&&(t.last=i))}function vt(e,t){var i=[];Ia(e,i,!0),pn(i,()=>{nt(e),t&&t()})}function pn(e,t){var i=e.length;if(i>0){var a=()=>--i||t();for(var r of e)r.out(a)}else t()}function Ia(e,t,i){if(!(e.f&We)){if(e.f^=We,e.transitions!==null)for(const s of e.transitions)(s.is_global||i)&&t.push(s);for(var a=e.first;a!==null;){var r=a.next,n=(a.f&ta)!==0||(a.f&Xe)!==0;Ia(a,t,n?i:!1),a=r}}}function Nt(e){gn(e,!0)}function gn(e,t){if(e.f&We){e.f^=We,e.f&de||(e.f^=de),oi(e)&&(Re(e,Ke),sa(e));for(var i=e.first;i!==null;){var a=i.next,r=(i.f&ta)!==0||(i.f&Xe)!==0;gn(i,r?t:!1),i=a}if(e.transitions!==null)for(const n of e.transitions)(n.is_global||t)&&n.in()}}let Mi=!1,xa=[];function hn(){Mi=!1;const e=xa.slice();xa=[],Da(e)}function _t(e){Mi||(Mi=!0,queueMicrotask(hn)),xa.push(e)}function go(){Mi&&hn()}const yn=0,ho=1;let wi=!1,bi=yn,It=!1,ei=null,Pt=!1,er=!1;function Sr(e){Pt=e}function _r(e){er=e}let ht=[],Mt=0;let $=null,Be=!1;function Ee(e){$=e}let Z=null;function ke(e){Z=e}let Le=null;function yo(e){Le=e}let ce=null,ye=0,ze=null;function vo(e){ze=e}let vn=1,Fi=0,tt=!1,et=null;function mn(){return++vn}function oi(e){var f;var t=e.f;if(t&Ke)return!0;if(t&Bt){var i=e.deps,a=(t&we)!==0;if(i!==null){var r,n,s=(t&Di)!==0,l=a&&Z!==null&&!tt,u=i.length;if(s||l){var c=e,d=c.parent;for(r=0;r<u;r++)n=i[r],(s||!((f=n==null?void 0:n.reactions)!=null&&f.includes(c)))&&(n.reactions??(n.reactions=[])).push(c);s&&(c.f^=Di),l&&d!==null&&!(d.f&we)&&(c.f^=we)}for(r=0;r<u;r++)if(n=i[r],oi(n)&&on(n),n.wv>e.wv)return!0}(!a||Z!==null&&!tt)&&Re(e,de)}return!1}function mo(e,t){for(var i=t;i!==null;){if(i.f&ki)try{i.fn(e);return}catch{i.f^=ki}i=i.parent}throw wi=!1,e}function So(e){return(e.f&ea)===0&&(e.parent===null||(e.parent.f&ki)===0)}function na(e,t,i,a){if(wi){if(i===null&&(wi=!1),So(t))throw e;return}i!==null&&(wi=!0);{mo(e,t);return}}function Sn(e,t,i=!0){var a=e.reactions;if(a!==null)for(var r=0;r<a.length;r++){var n=a[r];n.f&be?Sn(n,t,!1):t===n&&(i?Re(n,Ke):n.f&de&&Re(n,Bt),sa(n))}}function _n(e){var h;var t=ce,i=ye,a=ze,r=$,n=tt,s=Le,l=W,u=Be,c=e.f;ce=null,ye=0,ze=null,$=c&(Xe|si)?null:e,tt=(c&we)!==0&&(!Pt||r===null||u),Le=null,xi(e.ctx),Be=!1,Fi++;try{var d=(0,e.fn)(),f=e.deps;if(ce!==null){var p;if(Oi(e,ye),f!==null&&ye>0)for(f.length=ye+ce.length,p=0;p<ce.length;p++)f[ye+p]=ce[p];else e.deps=f=ce;if(!tt)for(p=ye;p<f.length;p++)((h=f[p]).reactions??(h.reactions=[])).push(e)}else f!==null&&ye<f.length&&(Oi(e,ye),f.length=ye);if(Lt()&&ze!==null&&!Be&&f!==null&&!(e.f&(be|Bt|Ke)))for(p=0;p<ze.length;p++)Sn(ze[p],e);return r!==null&&Fi++,d}finally{ce=t,ye=i,ze=a,$=r,tt=n,Le=s,xi(l),Be=u}}function _o(e,t){let i=t.reactions;if(i!==null){var a=bl.call(i,e);if(a!==-1){var r=i.length-1;r===0?i=t.reactions=null:(i[a]=i[r],i.pop())}}i===null&&t.f&be&&(ce===null||!ce.includes(t))&&(Re(t,Bt),t.f&(we|Di)||(t.f^=Di),ln(t),Oi(t,0))}function Oi(e,t){var i=e.deps;if(i!==null)for(var a=t;a<i.length;a++)_o(e,i[a])}function tr(e){var t=e.f;if(!(t&ea)){Re(e,de);var i=Z,a=W;Z=e;try{t&Ii?po(e):dn(e),un(e);var r=_n(e);e.teardown=typeof r=="function"?r:null,e.wv=vn;var n=e.deps,s;ka&&jl&&e.f&Ke}catch(l){na(l,e,i,a||e.ctx)}finally{Z=i}}}function Cn(){if(Mt>1e3){Mt=0;try{Rl()}catch(e){if(ei!==null)na(e,ei,null);else throw e}}Mt++}function Tn(e){var t=e.length;if(t!==0){Cn();var i=Pt;Pt=!0;try{for(var a=0;a<t;a++){var r=e[a];r.f&de||(r.f^=de);var n=wo(r);Co(n)}}finally{Pt=i}}}function Co(e){var t=e.length;if(t!==0)for(var i=0;i<t;i++){var a=e[i];if(!(a.f&(ea|We)))try{oi(a)&&(tr(a),a.deps===null&&a.first===null&&a.nodes_start===null&&(a.teardown===null?fn(a):a.fn=null))}catch(r){na(r,a,null,a.ctx)}}}function To(){if(It=!1,Mt>1001)return;const e=ht;ht=[],Tn(e),It||(Mt=0,ei=null)}function sa(e){bi===yn&&(It||(It=!0,queueMicrotask(To))),ei=e;for(var t=e;t.parent!==null;){t=t.parent;var i=t.f;if(i&(si|Xe)){if(!(i&de))return;t.f^=de}}ht.push(t)}function wo(e){var t=[],i=e.first;e:for(;i!==null;){var a=i.f,r=(a&Xe)!==0,n=r&&(a&de)!==0,s=i.next;if(!n&&!(a&We)){if(a&Wr)t.push(i);else if(r)i.f^=de;else{var l=$;try{$=i,oi(i)&&tr(i)}catch(d){na(d,i,null,i.ctx)}finally{$=l}}var u=i.first;if(u!==null){i=u;continue}}if(s===null){let d=i.parent;for(;d!==null;){if(e===d)break e;var c=d.next;if(c!==null){i=c;continue e}d=d.parent}}i=s}return t}function ir(e){var t=bi,i=ht;try{Cn();const r=[];bi=ho,ht=r,It=!1,Tn(i);var a=e==null?void 0:e();return go(),(ht.length>0||r.length>0)&&ir(),Mt=0,ei=null,a}finally{bi=t,ht=i}}async function hp(){await Promise.resolve(),ir()}function P(e){var t=e.f,i=(t&be)!==0;if(et!==null&&et.add(e),$!==null&&!Be){Le!==null&&Le.includes(e)&&$l();var a=$.deps;e.rv<Fi&&(e.rv=Fi,ce===null&&a!==null&&a[ye]===e?ye++:ce===null?ce=[e]:(!tt||!ce.includes(e))&&ce.push(e))}else if(i&&e.deps===null&&e.effects===null){var r=e,n=r.parent;n!==null&&!(n.f&we)&&(r.f^=we)}return i&&(r=e,oi(r)&&on(r)),e.v}function bo(e){var t=et;et=new Set;var i=et,a;try{if(qe(e),t!==null)for(a of et)t.add(a)}finally{et=t}return i}function yp(e){var t=bo(()=>qe(e));for(var i of t)if(i.f&Xr)for(const a of i.deps||[])a.f&be||it(a,a.v);else it(i,i.v)}function qe(e){var t=Be;try{return Be=!0,e()}finally{Be=t}}const Eo=-7169;function Re(e,t){e.f=e.f&Eo|t}function ko(e){if(!(typeof e!="object"||!e||e instanceof EventTarget)){if(Qe in e)Aa(e);else if(!Array.isArray(e))for(let t in e){const i=e[t];typeof i=="object"&&i&&Qe in i&&Aa(i)}}}function Aa(e,t=new Set){if(typeof e=="object"&&e!==null&&!(e instanceof EventTarget)&&!t.has(e)){t.add(e),e instanceof Date&&e.getTime();for(let a in e)try{Aa(e[a],t)}catch{}const i=Qa(e);if(i!==Object.prototype&&i!==Array.prototype&&i!==Map.prototype&&i!==Set.prototype&&i!==Date.prototype){const a=Vr(i);for(let r in a){const n=a[r].get;if(n)try{n.call(e)}catch{}}}}}const Do=["touchstart","touchmove"];function xo(e){return Do.includes(e)}let Cr=!1;function Ao(){Cr||(Cr=!0,document.addEventListener("reset",e=>{Promise.resolve().then(()=>{var t;if(!e.defaultPrevented)for(const i of e.target.elements)(t=i.__on_r)==null||t.call(i)})},{capture:!0}))}function Po(e,t,i,a=!0){a&&i();for(var r of t)e.addEventListener(r,i);Ja(()=>{for(var n of t)e.removeEventListener(n,i)})}function la(e){var t=$,i=Z;Ee(null),ke(null);try{return e()}finally{Ee(t),ke(i)}}function ci(e,t,i,a=i){e.addEventListener(t,()=>la(i));const r=e.__on_r;r?e.__on_r=()=>{r(),a(!0)}:e.__on_r=()=>a(!0),Ao()}const wn=new Set,Pa=new Set;function Mo(e,t,i,a={}){function r(n){if(a.capture||Qt.call(t,n),!n.cancelBubble)return la(()=>i==null?void 0:i.call(this,n))}return e.startsWith("pointer")||e.startsWith("touch")||e==="wheel"?_t(()=>{t.addEventListener(e,r,a)}):t.addEventListener(e,r,a),r}function ft(e,t,i,a,r){var n={capture:a,passive:r},s=Mo(e,t,i,n);(t===document.body||t===window||t===document)&&Ja(()=>{t.removeEventListener(e,s,n)})}function oa(e){for(var t=0;t<e.length;t++)wn.add(e[t]);for(var i of Pa)i(e)}function Qt(e){var T;var t=this,i=t.ownerDocument,a=e.type,r=((T=e.composedPath)==null?void 0:T.call(e))||[],n=r[0]||e.target,s=0,l=e.__root;if(l){var u=r.indexOf(l);if(u!==-1&&(t===document||t===window)){e.__root=t;return}var c=r.indexOf(t);if(c===-1)return;u<=c&&(s=u)}if(n=r[s]||e.target,n!==t){El(e,"currentTarget",{configurable:!0,get(){return n||i}});var d=$,f=Z;Ee(null),ke(null);try{for(var p,h=[];n!==null;){var y=n.assignedSlot||n.parentNode||n.host||null;try{var v=n["__"+a];if(v!==void 0&&!n.disabled)if(Va(v)){var[g,...m]=v;g.apply(n,[e,...m])}else v.call(n,e)}catch(D){p?h.push(D):p=D}if(e.cancelBubble||y===t||y===null)break;n=y}if(p){for(let D of h)queueMicrotask(()=>{throw D});throw p}}finally{e.__root=t,delete e.currentTarget,Ee(d),ke(f)}}}function Fo(e){var t=document.createElement("template");return t.innerHTML=e,t.content}function Ni(e,t){var i=Z;i.nodes_start===null&&(i.nodes_start=e,i.nodes_end=t)}function G(e,t){var i=(t&io)!==0,a=(t&ao)!==0,r,n=!e.startsWith("<!>");return()=>{r===void 0&&(r=Fo(n?e:"<!>"+e),i||(r=Pi(r)));var s=a||rn?document.importNode(r,!0):r.cloneNode(!0);if(i){var l=Pi(s),u=s.lastChild;Ni(l,u)}else Ni(s,s);return s}}function vp(e=""){{var t=ia(e+"");return Ni(t,t),t}}function yt(){var e=document.createDocumentFragment(),t=document.createComment(""),i=ia();return e.append(t,i),Ni(t,i),e}function F(e,t){e!==null&&e.before(t)}let Ma=!0;function ge(e,t){var i=t==null?"":typeof t=="object"?t+"":t;i!==(e.__t??(e.__t=e.nodeValue))&&(e.__t=i,e.nodeValue=i+"")}function mp(e,t){return Oo(e,t)}const Et=new Map;function Oo(e,{target:t,anchor:i,props:a={},events:r,context:n,intro:s=!0}){no();var l=new Set,u=f=>{for(var p=0;p<f.length;p++){var h=f[p];if(!l.has(h)){l.add(h);var y=xo(h);t.addEventListener(h,Qt,{passive:y});var v=Et.get(h);v===void 0?(document.addEventListener(h,Qt,{passive:y}),Et.set(h,1)):Et.set(h,v+1)}}};u(Wa(wn)),Pa.add(u);var c=void 0,d=fo(()=>{var f=i??t.appendChild(ia());return St(()=>{if(n){ct({});var p=W;p.c=n}r&&(a.$$events=r),Ma=s,c=e(f,a)||{},Ma=!0,n&&ut()}),()=>{var y;for(var p of l){t.removeEventListener(p,Qt);var h=Et.get(p);--h===0?(document.removeEventListener(p,Qt),Et.delete(p)):Et.set(p,h)}Pa.delete(u),f!==i&&((y=f.parentNode)==null||y.removeChild(f))}});return No.set(c,d),c}let No=new WeakMap;const ga=0,Si=1,ha=2;function Sp(e,t,i,a,r){var n=e,s=Lt(),l=W,u=se,c,d,f,p=(s?oe:Yt)(void 0),h=(s?oe:Yt)(void 0),y=!1;function v(m,T){y=!0,T&&(ke(g),Ee(g),xi(l));try{m===ga&&i&&(c?Nt(c):c=St(()=>i(n))),m===Si&&a&&(d?Nt(d):d=St(()=>a(n,p))),m!==ga&&c&&vt(c,()=>c=null),m!==Si&&d&&vt(d,()=>d=null),m!==ha&&f&&vt(f,()=>f=null)}finally{T&&(xi(null),Ee(null),ke(null),ir())}}var g=ra(()=>{if(u!==(u=t())){if(Al(u)){var m=u;y=!1,m.then(T=>{m===u&&(it(p,T),v(Si,!0))},T=>{if(m===u)throw it(h,T),v(ha,!0),h.v}),_t(()=>{y||v(ga,!0)})}else it(p,u),v(Si,!1);return()=>u=se}})}function X(e,t,i=!1){var a=e,r=null,n=null,s=se,l=i?ta:0,u=!1;const c=(f,p=!0)=>{u=!0,d(p,f)},d=(f,p)=>{s!==(s=f)&&(s?(r?Nt(r):p&&(r=St(()=>p(a))),n&&vt(n,()=>{n=null})):(n?Nt(n):p&&(n=St(()=>p(a))),r&&vt(r,()=>{r=null})))};ra(()=>{u=!1,t(c),u||d(null,null)},l)}let Ei=null;function ti(e,t){return t}function Bo(e,t,i,a){for(var r=[],n=t.length,s=0;s<n;s++)Ia(t[s].e,r,!0);var l=n>0&&r.length===0&&i!==null;if(l){var u=i.parentNode;so(u),u.append(i),a.clear(),Ye(e,t[0].prev,t[n-1].next)}pn(r,()=>{for(var c=0;c<n;c++){var d=t[c];l||(a.delete(d.k),Ye(e,d.prev,d.next)),nt(d.e,!l)}})}function ii(e,t,i,a,r,n=null){var s=e,l={flags:t,items:new Map,first:null},u=(t&Jr)!==0;if(u){var c=e;s=c.appendChild(ia())}var d=null,f=!1,p=at(()=>{var h=i();return Va(h)?h:h==null?[]:Wa(h)});ra(()=>{var h=P(p),y=h.length;f&&y===0||(f=y===0,Lo(h,l,s,r,t,a,i),n!==null&&(y===0?d?Nt(d):d=St(()=>n(s)):d!==null&&vt(d,()=>{d=null})),P(p))})}function Lo(e,t,i,a,r,n,s){var xe,Se,zt,yi;var l=(r&Vl)!==0,u=(r&(Ka|Ya))!==0,c=e.length,d=t.items,f=t.first,p=f,h,y=null,v,g=[],m=[],T,D,w,A;if(l)for(A=0;A<c;A+=1)T=e[A],D=n(T,A),w=d.get(D),w!==void 0&&((xe=w.a)==null||xe.measure(),(v??(v=new Set)).add(w));for(A=0;A<c;A+=1){if(T=e[A],D=n(T,A),w=d.get(D),w===void 0){var J=p?p.e.nodes_start:i;y=Ro(J,t,y,y===null?t.first:y.next,T,D,A,a,r,s),d.set(D,y),g=[],m=[],p=y.next;continue}if(u&&qo(w,T,A,r),w.e.f&We&&(Nt(w.e),l&&((Se=w.a)==null||Se.unfix(),(v??(v=new Set)).delete(w))),w!==p){if(h!==void 0&&h.has(w)){if(g.length<m.length){var pe=m[0],q;y=pe.prev;var N=g[0],b=g[g.length-1];for(q=0;q<g.length;q+=1)Tr(g[q],pe,i);for(q=0;q<m.length;q+=1)h.delete(m[q]);Ye(t,N.prev,b.next),Ye(t,y,N),Ye(t,b,pe),p=pe,y=b,A-=1,g=[],m=[]}else h.delete(w),Tr(w,p,i),Ye(t,w.prev,w.next),Ye(t,w,y===null?t.first:y.next),Ye(t,y,w),y=w;continue}for(g=[],m=[];p!==null&&p.k!==D;)p.e.f&We||(h??(h=new Set)).add(p),m.push(p),p=p.next;if(p===null)continue;w=p}g.push(w),y=w,p=w.next}if(p!==null||h!==void 0){for(var ie=h===void 0?[]:Wa(h);p!==null;)p.e.f&We||ie.push(p),p=p.next;var I=ie.length;if(I>0){var he=r&Jr&&c===0?i:null;if(l){for(A=0;A<I;A+=1)(zt=ie[A].a)==null||zt.measure();for(A=0;A<I;A+=1)(yi=ie[A].a)==null||yi.fix()}Bo(t,ie,he,d)}}l&&_t(()=>{var vi;if(v!==void 0)for(w of v)(vi=w.a)==null||vi.apply()}),Z.first=t.first&&t.first.e,Z.last=y&&y.e}function qo(e,t,i,a){a&Ka&&it(e.v,t),a&Ya?it(e.i,i):e.i=i}function Ro(e,t,i,a,r,n,s,l,u,c){var d=Ei,f=(u&Ka)!==0,p=(u&Wl)===0,h=f?p?Yt(r):oe(r):r,y=u&Ya?oe(s):s,v={i:y,v:h,k:n,a:null,e:null,prev:i,next:a};Ei=v;try{return v.e=St(()=>l(e,h,y,c),tn),v.e.prev=i&&i.e,v.e.next=a&&a.e,i===null?t.first=v:(i.next=v,i.e.next=v.e),a!==null&&(a.prev=v,a.e.prev=v.e),v}finally{Ei=d}}function Tr(e,t,i){for(var a=e.next?e.next.e.nodes_start:i,r=t?t.e.nodes_start:i,n=e.e.nodes_start;n!==a;){var s=aa(n);r.before(n),n=s}}function Ye(e,t,i){t===null?e.first=i:(t.next=i,t.e.next=i&&i.e),i!==null&&(i.prev=t,i.e.prev=t&&t.e)}function Fa(e,t,i,a,r){var l;var n=(l=t.$$slots)==null?void 0:l[i],s=!1;n===!0&&(n=t[i==="default"?"children":i],s=!0),n===void 0||n(e,s?()=>a:a)}function bn(e){var t,i,a="";if(typeof e=="string"||typeof e=="number")a+=e;else if(typeof e=="object")if(Array.isArray(e)){var r=e.length;for(t=0;t<r;t++)e[t]&&(i=bn(e[t]))&&(a&&(a+=" "),a+=i)}else for(i in e)e[i]&&(a&&(a+=" "),a+=i);return a}function Ho(){for(var e,t,i=0,a="",r=arguments.length;i<r;i++)(e=arguments[i])&&(t=bn(e))&&(a&&(a+=" "),a+=t);return a}function pt(e){return typeof e=="object"?Ho(e):e??""}function _p(e,t){var i=e.__attributes??(e.__attributes={});i.value===(i.value=t??void 0)||e.value===t&&(t!==0||e.nodeName!=="PROGRESS")||(e.value=t??"")}function Cp(e,t){var i=e.__attributes??(e.__attributes={});i.checked!==(i.checked=t??void 0)&&(e.checked=t)}function wr(e,t,i,a){var r=e.__attributes??(e.__attributes={});r[t]!==(r[t]=i)&&(t==="style"&&"__styles"in e&&(e.__styles={}),t==="loading"&&(e[Ol]=i),i==null?e.removeAttribute(t):typeof i!="string"&&Zo(e).includes(t)?e[t]=i:e.setAttribute(t,i))}var br=new Map;function Zo(e){var t=br.get(e.nodeName);if(t)return t;br.set(e.nodeName,t=[]);for(var i,a=e,r=Element.prototype;r!==a;){i=Vr(a);for(var n in i)i[n].set&&t.push(n);a=Qa(a)}return t}function ae(e,t,i){var a=e.__className,r=Go(t,i);(a!==r||tn)&&(t==null&&!i?e.removeAttribute("class"):e.className=r,e.__className=r)}function Go(e,t){return(e??"")+(t?" "+t:"")}const $o=()=>performance.now(),Ve={tick:e=>requestAnimationFrame(e),now:()=>$o(),tasks:new Set};function En(){const e=Ve.now();Ve.tasks.forEach(t=>{t.c(e)||(Ve.tasks.delete(t),t.f())}),Ve.tasks.size!==0&&Ve.tick(En)}function Uo(e){let t;return Ve.tasks.size===0&&Ve.tick(En),{promise:new Promise(i=>{Ve.tasks.add(t={c:e,f:i})}),abort(){Ve.tasks.delete(t)}}}function _i(e,t){la(()=>{e.dispatchEvent(new CustomEvent(t))})}function jo(e){if(e==="float")return"cssFloat";if(e==="offset")return"cssOffset";if(e.startsWith("--"))return e;const t=e.split("-");return t.length===1?t[0]:t[0]+t.slice(1).map(i=>i[0].toUpperCase()+i.slice(1)).join("")}function Er(e){const t={},i=e.split(";");for(const a of i){const[r,n]=a.split(":");if(!r||n===void 0)break;const s=jo(r.trim());t[s]=n.trim()}return t}const zo=e=>e;function Tp(e,t,i){var a=Ei,r,n,s,l=null;a.a??(a.a={element:e,measure(){r=this.element.getBoundingClientRect()},apply(){if(s==null||s.abort(),n=this.element.getBoundingClientRect(),r.left!==n.left||r.right!==n.right||r.top!==n.top||r.bottom!==n.bottom){const u=t()(this.element,{from:r,to:n},i==null?void 0:i());s=Bi(this.element,u,void 0,1,()=>{s==null||s.abort(),s=void 0})}},fix(){if(!e.getAnimations().length){var{position:u,width:c,height:d}=getComputedStyle(e);if(u!=="absolute"&&u!=="fixed"){var f=e.style;l={position:f.position,width:f.width,height:f.height,transform:f.transform},f.position="absolute",f.width=c,f.height=d;var p=e.getBoundingClientRect();if(r.left!==p.left||r.top!==p.top){var h=`translate(${r.left-p.left}px, ${r.top-p.top}px)`;f.transform=f.transform?`${f.transform} ${h}`:h}}}},unfix(){if(l){var u=e.style;u.position=l.position,u.width=l.width,u.height=l.height,u.transform=l.transform}}}),a.a.element=e}function wp(e,t,i,a){var r=(e&Il)!==0,n=(e&eo)!==0,s=r&&n,l=(e&to)!==0,u=s?"both":r?"in":"out",c,d=t.inert,f=t.style.overflow,p,h;function y(){var D=$,w=Z;Ee(null),ke(null);try{return c??(c=i()(t,(a==null?void 0:a())??{},{direction:u}))}finally{Ee(D),ke(w)}}var v={is_global:l,in(){var D;if(t.inert=d,!r){h==null||h.abort(),(D=h==null?void 0:h.reset)==null||D.call(h);return}n||p==null||p.abort(),_i(t,"introstart"),p=Bi(t,y(),h,1,()=>{_i(t,"introend"),p==null||p.abort(),p=c=void 0,t.style.overflow=f})},out(D){if(!n){D==null||D(),c=void 0;return}t.inert=!0,_i(t,"outrostart"),h=Bi(t,y(),p,0,()=>{_i(t,"outroend"),D==null||D()})},stop:()=>{p==null||p.abort(),h==null||h.abort()}},g=Z;if((g.transitions??(g.transitions=[])).push(v),r&&Ma){var m=l;if(!m){for(var T=g.parent;T&&T.f&ta;)for(;(T=T.parent)&&!(T.f&Ii););m=!T||(T.f&Qr)!==0}m&&Rt(()=>{qe(()=>v.in())})}}function Bi(e,t,i,a,r){var n=a===1;if(xl(t)){var s,l=!1;return _t(()=>{if(!l){var g=t({direction:n?"in":"out"});s=Bi(e,g,i,a,r)}}),{abort:()=>{l=!0,s==null||s.abort()},deactivate:()=>s.deactivate(),reset:()=>s.reset(),t:()=>s.t()}}if(i==null||i.deactivate(),!(t!=null&&t.duration))return r(),{abort:Wt,deactivate:Wt,reset:Wt,t:()=>a};const{delay:u=0,css:c,tick:d,easing:f=zo}=t;var p=[];if(n&&i===void 0&&(d&&d(0,1),c)){var h=Er(c(0,1));p.push(h,h)}var y=()=>1-a,v=e.animate(p,{duration:u});return v.onfinish=()=>{var g=(i==null?void 0:i.t())??1-a;i==null||i.abort();var m=a-g,T=t.duration*Math.abs(m),D=[];if(T>0){var w=!1;if(c)for(var A=Math.ceil(T/16.666666666666668),J=0;J<=A;J+=1){var pe=g+m*f(J/A),q=Er(c(pe,1-pe));D.push(q),w||(w=q.overflow==="hidden")}w&&(e.style.overflow="hidden"),y=()=>{var N=v.currentTime;return g+m*f(N/T)},d&&Uo(()=>{if(v.playState!=="running")return!1;var N=y();return d(N,1-N),!0})}v=e.animate(D,{duration:T,fill:"forwards"}),v.onfinish=()=>{y=()=>a,d==null||d(a,1-a),r()}},{abort:()=>{v&&(v.cancel(),v.effect=null,v.onfinish=Wt)},deactivate:()=>{r=Wt},reset:()=>{a===0&&(d==null||d(1,0))},t:()=>y()}}function bp(e,t,i=t){var a=Lt();ci(e,"input",r=>{var n=r?e.defaultValue:e.value;if(n=va(e)?ma(n):n,i(n),a&&n!==(n=t())){var s=e.selectionStart,l=e.selectionEnd;e.value=n??"",l!==null&&(e.selectionStart=s,e.selectionEnd=Math.min(l,e.value.length))}}),qe(t)==null&&e.value&&i(va(e)?ma(e.value):e.value),Ht(()=>{var r=t();va(e)&&r===ma(e.value)||e.type==="date"&&!r&&!e.value||r!==e.value&&(e.value=r??"")})}const ya=new Set;function Ep(e,t,i,a,r=a){var n=i.getAttribute("type")==="checkbox",s=e;if(t!==null)for(var l of t)s=s[l]??(s[l]=[]);s.push(i),ci(i,"change",()=>{var u=i.__value;n&&(u=Vo(s,u,i.checked)),r(u)},()=>r(n?[]:null)),Ht(()=>{var u=a();n?(u=u||[],i.checked=u.includes(i.__value)):i.checked=an(i.__value,u)}),Ja(()=>{var u=s.indexOf(i);u!==-1&&s.splice(u,1)}),ya.has(s)||(ya.add(s),_t(()=>{s.sort((u,c)=>u.compareDocumentPosition(c)===4?-1:1),ya.delete(s)})),_t(()=>{})}function kp(e,t,i=t){ci(e,"change",a=>{var r=a?e.defaultChecked:e.checked;i(r)}),qe(t)==null&&i(e.checked),Ht(()=>{var a=t();e.checked=!!a})}function Vo(e,t,i){for(var a=new Set,r=0;r<e.length;r+=1)e[r].checked&&a.add(e[r].__value);return i||a.delete(t),Array.from(a)}function va(e){var t=e.type;return t==="number"||t==="range"}function ma(e){return e===""?null:+e}function Dp(e,t,i=t){ci(e,"change",()=>{i(e.files)}),Ht(()=>{e.files=t()})}function kn(e,t,i){if(e.multiple)return Qo(e,t);for(var a of e.options){var r=Xt(a);if(an(r,t)){a.selected=!0;return}}(!i||t!==void 0)&&(e.selectedIndex=-1)}function Wo(e,t){Rt(()=>{var i=new MutationObserver(()=>{var a=e.__value;kn(e,a)});return i.observe(e,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{i.disconnect()}})}function xp(e,t,i=t){var a=!0;ci(e,"change",r=>{var n=r?"[selected]":":checked",s;if(e.multiple)s=[].map.call(e.querySelectorAll(n),Xt);else{var l=e.querySelector(n)??e.querySelector("option:not([disabled])");s=l&&Xt(l)}i(s)}),Rt(()=>{var r=t();if(kn(e,r,a),a&&r===void 0){var n=e.querySelector(":checked");n!==null&&(r=Xt(n),i(r))}e.__value=r,a=!1}),Wo(e)}function Qo(e,t){for(var i of e.options)i.selected=~t.indexOf(Xt(i))}function Xt(e){return"__value"in e?e.__value:e.value}function kr(e,t){return e===t||(e==null?void 0:e[Qe])===t}function Ap(e={},t,i,a){return Rt(()=>{var r,n;return Ht(()=>{r=n,n=[],qe(()=>{e!==i(...n)&&(t(e,...n),r&&kr(i(...r),e)&&t(null,...r))})}),()=>{_t(()=>{n&&kr(i(...n),e)&&t(null,...n)})}}),e}function Pp(e,t){Po(window,["resize"],()=>la(()=>t(window[e])))}function Zt(e=!1){const t=W,i=t.l.u;if(!i)return;let a=()=>ko(t.s);if(e){let r=0,n={};const s=Jt(()=>{let l=!1;const u=t.s;for(const c in u)u[c]!==n[c]&&(n[c]=u[c],l=!0);return l&&r++,r});a=()=>P(s)}i.b.length&&uo(()=>{Dr(t,a),Da(i.b)}),mr(()=>{const r=qe(()=>i.m.map(Pl));return()=>{for(const n of r)typeof n=="function"&&n()}}),i.a.length&&mr(()=>{Dr(t,a),Da(i.a)})}function Dr(e,t){if(e.l.s)for(const i of e.l.s)P(i);t()}let Ci=!1;function Xo(e){var t=Ci;try{return Ci=!1,[e(),Ci]}finally{Ci=t}}function K(e,t,i,a){var pe;var r=(i&Ql)!==0,n=!li||(i&Xl)!==0,s=(i&Yl)!==0,l=(i&Jl)!==0,u=!1,c;s?[c,u]=Xo(()=>e[t]):c=e[t];var d=Qe in e||Fl in e,f=s&&(((pe=At(e,t))==null?void 0:pe.set)??(d&&t in e&&(q=>e[t]=q)))||void 0,p=a,h=!0,y=!1,v=()=>(y=!0,h&&(h=!1,l?p=qe(a):p=a),p);c===void 0&&a!==void 0&&(f&&n&&Hl(),c=v(),f&&f(c));var g;if(n)g=()=>{var q=e[t];return q===void 0?v():(h=!0,y=!1,q)};else{var m=(r?Jt:at)(()=>e[t]);m.f|=Xr,g=()=>{var q=P(m);return q!==void 0&&(p=void 0),q===void 0?p:q}}if(!(i&Kl))return g;if(f){var T=e.$$legacy;return function(q,N){return arguments.length>0?((!n||!N||T||u)&&f(N?g():q),q):g()}}var D=!1,w=!1,A=Yt(c),J=Jt(()=>{var q=g(),N=P(A);return D?(D=!1,w=!0,N):(w=!1,A.v=q)});return r||(J.equals=Xa),function(q,N){if(et!==null&&(D=w,g(),P(A)),arguments.length>0){const b=N?P(J):n&&s?Ie(q):q;return J.equals(b)||(D=!0,Y(A,b),y&&p!==void 0&&(p=b),qe(()=>P(J))),q}return P(J)}}const Ko="5";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(Ko);zl();class Mp{constructor(t,i,a){o(this,"_dbname");o(this,"_dbversion");o(this,"dbPromise");o(this,"getTran",async(t,i)=>(await this.dbPromise).transaction(t,i));o(this,"reset",async()=>(await indexedDB.databases().then(t=>{console.log(t)}),await new Promise((t,i)=>{const a=indexedDB.deleteDatabase(this._dbname);a.onsuccess=()=>{console.log("onsuccess"),t()},a.onerror=r=>{console.log("onerror"),i(r)}})));o(this,"getAll",async t=>{const i=await this.dbPromise;return new Promise((a,r)=>{const l=i.transaction([t],"readonly").objectStore(t).getAll();l.onsuccess=()=>{a(l.result)},l.onerror=u=>{r(u)}})});o(this,"get",async(t,i)=>{const a=await this.dbPromise;return new Promise((r,n)=>{const u=a.transaction([t],"readonly").objectStore(t).get(i);u.onsuccess=()=>{r(u.result)},u.onerror=c=>{n(c)}})});o(this,"getMany",async(t,i)=>{const n=(await this.dbPromise).transaction([t],"readonly").objectStore(t),s=i.map(l=>new Promise((u,c)=>{const d=n.get(l);d.onsuccess=()=>{u(d.result)},d.onerror=f=>{c(f)}}));return await Promise.all(s)});o(this,"putRecords",async(t,i)=>{const r=(await this.dbPromise).transaction([t],"readwrite"),n=r.objectStore(t),s=i.map(l=>({record:l,request:n.put(l)}));return new Promise((l,u)=>{r.oncomplete=()=>l(s.map(c=>Object.assign({id:c.request.result},c.record))),r.onerror=c=>u(c)})});o(this,"deleteRecords",async(t,i)=>{const r=(await this.dbPromise).transaction([t],"readwrite"),n=r.objectStore(t),s=i.map(l=>({key:l,request:n.delete(l)}));return new Promise((l,u)=>{r.oncomplete=()=>{console.log(s.map(c=>c.request.result)),l()},r.onerror=c=>u(c)})});this._dbname=t,this._dbversion=i,this.dbPromise=new Promise((r,n)=>{const s=indexedDB.open(t,i);s.onsuccess=l=>{if(console.log(l),!l.target){console.log("event.target is undefined"),n("event.target is undefined");return}const u=l.target.result;if(!u){console.log("event.target.result is undefined"),n("event.target.result is undefined");return}u.onversionchange=c=>{console.log(c),u.close()},r(u)},s.onupgradeneeded=l=>{console.log("onupgradeneeded");const u=l.target.result;a.filter(c=>!u.objectStoreNames.contains(c)).map(c=>u.createObjectStore(c,{keyPath:"id",autoIncrement:!0}))},s.onerror=l=>{console.log(l),n(l)},s.onblocked=l=>{console.log(l),n(l)}}),console.log(this.dbPromise)}get dbversion(){return this._dbversion}}class V{constructor(){o(this,"handlers",[])}get length(){return this.handlers.length}append(t){this.handlers.push(t)}remove(t){this.handlers=this.handlers.filter(i=>i!==t)}trigger(t){this.handlers.slice(0).filter(i=>i(t)==="RemoveMe").forEach(i=>this.remove(i))}clear(){this.handlers.splice(0)}expose(){return this}}class xr{constructor(){o(this,"handler")}set(t){this.handler=t}async call(t){if(!this.handler)throw Error("illegal state error");return await this.handler(t)}expose(){return this}}class ar{constructor(t,i,a,r){o(this,"_name");o(this,"_createVersion");o(this,"mountResolver",()=>{});o(this,"_indexedDb");o(this,"onInsertEvent",new V);o(this,"onBeforeInsertEvent",new xr);o(this,"onUpdateEvent",new V);o(this,"onBeforeUpdateEvent",new xr);o(this,"onDeleteEvent",new V);o(this,"prepareInitialRecords",()=>{const t=new Date;return this._prepareInitialRecords().map(i=>Object.assign(i,{createdAt:t,updatedAt:t,dbVersion:this._createVersion}))});o(this,"resolveMount",()=>this.mountResolver());o(this,"patchForInsert",(t,i)=>{t.newRecords.forEach(a=>{i[a.id]=a})});o(this,"patchForUpdate",(t,i)=>{t.recordPairs.forEach(a=>{i[a.newRecord.id]={...a.newRecord}})});o(this,"patchForDelete",(t,i)=>{t.oldRecords.forEach(a=>{delete i[a.id]})});this._indexedDb=t,this._name=i,this._createVersion=t.dbversion,this.getAll().then(n=>n.reduce((s,l)=>(s[l.id]=l,s),{})).then(n=>{console.log(this.name,n),this.onBeforeInsertEvent.set(a??(()=>Promise.resolve())),this.onBeforeUpdateEvent.set(r??(()=>Promise.resolve()))})}get name(){return this._name}get createVersion(){return this._createVersion}get oninsert(){return this.onInsertEvent.expose()}get onbeforeinsert(){return this.onBeforeInsertEvent.expose()}get onupdate(){return this.onUpdateEvent.expose()}get onbeforeupdate(){return this.onBeforeUpdateEvent.expose()}get ondelete(){return this.onDeleteEvent.expose()}getAll(){return this._indexedDb.getAll(this.name)}get(t){return this._indexedDb.get(this.name,t)}async insertMany(t){const i=new Date,a=t.map(n=>{const s={createdAt:i,updatedAt:i,dbVersion:this._createVersion};return Object.assign(n,s)});await this.onBeforeInsertEvent.call({sender:this,newRecords:a,timestamp:i});const r=await this._indexedDb.putRecords(this.name,a);return this.onInsertEvent.trigger({sender:this,newRecords:r,timestamp:i}),r}async insert(t){return(await this.insertMany([t]))[0]}async updateMany(t,i){const a=new Date,r=[];return(await this._indexedDb.getMany(this.name,t)).forEach(s=>{const l={...s},u={...l};r.push({newRecord:Object.assign(i(u),{updatedAt:a,dbVersion:this._createVersion}),oldRecord:l})}),await this.onBeforeUpdateEvent.call({sender:this,recordPairs:r,timestamp:a}),await this._indexedDb.putRecords(this.name,r.map(s=>s.newRecord)),this.onUpdateEvent.trigger({sender:this,recordPairs:r,timestamp:a}),r.map(s=>s.newRecord)}async update(t,i){return(await this.updateMany([t],i))[0]}async delete(t){const i=new Date,a=await this._indexedDb.getMany(this.name,t);await this._indexedDb.deleteRecords(this.name,t),this.onDeleteEvent.trigger({sender:this,oldRecords:a,timestamp:i})}}const Fp=["Deck","ExtraDeck"],Op={Deck:"メインデッキ",ExtraDeck:"エクストラデッキ"},Yo=["Monster","Spell","Trap","XyzMaterial"],Np={Monster:"モンスター",Spell:"魔法",Trap:"罠",XyzMaterial:"XYZ素材"},Li=["Fusion","Synchro","Xyz","Link"],Dn=[...Li,"SpecialSummon","Ritual"],xn=[...Dn,"NormalSummonOnly","RegularSpecialSummonOnly","FreeReborn"],Jo=["Toon","Spirit","Union","Gemini","FlipEffect"],Io=["Tuner","Effect","Normal","Pendulum","Token"],Bp=[...Jo,...Io,...xn],ec={Synchro:"シンクロ",Fusion:"融合",Xyz:"エクシーズ",Link:"リンク",Ritual:"儀式",SpecialSummon:"特殊召喚",Toon:"トゥーン",Spirit:"スピリット",Union:"ユニオン",Gemini:"デュアル",FlipEffect:"リバース",Tuner:"チューナー",Effect:"効果",Normal:"通常",Pendulum:"ペンデュラム",Token:"トークン",FreeReborn:"特殊召喚モンスター（蘇生制限なし）",NormalSummonOnly:"特殊召喚不可",RegularSpecialSummonOnly:"正規の方法以外での特殊召喚不可"},tc={Synchro:"🎵",Fusion:"🌀",Xyz:"📰",Link:"⛓️",Ritual:"📜",SpecialSummon:"🔯",Toon:"📖",Spirit:"👻",Union:"🚗",Gemini:"👫",FlipEffect:"🔄",Tuner:"🎶",Effect:"✨",Normal:"🔘",Pendulum:"💠",Token:"🐏",FreeReborn:"🆓",NormalSummonOnly:"🔲",RegularSpecialSummonOnly:"❗"},Lp=["Light","Dark","Earth","Water","Fire","Wind","Divine"],qp={Light:"光",Dark:"闇",Earth:"地",Water:"水",Fire:"炎",Wind:"風",Divine:"神"},Rp=["Aqua","Beast","BeastWarrior","CreatorGod","Cyberse","Dinosaur","DivineBeast","Dragon","Fairy","Fiend","Fish","Insect","Illusion","Machine","Plant","Psychic","Pyro","Reptile","Rock","SeaSerpent","Spellcaster","Thunder","Warrior","WingedBeast","Wyrm","Zombie"],Hp=["Normal","Continuous","Field","QuickPlay","Equip","Ritual","PendulumScale"],ic={Normal:"通常",Continuous:"永続",Field:"フィールド",QuickPlay:"速攻",Equip:"装備",Ritual:"儀式",PendulumScale:"ペンデュラム"},Zp=["Normal","Continuous","Counter"],ac={Normal:"通常",Continuous:"永続",Counter:"カウンター"},k=["Attack","Defense"],Ti={Attack:"攻撃表示",Defense:"守備表示",Set:"裏側守備表示"},An=["level","rank","attack","defense","pendulumScaleR","pendulumScaleL"],rc={Aqua:"水",Beast:"獣",BeastWarrior:"獣戦士",CreatorGod:"創造神",Cyberse:"サイバース",Dinosaur:"恐竜",DivineBeast:"幻獣神",Dragon:"ドラゴン",Fairy:"天使",Fiend:"悪魔",Fish:"魚",Insect:"昆虫",Illusion:"幻想魔",Machine:"機械",Plant:"植物",Psychic:"サイキック",Pyro:"炎",Reptile:"爬虫類",Rock:"岩石",SeaSerpent:"海竜",Spellcaster:"魔法使い",Thunder:"雷",Warrior:"戦士",WingedBeast:"鳥獣",Wyrm:"幻竜",Zombie:"アンデット"},nc={Aqua:"🚰",Beast:"🐅",BeastWarrior:"🦁",CreatorGod:"🔆",Cyberse:"💻️",Dinosaur:"🦖",DivineBeast:"💫",Dragon:"🐲",Fairy:"👼",Fiend:"👿",Fish:"🐟️",Insect:"🦋",Illusion:"🤡",Machine:"🤖",Plant:"🌱",Psychic:"👁️",Pyro:"🔥",Reptile:"🦎",Rock:"⛰",SeaSerpent:"🐍",Spellcaster:"🧙",Thunder:"⚡️",Warrior:"⚔️",WingedBeast:"🦅",Wyrm:"🐉",Zombie:"🦴"},sc=["TopLeft","TopCenter","TopRight","MiddleLeft","MiddleRight","BottomLeft","BottomCenter","BottomRight"],Pn={TopLeft:{name:"左上",linkArrow:{offsetRow:-1,offsetColumn:-1}},TopCenter:{name:"上",linkArrow:{offsetRow:-1,offsetColumn:0}},TopRight:{name:"右上",linkArrow:{offsetRow:-1,offsetColumn:1}},MiddleLeft:{name:"左",linkArrow:{offsetRow:0,offsetColumn:-1}},MiddleRight:{name:"右",linkArrow:{offsetRow:0,offsetColumn:1}},BottomLeft:{name:"左下",linkArrow:{offsetRow:1,offsetColumn:-1}},BottomCenter:{name:"下",linkArrow:{offsetRow:1,offsetColumn:0}},BottomRight:{name:"右下",linkArrow:{offsetRow:1,offsetColumn:1}}};sc.reduce((e,t)=>(e[Pn[t].name]=t,e),{});const Gp=e=>e.cardId??!1?`https://www.db.yugioh-card.com/yugiohdb/card_search.action?ope=2&cid=${e.cardId}`:`https://www.db.yugioh-card.com/yugiohdb/card_search.action?ope=1&sess=1&rp=10&mode=&sort=1&keyword=${e.name}&stype=1&ctype=&othercon=2&starfr=&starto=&pscalefr=&pscaleto=&linkmarkerfr=&linkmarkerto=&link_m=2&atkfr=&atkto=&deffr=&defto=&releaseDStart=1&releaseMStart=1&releaseYStart=1999&releaseDEnd=&releaseMEnd=&releaseYEnd=`,Mn=(e,t)=>{const i=e.monsterCategories??[],a=t.monsterCategories??[];for(const r of Li.toReversed()){if(i.includes(r)&&!a.includes(r))return 1;if(!i.includes(r)&&a.includes(r))return-1}if(e.kind===t.kind){if(e.kind==="Monster"){if((e.link??0)!==(t.link??0))return(e.link??0)-(t.link??0);if((e.rank??0)!==(t.rank??0))return(e.rank??0)-(t.rank??0);if((e.level??0)!==(t.level??0))return(e.level??0)-(t.level??0);if((e.attack??0)!==(t.attack??0))return(e.attack??0)-(t.attack??0);if((e.defense??0)!==(t.defense??0))return(e.defense??0)-(t.defense??0)}return e.name.localeCompare(t.name,"Ja")}for(const r of Yo){if(e.kind===r)return-1;if(t.kind===r)return 1}return e.name.localeCompare(t.name,"Ja")},Fn=["Deck","ExtraDeck"],ca=["Graveyard","Banished"],On=[...Fn,...ca],lc=[...On,"Hand"],j=["MonsterZone","ExtraMonsterZone"],qi=["SpellAndTrapZone","FieldSpellZone"],me=[...j,...qi],Nn=["XyzMaterialZone","WaitingRoom"],Me=[...lc,...me,...Nn],oc={Deck:"デッキ",ExtraDeck:"EXデッキ",Graveyard:"墓地",Banished:"除外",Hand:"手札",MonsterZone:"場",ExtraMonsterZone:"場",SpellAndTrapZone:"場",FieldSpellZone:"場",XyzMaterialZone:"XYZ素材",WaitingRoom:"虚無"},cc={Deck:"Random",ExtraDeck:"Bottom",Graveyard:"Top",Banished:"Top",Hand:"Bottom",MonsterZone:"Top",ExtraMonsterZone:"Top",SpellAndTrapZone:"Top",FieldSpellZone:"Top",XyzMaterialZone:"Bottom",WaitingRoom:"Bottom"},uc={Deck:"FaceDown",ExtraDeck:"FaceDown",Graveyard:"FaceUp",Banished:"FaceUp",Hand:"FaceDown",MonsterZone:"FaceUp",ExtraMonsterZone:"FaceUp",SpellAndTrapZone:"FaceUp",FieldSpellZone:"FaceUp",XyzMaterialZone:"FaceUp",WaitingRoom:"FaceUp"},Oa={0:{0:"Hand"},1:{0:"Deck",1:"SpellAndTrapZone",2:"SpellAndTrapZone",3:"SpellAndTrapZone",4:"SpellAndTrapZone",5:"SpellAndTrapZone",6:"ExtraDeck"},2:{0:"Graveyard",1:"MonsterZone",2:"MonsterZone",3:"MonsterZone",4:"MonsterZone",5:"MonsterZone",6:"FieldSpellZone"},3:{0:"Banished",1:"XyzMaterialZone",2:"ExtraMonsterZone",3:"WaitingRoom",4:"ExtraMonsterZone",5:"XyzMaterialZone",6:"Banished"},4:{0:"FieldSpellZone",1:"MonsterZone",2:"MonsterZone",3:"MonsterZone",4:"MonsterZone",5:"MonsterZone",6:"Graveyard"},5:{0:"ExtraDeck",1:"SpellAndTrapZone",2:"SpellAndTrapZone",3:"SpellAndTrapZone",4:"SpellAndTrapZone",5:"SpellAndTrapZone",6:"Deck"},6:{0:"Hand"}};class dc{constructor(t,i,a,r){o(this,"onUpdateEvent",new V);o(this,"field");o(this,"row");o(this,"column");o(this,"cellType");o(this,"_owner");o(this,"_requiresRecalcLinkArrows");o(this,"_linkArrowSources");o(this,"_needsShuffle",!1);o(this,"recalcLinkArrows",()=>{this.isMonsterZoneLikeCell&&(this._requiresRecalcLinkArrows=!1,this._linkArrowSources=this.neighbors.filter(t=>t.isMonsterZoneLikeCell).filter(t=>t.cardEntities.length).filter(t=>t.cardEntities[0].linkArrows.some(i=>this.row===t.row+i.offsetRow&&this.column===t.column+i.offsetColumn)).map(t=>t.cardEntities[0]))});o(this,"_entities");o(this,"releaseEntities",t=>{var i;return this._entities=this._entities.filter(a=>a!==t),this.isMonsterZoneLikeCell&&((i=t.origin.monsterCategories)!=null&&i.includes("Link"))&&(this._requiresRecalcLinkArrows=!0),this.onUpdateEvent.trigger(),t});o(this,"acceptEntities",(t,i)=>{var a;if(i==="Fix"){if(!this._entities.includes(t))throw new _("引数とセルの状態が矛盾している。",this,t,i)}else i==="Top"?this._entities.unshift(t):this._entities.push(t),i==="Random"&&(this._needsShuffle=!0),this._entities.forEach(r=>{r.cell=this}),this.isMonsterZoneLikeCell&&((a=t.origin.monsterCategories)!=null&&a.includes("Link"))&&(this._requiresRecalcLinkArrows=!0);this.onUpdateEvent.trigger()});o(this,"shuffle",()=>{this._entities=this.entities.shuffle(),this._needsShuffle=!1,this.field.duel.log.info("デッキをシャッフル。",this.owner)});o(this,"toString",()=>this.isMonsterZoneLikeCell||this.cellType==="SpellAndTrapZone"?`${this.cellType}(${this.row},${this.column})`:this.cellType);this.field=t,this.row=i,this.column=a,this.cellType=Oa[i][a],this._owner=r,this._entities=[],this._linkArrowSources=[],this._requiresRecalcLinkArrows=!1}get onUpdate(){return this.onUpdateEvent.expose()}get owner(){var t;return this._owner||((t=this.cardEntities[0])==null?void 0:t.owner)}get requiresRecalcLinkArrows(){return this._requiresRecalcLinkArrows}get linkArrowSources(){return this._linkArrowSources}get needsShuffle(){return this._needsShuffle}get entities(){return this._entities}get visibleEntities(){return this._entities.filter(t=>Fr.find(i=>i===t.entityType))}get cardEntities(){return this._entities.filter(t=>Fr.find(i=>i===t.entityType)).filter(t=>t.kind!=="XyzMaterial")}get xyzMaterials(){return this._entities.filter(t=>t.kind==="XyzMaterial")}get targetForAttack(){return this.cellType==="Hand"?this._entities.find(t=>t.entityType==="Duelist"):this.cardEntities[0]}get isAvailable(){return this.cardEntities.length===0&&this._entities.filter(t=>Jc.find(i=>i===t.entityType)).length===0}get isAvailableForPendulum(){return this.isAvailable&&this.isSpellTrapZoneLikeCell&&(this.column===1||this.column===5)}get isStackCell(){return On.some(t=>t===this.cellType)}get isPlayFieldCell(){return me.some(t=>t===this.cellType)}get isMonsterZoneLikeCell(){return j.some(t=>t===this.cellType)}get isSpellTrapZoneLikeCell(){return qi.some(t=>t===this.cellType)}get isDisabledCell(){return Nn.some(t=>t===this.cellType)}get isTrashCell(){return ca.some(t=>t===this.cellType)}get neighbors(){const t=[this.row-1,this.row,this.row+1].filter(a=>a>=0&&a<=6),i=[this.column-1,this.column,this.column+1].filter(a=>a>=0&&a<=6);return t.flatMap(a=>i.map(r=>this.field.cells[a][r])).filter(a=>a.isMonsterZoneLikeCell).filter(a=>a!==this)}get shortName(){return oc[this.cellType]}}const Bn=["NormalSummon","SpecialSummon","FlipSummon"],rr=["IgnitionEffect","TriggerEffect","QuickEffect","CardActivation"],fc=[...Bn,...rr,"DeclareAttack"],pc=e=>e==="CardActivation"?"CardActivation":rr.some(t=>t===e)?"EffectActivation":"NonActivate",Vi=class Vi{constructor(t,i,a){o(this,"seq");o(this,"entity");o(this,"_definition");o(this,"validateDuelist",t=>this.entity.controller===t?this.executableDuelistTypes.includes("Controller"):this.executableDuelistTypes.includes("Opponent"));o(this,"canExecute",t=>this.executableCells.includes(this.entity.cell.cellType)&&this.executableFaces.includes(this.entity.face)&&this.executablePeriods.includes(this.entity.duel.clock.period.key)&&this.validateDuelist(t??this.entity.controller));this.seq=t==="AutoSeq"?Vi.nextSeq++:t,this.entity=i,this._definition=a}get definition(){return this._definition}get title(){return this.definition.title}get playType(){return this.definition.playType}get isMandatory(){return this.definition.isMandatory}get executableCells(){return this.definition.executableCells}get executablePeriods(){return this.definition.executablePeriods}get executableFaces(){return this.definition.executableFaces??Gn}get executableDuelistTypes(){return this.definition.executableDuelistTypes??["Controller"]}get isOnlyNTimesPerDuel(){return this.definition.isOnlyNTimesPerDuel??0}get isOnlyNTimesPerTurn(){return this.definition.isOnlyNTimesPerTurn??0}get isOnlyNTimesPerTurnIfFaceup(){return this.definition.isOnlyNTimesPerTurnIfFaceup??0}get isOnlyNTimesIfFaceup(){return this.definition.isOnlyNTimesIfFaceup??0}get isOnlyNTimesPerChain(){return this.definition.isOnlyNTimesPerChain??0}get actionGroupName(){return this.definition.actionGroupName}get duel(){return this.entity.duel}};o(Vi,"nextSeq",0);let ai=Vi;class ui{constructor(){o(this,"pooledOperators",[]);o(this,"bundles",[]);o(this,"excludesExpired",()=>{this.bundles.forEach(t=>t.excludesExpired()),this.pooledOperators=this.pooledOperators.filter(t=>t.validateAlive())});o(this,"append",t=>{this.bundles.push(t)});o(this,"push",t=>{if(!t.isContinuous)throw new _("staticへの追加は永続以外不可",t);this.excludesExpired(),this.distribute(t),this.pooledOperators.push(t)});o(this,"distributeAll",t=>(this.excludesExpired(),this.pooledOperators.flatMap(this.distribute).getDistinct().forEach(i=>i.operators.sort((a,r)=>a.seq-r.seq)),this.afterDistributeAll(t)));o(this,"distribute",t=>this.bundles.filter(i=>i.entity.exist).filter(i=>i.operators.every(a=>a.seq!==t.seq)).filter(i=>t.isApplicableTo(i.entity)).filter(i=>i.entity.canBeEffected(t.effectOwner,t.isSpawnedBy,t.actionAttr)).map(i=>(i.push(t),i)));o(this,"removeItem",t=>{this.pooledOperators=this.pooledOperators.filter(i=>i.seq!==t)})}}class di{constructor(t,i){o(this,"pool");o(this,"entity");o(this,"_operators");o(this,"excludesExpired",()=>{this._operators=this._operators.filter(t=>{const i=t.validateAlive()&&t.isApplicableTo(this.entity);return i||(console.info(`before remove ${this.entity.toString} ${t.title}`),t.beforeRemove(this)),i})});o(this,"push",t=>this.entity.procFilterBundle.filter(["Effect"],t.effectOwner,t.isSpawnedBy,t.actionAttr,[])?(this.beforePush(t),this._operators.push(t),this.afterPush(t),!0):!1);o(this,"removeItem",t=>{this._operators=this._operators.filter(i=>i.seq!==t?!0:(i.beforeRemove(this),!1))});this.pool=t,this.entity=i,this._operators=[],this.pool.append(this)}get operators(){return this._operators}get effectiveOperators(){return this.operators.filter(t=>t.isSpawnedBy.isEffective||!t.isContinuous)}}const Wi=class Wi{constructor(t){o(this,"seq");o(this,"title");o(this,"validateAlive");o(this,"isContinuous");o(this,"isSpawnedBy");o(this,"isSpawnedAt");o(this,"activateType");o(this,"actionAttr");o(this,"isApplicableTo");o(this,"effectOwner");this.seq=Wi.nextSeq++,this.title=t.title,this.validateAlive=()=>t.validateAlive(this),this.isContinuous=t.isContinuous,this.isSpawnedBy=t.isSpawnedBy,this.isSpawnedAt=t.isSpawnedBy.duel.clock.getClone(),this.isApplicableTo=i=>t.isApplicableTo(this,i),this.actionAttr=t.actionAttr,this.activateType=this.actionAttr.playType?pc(this.actionAttr.playType):"NonActivate",this.effectOwner=this.isSpawnedBy.controller}get duel(){return this.effectOwner.duel}get isEffective(){return!this.isContinuous||this.activateType==="NonActivate"?!0:this.isSpawnedBy.isEffective}};o(Wi,"nextSeq",0);let Ct=Wi;class gc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>this.bundles.every(i=>i.applyEffectFilter()))}}class hc extends di{constructor(){super(...arguments);o(this,"applyEffectFilter",()=>{const i=this.entity.allStickyEffectOperators.length,a=[];for(;;){const r=this.effectiveOperators.filter(n=>n.procTypes.includes("Effect")).filter(n=>n.isContinuous).find(n=>!a.includes(n.seq));if(!r)break;a.push(r.seq),r.eraseOperators(this.entity)}return this.entity.allStickyEffectOperators.length===i});o(this,"filter",(i,a,r,n,s)=>this.effectiveOperators.filter(l=>l.procTypes.union(i).length).every(l=>l.filter(this.entity,a,r,n,s)));o(this,"beforePush",i=>i.eraseOperators(this.entity));o(this,"afterPush",()=>{})}}const xt=class xt extends Ct{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"procTypes");o(this,"filter");o(this,"eraseOperators",i=>{if(!this.procTypes.includes("Effect"))return 0;const a=i.allStickyEffectOperators.filter(r=>r.isContinuous).filter(r=>!this.filter(i,r.effectOwner,r.isSpawnedBy,r.actionAttr,[])).map(r=>r.seq);return a.forEach(i.procFilterBundle.removeItem),a.forEach(i.statusOperatorBundle.removeItem),a.forEach(i.numericOprsBundle.removeItem),a.length});this.procTypes=i.procTypes,this.filter=i.filter}};o(xt,"createContinuous",(i,a,r,n,s,l)=>new xt({title:i,validateAlive:a,isContinuous:!0,isSpawnedBy:r,actionAttr:{},isApplicableTo:n,procTypes:s,filter:l})),o(xt,"createLingering",(i,a,r,n,s,l,u)=>new xt({title:i,validateAlive:a,isContinuous:!1,isSpawnedBy:r,actionAttr:n,isApplicableTo:s,procTypes:l,filter:u}));let Tt=xt;const Ar={level:1,rank:1,attack:0,defense:0,pendulumScaleR:0,pendulumScaleL:0};class yc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",i=>{if(this.bundles.forEach(r=>r.calcStateAll()),i.field.getMonstersOnFieldStrictly().flatMap(r=>r.numericOprsBundle).flatMap(r=>r.effectiveOperators).some(r=>r.targetStateGen==="calculated")){const n=i.field.getMonstersOnFieldStrictly().filter(s=>(s.atk??0)>=0).map(s=>s.atk??0).reduce((s,l)=>s>l?s:l,0);i.field.getMonstersOnFieldStrictly().forEach(s=>{s.numericOprsBundle.effectiveOperators.filter(l=>l.targetStateGen==="calculated").forEach(l=>{var u;if(!((u=s.status.monsterCategories)!=null&&u.includes("Link")&&l.targetState==="defense")){if(l.stateOperationType==="THE_DEVILS_AVATAR"){s.numericStatus.calculated[l.targetState]=n+100;return}s.numericStatus.calculated[l.targetState]=l.calcValue(s,s.numericStatus.calculated[l.targetState]??0)}})})}return!0})}}class vc extends di{constructor(){super(...arguments);o(this,"beforePush",i=>{const a=this.effectiveOperators.filter(n=>n.targetState===i.targetState).filter(n=>n.isEffective);if(i.kind==="O-L-F"||i.kind==="O-C-F"?(a.filter(n=>n.kind==="O-L-F").forEach(n=>n.negate()),a.filter(n=>n.kind==="L-F").forEach(n=>n.negate())):i.kind==="L-F"||i.kind==="C-F"?a.filter(n=>n.kind==="L-F"||n.kind==="L-A").forEach(n=>n.negate()):i.kind==="X-C-X"&&a.filter(n=>!n.isContinuous).forEach(n=>n.negate()),a.filter(n=>n.isEffective).some(n=>n.kind==="X-C-X")&&!i.isContinuous)return;if(i.stateOperationType!=="Addition"&&i.targetStateGen==="wip"&&a.filter(n=>!n.isContinuous).forEach(n=>n.negate()),i.stateOperationType==="THE_DEVILS_AVATAR"||i.stateOperationType==="Gradius'_Option"){this.entity.numericStatus.calculated[i.targetState]=-Number.MAX_VALUE;return}const r=this.entity.numericStatus.calculated[i.targetState]??0;if(i.stateOperationType==="THE_DEVILS_DREAD-ROOT"){this.entity.numericStatus.calculated[i.targetState]=i.calcValue(this.entity,r);return}if(i.kind==="L-F"){this.entity.numericStatus.wip[i.targetState]=i.calcValue(this.entity,r);return}});o(this,"afterPush",()=>{});o(this,"calcStateAll",()=>An.forEach(this.calcState));o(this,"calcState",i=>{if(!this.entity.isPendulumScale&&!this.entity.isMonster){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories){this.entity.numericStatus.calculated[i]=void 0;return}if(this.entity.status.monsterCategories.includes("Link")&&i!=="attack"){this.entity.numericStatus.calculated[i]=void 0;return}if(this.entity.status.monsterCategories.includes("Xyz")&&i==="level"){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories.includes("Xyz")&&i==="rank"){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories.includes("Pendulum")&&(i==="pendulumScaleL"||i==="pendulumScaleR")){this.entity.numericStatus.calculated[i]=void 0;return}if(i!=="level"&&!this.entity.isOnFieldStrictly){this.entity.numericStatus.origin[i]=this.entity.origin[i],this.entity.numericStatus.wip[i]=this.entity.origin[i],this.entity.numericStatus.calculated[i]=this.entity.origin[i];return}const a=this.entity.origin[i]??0,r=this.entity.numericStatus.wip[i]??0,n=this._operators.filter(d=>d.targetState===i).filter(d=>d.isEffective);if(n.some(d=>d.stateOperationType==="THE_DEVILS_AVATAR"||d.stateOperationType==="Gradius'_Option")&&this.entity.isEffective){this.entity.numericStatus.calculated[i]=-Number.MAX_VALUE;return}const s=n.filter(d=>d.targetState===i).findLast(d=>d.targetStateGen==="origin"),l=s?s.calcValue(this.entity,a??0):a;this.entity.numericStatus.origin[i]=l;let u=l;const c=n.filter(d=>d.targetState===i).filter(d=>d.targetStateGen==="wip").findLast(d=>d.stateOperationType==="Fixation");if(!c)u=n.filter(d=>d.stateOperationType==="Addition").reduce((d,f)=>f.calcValue(this.entity,d),u),this.entity.numericStatus.wip[i]=u;else if(c.isContinuous)u=c.calcValue(this.entity,u),u=n.filter(d=>d.stateOperationType==="Addition").reduce((d,f)=>f.calcValue(this.entity,d),u),this.entity.numericStatus.wip[i]=u;else{let d=!1;u=n.filter(f=>(d=d||f===c,d&&f!==c)).filter(f=>f.stateOperationType==="Addition").reduce((f,p)=>p.calcValue(this.entity,f),r)}u<Ar[i]&&(u=Ar[i]),this.entity.numericStatus.calculated[i]=u})}}const Oe=class Oe extends Ct{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"targetState");o(this,"targetStateGen");o(this,"stateOperationType");o(this,"calcValue");o(this,"_isEffective");o(this,"negate",()=>{this._isEffective=!1});this._isEffective=!0,this.targetState=i.targetState,this.targetStateGen=i.targetStateGen,this.stateOperationType=i.stateOperationType,this.calcValue=(a,r)=>i.calcValue(this.isSpawnedBy,a,r)}get isEffective(){return this._isEffective&&super.isEffective}get kind(){if(this.targetStateGen==="origin"){if(this.stateOperationType==="Fixation")return this.isContinuous?"O-C-F":"O-L-F";throw new _("矛盾したプロパティ",this)}if(this.targetStateGen==="wip"){if(this.stateOperationType==="Addition")return this.isContinuous?"C-A":"L-A";if(this.stateOperationType==="Fixation")return this.isContinuous?"C-F":"L-F";throw new _("矛盾したプロパティ",this)}if(this.stateOperationType==="THE_DEVILS_DREAD-ROOT")return"X-C-F";if(this.stateOperationType==="THE_DEVILS_AVATAR"||this.stateOperationType==="Gradius'_Option")return"X-C-X";throw new _("矛盾したプロパティ",this)}};o(Oe,"createContinuous",(i,a,r,n,s,l,u,c)=>new Oe({title:i,validateAlive:a,isContinuous:!0,isSpawnedBy:r,actionAttr:{},isApplicableTo:n,targetState:s,targetStateGen:l,stateOperationType:u,calcValue:c})),o(Oe,"createLingering",(i,a,r,n,s,l,u)=>new Oe({title:i,validateAlive:a,isContinuous:!1,isSpawnedBy:r,actionAttr:n,isApplicableTo:(c,d)=>d.isOnFieldAsMonsterStrictly,targetState:s,targetStateGen:"wip",stateOperationType:l,calcValue:u})),o(Oe,"createLingeringFixation",(i,a,r,n,s,l)=>Oe.createLingering(i,a,r,n,s,"Fixation",l)),o(Oe,"createLingeringAddition",(i,a,r,n,s,l)=>Oe.createLingering(i,a,r,n,s,"Addition",l));let ne=Oe;const mc=e=>e!==null&&(typeof e=="object"||typeof e=="function"),Ln=e=>Object.keys(e),Sc={draw:"ドローフェイズ",standby:"スタンバイフェイズ",main1:"メインフェイズ１",battle1:"バトルフェイズ",battle2:"バトルフェイズ（追加）",main2:"メインフェイズ２",end:"エンドフェイズ"},_c={start:"スタートステップ",battle:"バトルステップ",damage:"ダメージステップ",end:"エンドステップ"},Cc={start:"ダメージステップ開始時",beforeDmgCalc:"ダメージ計算前",dmgCalc:"ダメージ計算時",afterDmgCalc:"ダメージ計算後",end:"ダメージステップ終了時"},x=["draw","stanby","main1","b1Start","b1Battle","b1End","b2Start","b2Battle","b2End","main2","end"],H=["b1DStart","b1DBeforeDmgCalc","b1DAfterDmgCalc","b1DEnd","b2DStart","b2DBeforeDmgCalc","b2DAfterDmgCalc","b2DEnd"],Tc=["b1DDmgCalc","b2DDmgCalc"],ue=[...x,...H,...Tc],Pr={draw:{phase:"draw",step:void 0,stage:void 0},stanby:{phase:"standby",step:void 0,stage:void 0},main1:{phase:"main1",step:void 0,stage:void 0},b1Start:{phase:"battle1",step:"start",stage:void 0},b1Battle:{phase:"battle1",step:"battle",stage:void 0},b1DStart:{phase:"battle1",step:"battle",stage:"start"},b1DBeforeDmgCalc:{phase:"battle1",step:"battle",stage:"beforeDmgCalc"},b1DDmgCalc:{phase:"battle1",step:"battle",stage:"dmgCalc"},b1DAfterDmgCalc:{phase:"battle1",step:"battle",stage:"afterDmgCalc"},b1DEnd:{phase:"battle1",step:"battle",stage:"end"},b1End:{phase:"battle1",step:"end",stage:void 0},b2Start:{phase:"battle2",step:"start",stage:void 0},b2Battle:{phase:"battle2",step:"battle",stage:void 0},b2DStart:{phase:"battle2",step:"battle",stage:"start"},b2DBeforeDmgCalc:{phase:"battle2",step:"battle",stage:"beforeDmgCalc"},b2DDmgCalc:{phase:"battle2",step:"battle",stage:"dmgCalc"},b2DAfterDmgCalc:{phase:"battle2",step:"battle",stage:"afterDmgCalc"},b2DEnd:{phase:"battle2",step:"battle",stage:"end"},b2End:{phase:"battle2",step:"end",stage:void 0},main2:{phase:"main2",step:void 0,stage:void 0},end:{phase:"end",step:void 0,stage:void 0}},wc=e=>e.stage?Cc[e.stage]:e.step?_c[e.step]:Sc[e.phase],gt=Ln(Pr).reduce((e,t)=>(e[t].key=t,e[t].name=wc(e[t]),e),Pr),Qi=class Qi{constructor(t,i){o(this,"entity");o(this,"isRegular");o(this,"_isStarted");o(this,"info");o(this,"continuousEffectBase");o(this,"updateState",async()=>{if(this.hasToStart!==this.isStarted){if(this.isStarted){if(!this.info)throw new _("illegal state");this._isStarted=!1,await this.continuousEffectBase.finish(this.entity,this.info),this.info=void 0;return}this.info=await this.continuousEffectBase.start(this.entity),this._isStarted=!0}});this._isStarted=!1,this.entity=t,this.continuousEffectBase=i,this.isRegular=this.appliableCellTypes.every(a=>me.find(r=>r===a))&&this.faceList.length===1&&this.faceList[0]==="FaceUp"}get isStarted(){return this._isStarted}get appliableCellTypes(){return this.continuousEffectBase.appliableCellTypes}get appliableDuelPeriodKeys(){return this.continuousEffectBase.appliableDuelPeriodKeys}get faceList(){return this.continuousEffectBase.faceList}get hasToStart(){return!this.appliableCellTypes.includes(this.entity.cell.cellType)||!this.appliableDuelPeriodKeys.includes(this.entity.duel.clock.period.key)||!this.faceList.includes(this.entity.face)?!1:this.continuousEffectBase.canStart(this.entity)}};o(Qi,"createNew",(t,i)=>new Qi(t,i));let Na=Qi;const bc=(e,t,i,a)=>({title:e,appliableCellTypes:t==="Monster"?["MonsterZone","ExtraMonsterZone"]:["FieldSpellZone","SpellAndTrapZone"],appliableDuelPeriodKeys:ue,faceList:["FaceUp"],canStart:r=>!r.info.isPending&&!r.info.isDying,start:async r=>{const n=i(r);return n.forEach(a(r).push),n.map(s=>s.seq)},finish:async(r,n)=>{n.forEach(s=>a(r).removeItem(s))}}),ua=(e,t,i,a,r)=>({title:e,appliableCellTypes:t==="Monster"?["MonsterZone","ExtraMonsterZone"]:["FieldSpellZone","SpellAndTrapZone"],appliableDuelPeriodKeys:ue,faceList:["FaceUp"],canStart:n=>!n.info.isPending&&!n.info.isDying,start:async n=>{const s=a(n),l=i(n);return console.info(`start : ${n.toString()} ⇒ ${l.map(u=>u.toString()).join(" ")} (${s.map(u=>u.title).join(" ")})`),l.map(r).forEach(u=>s.forEach(u.push)),{targets:l,seqList:s.map(u=>u.seq)}},finish:async(n,s)=>{s.targets.map(r).forEach(l=>s.seqList.forEach(u=>l.removeItem(u)))}}),nr=(e,t,i,a)=>ua(e,t,i,a,r=>r.procFilterBundle),Ri=(e,t,i)=>bc(e,t,i,a=>a.field.numericStateOperatorPool),fi=(e,t,i,a)=>ua(e,t,i,a,r=>r.numericOprsBundle),ri=(e,t,i,a)=>ua(e,t,i,a,r=>r.statusOperatorBundle),Ec=(e,t,i,a)=>ua(e,t,i,a,r=>r.damageFilterBundle),qn=e=>!isNaN(Number(e)),Hi=(...e)=>e.length?e.reduce((t,i)=>t>i?t:i):-Number.MAX_VALUE,Zi=(...e)=>e.length?e.reduce((t,i)=>t<i?t:i):Number.MAX_VALUE,kt=(e,t)=>{if((e[0]??Number.MAX_VALUE)>t)return 0;if(e.slice(-1)[0]<t)return e.length;let i=0,a=e.length-1;for(;;){const r=Math.round((i+a)/2);if(r===a||r===i)return e[i]<t?a:i;if(e[r]<t){i=r;continue}a=r}},Fe=[3,5,5,6,6,6,7,8,9,10,11,11,11,12,12,13,13,14,15,15,15,15,15,15,16,16,16,17,18,18,18,21,21,21,22,23,25,25,26,28,28,28,30,30,31,32,32,33,33,34,35,35,36,36,36,37,37,38,38,38,39,41,42,42,43,45,45,45,45,48,48,48,50,51,52,54,54,54,54,56,57,58,59,59,59,59,60,61,63,65,65,65,65,66,67,67,67,69,69,71,71,72,73,73,73,73,73,74,75,75,76,76,77,78,79,80,80,80,80,84,84,84,84,84,84,85,85,85,87,90,91,94,96,96,97,98,101,101,101,101,101];Fe.forEach((e,t)=>{((Fe[kt(Fe,t)-1]||-Number.MAX_VALUE)>=t||(Fe[kt(Fe,t)]||Number.MAX_VALUE)<t)&&console.log(t,kt(Fe,t),(Fe[kt(Fe,t)-1]||-Number.MAX_VALUE)<t,(Fe[kt(Fe,t)]||Number.MAX_VALUE)>=t)});class kc{constructor(t){o(this,"_field");o(this,"_records",[]);o(this,"getIndexOfStartPoint",t=>kt(this._records.map(i=>i.movedAt.totalProcSeq),t));o(this,"push",t=>{this._records.push(t)});o(this,"getCurrentTurnLog",()=>this.getTermLog("Current","turn"));o(this,"getPriviousChainLog",()=>this.getTermLog("Previous","chainSeq"));this._field=t}*getTermLog(t,i){const a=t==="Current"?this._field.duel.clock.currentStartPoints[i]:this._field.duel.clock.previousStartPoints[i];for(let r=this.getIndexOfStartPoint(a);r<this._records.length;r++)yield this._records[r]}}class Dc{constructor(t){o(this,"entity");o(this,"_records");o(this,"_push",t=>{this.entity.field.moveLog.push(t),this._records.push(t)});o(this,"pushForRuleAction",t=>{this._push({entity:this.entity,kind:this.entity.origin.kind,cell:this.entity.cell,face:this.entity.face,orientation:this.entity.orientation,isPending:this.entity.info.isPending,movedAt:this.entity.duel.clock.getClone(),movedAs:[...t,"Rule"]})});o(this,"push",(t,i,a,r,n)=>{let s=this.entity.cell;this.entity.kind==="XyzMaterial"&&(s=this.entity.controller.getXyzMaterialZone()),this._push({entity:this.entity,kind:t,cell:s,face:this.entity.face,orientation:this.entity.orientation,isPending:this.entity.info.isPending,movedAt:this.entity.duel.clock.getClone(),movedAs:i.getDistinct(),movedBy:a,actionOwner:r,chooser:n??r})});o(this,"finalize",()=>{if(!this.latestRecord.isPending)throw new _("想定されない状況");if(this.entity.info.isPending)throw new _("想定されない状況");this._push({...this.latestRecord,isPending:!1,movedAt:this.entity.duel.clock.getClone()})});o(this,"negateSummon",(t,i)=>{const a=this.records.slice(-1)[0];a.cell=this.entity.field.getWaitingRoomCell(),a.movedBy=t,a.movedAs=["SummonNegated"],a.actionOwner=i});this.entity=t,this._records=[]}get records(){return this._records}get latestRecord(){return this.records.slice(-1)[0]}get previousPlaceRecord(){return this.records.findLast(t=>t.cell.cellType!==this.entity.cell.cellType)??this._records[0]}get currentProcRecords(){return this.records.filter(t=>t.movedAt.totalProcSeq===this.entity.duel.clock.totalProcSeq)}get latestArrivalRecord(){if(this.entity.isOnFieldAsMonsterStrictly)return this.records.findLast(t=>t.movedAs.union(["NormalSummon","SpecialSummon","FlipSummon","Flip","ComeBackAlive"]))}}const xc={name:"SpellCounter",type:"Actual",text:"魔力カウンター",emoji:"🔮",sticky:!1,temporary:!1,isOnlyOnField:!0},Ac={name:"KaijuCounter",type:"Actual",text:"壊獣カウンター",emoji:"☢",sticky:!1,temporary:!1,isOnlyOnField:!0},Pc={name:"NamelessCounter",type:"Actual",text:"カウンター",emoji:"💠",sticky:!1,temporary:!1,isOnlyOnField:!0},Mc={name:"IceCounter",type:"Actual",text:"アイスカウンター",emoji:"❄",sticky:!1,temporary:!1,isOnlyOnField:!0},Fc={name:"Curfew",type:"System",text:"自発帰還",emoji:"",sticky:!1,temporary:!1,isOnlyOnField:!0},Oc={name:"SelfDestruction",type:"System",text:"自壊",emoji:"",sticky:!1,temporary:!1,isOnlyOnField:!0},Nc={name:"CycleFlip",type:"System",text:"サイクルリバース",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},Bc={name:"SonicBarrier",type:"System",text:"波動音壁",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},Lc={name:"SonicVerse",type:"System",text:"波動聖句（適用済）",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},qc={name:"IntoTheVoid",type:"System",text:"無の煉獄",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!1},Rc={name:"GoldSarcophagus",type:"System",text:"封印の黄金櫃",emoji:"",sticky:!0,temporary:!1,isOnlyOnField:!1},Hc={SpellCounter:xc,KaijuCounter:Ac,NamelessCounter:Pc,IceCounter:Mc,Curfew:Fc,SelfDestruction:Oc,CycleFlip:Nc,SonicBarrier:Bc,SonicVerse:Lc,IntoTheVoid:qc,GoldSarcophagus:Rc},Dt=Hc,Mr=Object.values(Dt).filter(e=>e.type==="Actual").filter(e=>e.sticky||e.temporary||!e.isOnlyOnField);if(Mr.length)throw new Error(`カウンターの設定誤り。${Mr.map(e=>e.name).join(", ")}`);const $p=e=>Dt[e].emoji;class Zc{constructor(t){o(this,"dic");o(this,"temporaryCounterNames");o(this,"entity");o(this,"add",(t,i=1,a)=>{this.dic[t]=[...this.dic[t]??[],...Array(i).fill(a)];const r=this.entity.status.maxCounterQty[t]??0;return r&&(this.dic[t]=this.dic[t].slice(0,r)),this.dic[t]});o(this,"setQty",(t,i=1,a)=>(this.dic[t]=[...Array(i).fill(a)],this.dic[t]));o(this,"remove",(t,i=1,a)=>{const r=this.dic[t].length;if(r===void 0)return[];if(i>=r)return delete this.dic[t],[];if(a){const n=this.dic[t].filter(l=>l===a),s=this.dic[t].filter(l=>l!==a);this.dic[t]=[...n.slice(i),...s]}else this.dic[t]=this.dic[t].slice(i);return this.dic[t]});o(this,"removeAll",(t,i)=>{if(i){const r=this.dic[t].filter(n=>n===i).length;return this.dic[t]=this.dic[t].filter(n=>n!==i),r}const a=this.dic[t];return delete this.dic[t],a});o(this,"getQty",(t,i)=>this.dic[t]?i?this.dic[t].filter(a=>a===i).length:this.dic[t].length??0:0);o(this,"setSelfDestructionFlg",t=>{this.add("SelfDestruction",1,t)});o(this,"getSelfDestructionFlg",t=>this.getQty("SelfDestruction",t)>0);o(this,"setCurfewFlg",t=>{this.add("Curfew",1,t)});o(this,"getCurfewFlg",t=>this.getQty("Curfew",t)>0);o(this,"incrementActionCountPerTurn",t=>{this.temporaryCounterNames.push(t.title),this.incrementActionCount(t)});o(this,"incrementActionCount",t=>{this.dic[t.title]=[t.entity,...this.dic[t.title]??[]]});o(this,"getActionCount",t=>this.dic[t.title]?this.dic[t.title].filter(i=>i===t.entity).length:0);o(this,"corpseDisposal",()=>{this.temporaryCounterNames.forEach(t=>delete this.dic[t]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(t=>t.temporary).forEach(t=>delete this.dic[t.name])});o(this,"removeAllActualCounters",()=>{Object.values(Dt).filter(t=>t.type==="Actual").forEach(t=>delete this.dic[t.name])});o(this,"removeAllWhenfaceDown",()=>{this.temporaryCounterNames.forEach(t=>delete this.dic[t]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(t=>!t.sticky).forEach(t=>delete this.dic[t.name])});o(this,"clear",()=>{this.temporaryCounterNames.forEach(t=>delete this.dic[t]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(t=>t.isOnlyOnField).forEach(t=>delete this.dic[t.name])});this.dic={},this.temporaryCounterNames=[],this.entity=t}}class Gc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",i=>i.field.getAllEntities().map(a=>a.statusOperatorBundle).every(a=>a.calcStatus()))}}class $c extends di{constructor(){super(...arguments);o(this,"calcStatus",()=>{const i=this.entity.isEffective;return this.entity.resetStatus(),this.entity.status=this._operators.filter(a=>a.isSpawnedBy.isEffective||!a.isContinuous).reduce((a,r)=>({...a,...r.statusCalculator(this.entity,r,a)}),this.entity.status),this.entity.isEffective===i});o(this,"beforePush",()=>{});o(this,"afterPush",()=>{this.calcStatus()})}}class fe extends Ct{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"statusCalculator");this.statusCalculator=i.statusCalculator}}const Kt=class Kt extends ai{constructor(){super(...arguments);o(this,"isApplicableTo",(...i)=>{const a=this.entity.counterHolder.getActionCount(this);return this.isOnlyNTimesPerTurnIfFaceup>0&&a>=this.isOnlyNTimesPerTurnIfFaceup?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&a>=this.isOnlyNTimesIfFaceup&&this.entity.counterHolder.incrementActionCount(this),this.definition.isApplicableTo(this,...i)});o(this,"substitute",async(i,a,r)=>{const n=await this.definition.substitute(this,i,a,r);return this.isOnlyNTimesPerTurnIfFaceup>0?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&this.entity.counterHolder.incrementActionCount(this),n});o(this,"getClone",()=>new Kt(this.seq,this.entity,this.definition))}get definition(){return super.definition}};o(Kt,"createNew",(i,a)=>new Kt("AutoSeq",i,a));let Ba=Kt;class Uc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>!0)}}class jc extends di{constructor(){super(...arguments);o(this,"beforePush",()=>{});o(this,"afterPush",()=>{});o(this,"filter",(i,a,r,n,s,l,u)=>this.effectiveOperators.filter(c=>c.summonKinds.includes(a)).reduce((c,d)=>({...c,...d.filter(this.entity,i,s.summoner,[a,...r],n,s.monster,l,c.posList,c.cells,u)}),s))}}class zc extends Ct{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"summonKinds");o(this,"filter");this.summonKinds=i.summonKinds,this.filter=(...a)=>i.filter(this,...a)}}const B=class B{constructor(){}};o(B,"_tryMarkForDestroy",(t,i)=>{if(t.info.isDying||t.kind==="XyzMaterial"||!t.isOnFieldStrictly&&t.cell.cellType!=="Deck"&&t.cell.cellType!=="Hand")return!1;const a=i.action.playType==="Battle"?"Battle":"Effect",r=a==="Battle"&&i.action.entity===t?i.selectedEntities[0]:i.action.entity;return t.info.isDying=t.validateDestroy(a,i.activator,r,i.action),t.info.isDying&&(t.info.causeOfDeath=[a,"Destroy"],t.info.isKilledBy=r,t.info.isKilledByWhom=i.activator,a==="Battle"&&(t.info.isKilledByWhom=r.controller)),t.info.isDying}),o(B,"excavateFromDeck",async(t,i,a,r)=>{const n=await B.excavateManyFromDeck(t,1,i,a,r);return n.length?n[0]:void 0}),o(B,"excavateManyFromDeck",async(t,i,a,r,n)=>{const s=t.getDeckCell().cardEntities.slice(0,i);return await R.moveMany(s.map(l=>({entity:l,to:l.cell,kind:l.kind,face:"FaceUp",orientation:l.orientation,pos:"Fix",movedAs:["Excavate",...a],movedBy:r,actionOwner:n,chooser:void 0}))),s}),o(B,"releaseManyForTheSameReason",(t,i,a,r)=>t.length?(i.includes("Cost")&&r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}をリリースし――、`),B.bringManyToSameCellForTheSameReason("Graveyard","Top",t,"FaceUp","Vertical",["Release",...i],a,r)):Promise.resolve([])),o(B,"sendManyToGraveyardForTheSameReason",(t,i,a,r)=>t.length?(r&&i.includes("Cost")&&(i.includes("FusionMaterial")?r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}を融合素材とし――、`):i.includes("SynchroMaterial")?r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}をシンクロと素材し――、`):i.includes("LinkMaterial")?r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}をリンクマーカーにセッティング――、`):r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}を墓地に送り――、`)),B.bringManyToSameCellForTheSameReason("Graveyard","Top",t,"FaceUp","Vertical",i,a,r)):Promise.resolve([])),o(B,"addManyToHand",(t,i,a,r)=>t.length?B.bringManyToSameCellForTheSameReason("Hand","Bottom",t,"FaceDown","Vertical",i,a,r):Promise.resolve([])),o(B,"discardManyForTheSameReason",(t,i,a,r)=>t.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}を手札から捨て――、`),B.bringManyToSameCellForTheSameReason("Graveyard","Top",t,"FaceUp","Vertical",["Discard",...i],a,r)):Promise.resolve([])),o(B,"banishManyForTheSameReason",(t,i,a,r)=>t.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}をゲームから除外し――、`),B.bringManyToSameCellForTheSameReason("Banished","Top",t,"FaceUp","Vertical",i,a,r)):Promise.resolve([])),o(B,"returnManyToDeckForTheSameReason",(t,i,a,r,n)=>i.length?(n&&a.includes("Cost")&&n.writeInfoLog(`${i.map(s=>s.toString()).join(" ")}をデッキに戻し――、`),B.bringManyToSameCellForTheSameReason("Deck",t,i,"FaceDown","Vertical",a,r,n)):Promise.resolve([])),o(B,"returnManyToHandForTheSameReason",(t,i,a,r)=>t.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}を手札に戻し――、`),B.bringManyToSameCellForTheSameReason("Hand","Bottom",t,"FaceDown","Vertical",i,a,r)):Promise.resolve([])),o(B,"convertManyToXyzMaterials",(t,i,a,r)=>t.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${t.map(n=>n.toString()).join(" ")}によって、オーバーレイネットワークを構築――、`),R.moveMany(t.map(n=>({entity:n,to:n.cell,kind:"XyzMaterial",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:i,movedBy:a,actionOwner:r,chooser:r})))):Promise.resolve()),o(B,"moveToXyzOwner",async(t,i,a,r,n,s)=>{a.length&&(await R.moveMany(a.map(l=>({entity:l,to:t,kind:"XyzMaterial",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:r,movedBy:n,actionOwner:s,chooser:s}))),a.forEach(l=>l.info.xyzOwner=i))}),o(B,"banishMany",(t,i)=>R.bringManyToSameCell("Banished","Top",t.map(a=>({...a,face:"FaceUp",orientation:"Vertical"})),i)),o(B,"bringManyToSameCellForTheSameReason",(t,i,a,r,n,s,l,u)=>R.bringManyToSameCell(t,i,a.map(c=>({entity:c,face:r,orientation:n,movedAs:s,movedBy:l,activator:u})))),o(B,"tryDestroy",async(t,i)=>{const a=await B.tryMarkForDestroy(t,i);return await B.waitCorpseDisposal(i.activator.duel),a}),o(B,"waitCorpseDisposal",(t,i={})=>{const a=i.excludedList??[];return R.sendManyToGraveyard(t.field.getDyingCardsOnField().filter(r=>r.info.isDying).filter(r=>!a.includes(r)).map(r=>({entity:r,movedAs:r.info.causeOfDeath??[],movedBy:r.info.isKilledBy,activator:r.info.isKilledByWhom})))}),o(B,"tryMarkForDestroy",async(t,i)=>{let a=t.filter(l=>B._tryMarkForDestroy(l,i));if(!a.length)return[];const r=i.action.playType==="Battle"?"Battle":"Effect";(await Promise.all(t[0].field.getAllEntities().flatMap(l=>l.substituteEffects.filter(u=>u.isMandatory).filter(u=>u.executableCells.includes(l.cell.cellType)).filter(u=>u.isApplicableTo(r,t,i).length).flatMap(u=>u.substitute(r,t,i))))).flatMap(l=>l).forEach(l=>{l.resetCauseOfDeath()}),a=a.filter(l=>l.info.isDying);let n=t[0].field.getAllEntities().flatMap(l=>l.substituteEffects.filter(u=>!u.isMandatory).filter(u=>u.executableCells.includes(l.cell.cellType)).filter(u=>u.isApplicableTo(r,t,i).length).map(u=>({chooser:l.owner,effect:u,sacrifice:l})));for(const l of n.map(u=>u.sacrifice.controller).getDistinct()){const u=n.filter(d=>d.sacrifice.controller===l),c=await l.duel.view.waitSelectAction(l,u.map(d=>({entity:d.sacrifice,title:d.effect.title,origin:d.effect})),"身代わり効果を適用する？",!0);if(c){if((await c.substitute(r,a,i)).forEach(d=>{d.resetCauseOfDeath()}),a=a.filter(d=>d.info.isDying),!a.length)return[];n=n.filter(d=>d.effect.isApplicableTo(r,t,i).length)}}const s=a.filter(l=>l.info.isDying);return s.forEach(l=>l.duel.log.info(`${l.toString()}を${r==="Battle"?"戦闘":r==="Effect"?"効果":"ルール"}破壊。`,l.info.isKilledByWhom)),s}),o(B,"tryBanish",async(t,i,a)=>{const r=i.filter(n=>n.canBeBanished(t,a.activator,a.action.entity,a.action));return await B.banishManyForTheSameReason(r,["Effect"],a.action.entity,a.activator),r.filter(n=>n.cell.cellType==="Banished").filter(n=>n.moveLog.latestRecord.movedBy===a.action.entity)}),o(B,"negateSummonMany",(t,i)=>{const a=i.duel.field.getPendingMonstersOnField();return a.forEach(r=>{r.info.summonKinds=[],r.info.materials=[],r.moveLog.negateSummon(t,i)}),i.writeInfoLog(`${a.map(r=>r.toString()).join(" ")}.の召喚は無効にされた。`),a}),o(B,"drawAtSameTime",async(t,i,a,r)=>{const n=[],s=[],l=[t.draw(a,i,t),t.getOpponentPlayer().draw(r,i,t)].map(u=>u.catch(c=>{c instanceof re?c.winner&&n.push(c.winner):s.push(c)}));if(await Promise.all(l),s.length)throw new _("ドロー処理で想定されない例外が発生した。",t,a,r,i,...s);if(n.length!==0)throw n.length===1?new re(n[0],`${n[0].getOpponentPlayer().name}がデッキからドローできなかった。`):new re(void 0,"お互いにデッキからカードをドローできなかった。")});let S=B;class Vc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>!0)}}class Wc extends di{constructor(){super(...arguments);o(this,"beforePush",()=>{});o(this,"afterPush",()=>{})}}class Rn extends Ct{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"calcType");o(this,"filter");this.calcType=i.calcType,this.filter=(...a)=>i.filter(this,...a)}}const Sa=(e,t,...i)=>e.filter(a=>t.includes(a.calcType)).reduce((a,r)=>({...a,...r.filter(...i)}),{}),Hn=(...e)=>{const[t,i,a,r,n,s,l]=e,u=[a.entity,r,n].filter(f=>!!f).flatMap(f=>f.damageFilterBundle.effectiveOperators);let c=Sa(u,["double_typeA","eachOther_typeA","eachOther_typeB","asEffectDamage"],...e);const d={point:t,damageToOpponent1:0,damageToOpponent2:0,damageType:s};return c.double_typeA&&(d.point*=2),c.asEffectDamage&&(d.damageType="EffectDamage"),c={...Sa(u,["heal","zero_typeA","half","double_typeB","fix"],d.point,i,a,r,n,d.damageType,l),...c},c.fix!==void 0?d.point=c.fix:c.zero_typeA?d.point=0:(c.half&&(d.point=Math.round(d.point/2)),c.double_typeA&&(d.point*=2)),c={...Sa(u,["zero_typeB"],d.point,i,a,r,n,d.damageType,l),...c},c.zero_typeB&&(d.point=0),c.heal?d.damageType="Heal":(c.eachOther_typeA&&(d.damageToOpponent1=d.point),c.eachOther_typeB&&(d.damageToOpponent2=d.point,c.eachOther_typeB==="Substitude"&&(d.point=0))),d},Qc=(e,t,i)=>Hn(e,t.activator,i,t.action.entity,void 0,"EffectDamage",t.action),Xc=(e,t,i,a,r,n)=>Hn(e,t,i,a,r.entityType==="Duelist"?void 0:r,"BattleDamage",n),Gi=e=>new Promise(t=>setTimeout(t,e)),Zn=()=>{let e=()=>{},t=()=>{};return{promise:new Promise((a,r)=>{e=a,t=r}),resolve:e,reject:t}},Xi=class Xi extends ai{constructor(i,a,r){super(i,a,{...r,playType:"ContinuousEffect",isMandatory:!1,executableDuelistTypes:["Controller"]});o(this,"toString",()=>this.title);o(this,"toFullString",()=>`${this.entity.toString()}の${this.toString()}`);o(this,"execute",async(i,a)=>{if(!this.canExecute())return;const r=await this.definition.execute(this,i,a);return r==="RemoveMe"&&this.entity.immediatelyActions.reset(...this.entity.immediatelyActions.filter(n=>n!==this)),r})}get definition(){return super.definition}get playType(){return this.definition.playType}};o(Xi,"createNew",(i,a)=>new Xi("AutoSeq",i,a));let La=Xi;const Gn=["FaceUp","FaceDown"],$n=["FusionSummon","SynchroSummon","XyzSummon","PendulumSummon","LinkSummon","RitualSummon","FlipSummon"],Kc={FusionSummon:"融合召喚",SynchroSummon:"シンクロ召喚",XyzSummon:"エクシーズ召喚",PendulumSummon:"ペンデュラム召喚",LinkSummon:"リンク召喚",RitualSummon:"儀式召喚",FlipSummon:"反転召喚"},Un=[...$n,"AdvanceSummon","NormalSummon","SpecialSummon"];[...Un];const Yc=e=>e+"Summon",Fr=["Card","Token"],Jc=["Duelist","Squatter"],Ic=(e,t)=>Mn(e.origin,t.origin),z=class z{constructor(t,i,a,r,n,s,l){o(this,"seq");o(this,"origin");o(this,"entityType");o(this,"summonFilterBundle");o(this,"procFilterBundle");o(this,"numericOprsBundle");o(this,"statusOperatorBundle");o(this,"damageFilterBundle");o(this,"moveLog");o(this,"counterHolder");o(this,"parent");o(this,"face");o(this,"orientation");o(this,"owner");o(this,"cell");o(this,"_status");o(this,"_numericStatus");o(this,"_info");o(this,"actions",[]);o(this,"immediatelyActions",[]);o(this,"continuousEffects",[]);o(this,"substituteEffects",[]);o(this,"canBeReleased",(t,i,a,r)=>!this.isInTrashCell&&this.procFilterBundle.filter(a,t,i,r,[this]));o(this,"canBeSentToGraveyard",(t,i,a,r)=>!this.status.willBeBanished&&!this.status.willReturnToDeck&&this.procFilterBundle.filter([a],t,i,r,[this]));o(this,"_exists",!0);o(this,"validateFusionMaterials",t=>this.definition.fusionMaterialInfos?this.definition.validateFusionMaterials?this.definition.validateFusionMaterials(t):!0:!1);o(this,"definition");o(this,"toString",()=>{let t=this.nm;return this.nm!==this.origin.name&&(t=`${t}(${this.origin.name})`),this.entityType==="Card"?`《${t}》`:t});o(this,"onUsedAsMaterial",(t,i)=>{this.definition.onUsedAsMaterial&&this.definition.onUsedAsMaterial(this,t,i)});o(this,"setBattlePosition",async(t,i,a,r)=>{let n=`表示形式の変更：${this.toString()}（${this.battlePositionName}⇒${Ti[t]}）`;const s=[...i];this.battlePosition==="Set"&&(s.push("Flip"),i.includes("Rule")&&(this.info.isPending=!0,n=`${this.toString()}を反転召喚`,this.info.summonKinds.push("FlipSummon"),s.push("FlipSummon"),s.push("AttackSummon"))),this.duel.log.info(n,r),await this.moveAlone(this.cell,"Monster",t==="Set"?"FaceDown":"FaceUp",t==="Attack"?"Vertical":"Horizontal","Top",s,a,r,r)});o(this,"activateAsPendulumScale",(t,i,a,r)=>this.moveAlone(t,"Spell","FaceUp","Vertical","Top",["CardActivation",...i],a,r,r));o(this,"setNonFieldMonsterPosition",async(t,i,a,r,n)=>{this.moveAlone(this.cell,t,i==="FaceUp"?"FaceUp":"FaceDown","Vertical","Top",a,r,n,n)});o(this,"setAsSpellTrap",async(t,i,a,r,n)=>{await this.moveAlone(t,i,"FaceDown","Vertical","Top",[...a,"SpellTrapSet"],r,n,n)});o(this,"activateSpellTrapFromHand",async(t,i,a,r,n)=>{await this.moveAlone(t,i,"FaceUp","Vertical","Top",[...a,"CardActivation"],r,n,n)});o(this,"putDirectly",async(t,i,a,r,n)=>{await this.moveAlone(t,i,"FaceUp","Vertical","Top",[...a,"PutDirectly"],r,n,n)});o(this,"activateSpellTrapOnField",async(t,i,a,r)=>{await this.moveAlone(this.cell,t,"FaceUp","Vertical","Top",[...i,"CardActivation"],a,r,r)});o(this,"draw",async(t,i,a)=>await this.addToHand([...t,"Draw"],i,a));o(this,"addToHand",async(t,i,a)=>await this.moveAlone(this.owner.getHandCell(),this.origin.kind,"FaceDown","Vertical","Bottom",[...t],i,a,a));o(this,"summon",(t,i,a,r,n,s,l)=>z.summonMany([{monster:this,dest:t,summoner:l??s,pos:i}],a,r,n,s));o(this,"moveForcibly",async(t,i,a,r,n,s,l)=>{await this.moveAlone(t,this.origin.kind,i,a,r,["Rule",...n],s,l,l)});o(this,"excavate",async(t,i,a)=>this.moveAlone(this.cell,this.kind,"FaceUp",this.orientation,"Fix",["Excavate",...t],i,a,void 0));o(this,"moveAlone",async(t,i,a,r,n,s,l,u,c)=>(await z.moveMany([{entity:this,to:t,kind:i,face:a,orientation:r,pos:n,movedAs:s,movedBy:l,actionOwner:u,chooser:c}],void 0),this.cell));o(this,"determine",async()=>{this.info.isPending&&(this.info.isPending=!1,this.moveLog.finalize(),this.continuousEffects.forEach(t=>t.updateState()),await this.fireImmediatelyActions(),await S.waitCorpseDisposal(this.duel))});o(this,"_move",async t=>{var n,s;if(!t.to)throw new Error("illegal argument: to");const i={cell:this.cell,status:this.status,info:this.info};this.face=t.face,this.orientation=t.orientation;let a=!1,r=t.actionOwner;if(!r&&t.movedAs.includes("LostDestinyBond")){console.log(this.toString(),(n=this.info.equipedBy)==null?void 0:n.toString(),(s=this.info.xyzOwner)==null?void 0:s.toString());const l=this.info.equipedBy??this.info.xyzOwner;l&&(r=l.moveLog.latestRecord.actionOwner)}return t.to!==this.cell&&(this.duel.log.pushMoveLog(r,this,this.cell,t.to),this.cell.cellType==="WaitingRoom"?a=!0:t.to.cellType==="WaitingRoom"?(this._exists=!1,await this.duel.view.waitTokenAnimation()):this.field.duel.clock.turn&&await this.field.duel.view.waitAnimation({entity:this,to:t.to,index:t.pos,count:0})),(t.to!==this.cell||t.pos==="Random")&&(this.cell.releaseEntities(this),this.cell.isPlayFieldCell&&!t.to.isPlayFieldCell&&(this.counterHolder.clear(),this.resetCauseOfDeath()),this.cell.isMonsterZoneLikeCell&&!t.to.isMonsterZoneLikeCell||t.kind!=="Monster"?(this.resetNumericStatus(),this.info.isEffectiveIn.push(...me),this.info.equipEntities.filter(l=>l.isOnFieldAsSpellTrapStrictly).forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["Rule","Destroy","LostEquipOwner","LostDestinyBond"],this.controller.writeInfoLog(`装備対象${this.toString()}不在により${l.toString()}は破壊された。`)}),this.info.equipEntities=[],this.kind!=="XyzMaterial"&&this.cell.xyzMaterials.forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["LostXyzOwner","LostDestinyBond"],this.controller.writeInfoLog(`${this.toString()}不在により、XYZ素材${l.toString()}は墓地に送られた。`)})):this.cell.cellType==="SpellAndTrapZone"&&t.to.cellType!=="SpellAndTrapZone"&&(this.info.equipedBy=void 0,this.info.equipedAs=void 0,this.info.isEffectiveIn.push(...me)),t.to.acceptEntities(this,t.pos),a&&(await Gi(1),this._exists=!0,await this.duel.view.waitTokenAnimation()),(t.to===this.isBelongTo||t.to.cellType==="Hand"||t.to.cellType==="Banished"&&this.face==="FaceDown")&&(this.counterHolder.clear(),this.resetInfoAll(),this.resetStatusAll())),(this.isOnFieldStrictly&&this.face==="FaceDown"||t.kind==="XyzMaterial")&&(this.info.equipEntities.forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["Rule","Destroy","LostEquipOwner","LostDestinyBond"],this.controller.writeInfoLog(`装備対象${this.toString()}不在により${l.toString()}は破壊された。`)}),this.counterHolder.removeAllWhenfaceDown(),this.info.materials=[],this.status={...this._status,isEffective:!0},this.info.isEffectiveIn=[...Me],this.resetNumericStatus(),this.info.isSettingSickness=this.kind==="Trap"||this.status.spellCategory==="QuickPlay"),this._info.kind=t.kind,this.moveLog.push(t.kind,t.movedAs,t.movedBy,t.actionOwner,t.chooser),await this.fireImmediatelyActions(i),t.to});o(this,"fireImmediatelyActions",async t=>{for(const i of[this,...this.field.getCardsOnFieldStrictly()].getDistinct().filter(a=>a.immediatelyActions.length).toSorted((a,r)=>a.hadArrivedToFieldAt().totalProcSeq-r.hadArrivedToFieldAt().totalProcSeq).flatMap(a=>a.immediatelyActions))await i.execute(this,t)});o(this,"initForTurn",()=>{this.info.isSettingSickness=!1,this.info.attackDeclareCount=0,this.info.battlePotisionChangeCount=0,this.counterHolder.corpseDisposal()});o(this,"resetInfoIfLeavesTheField",()=>{this._info={...this._info,isDying:!1,isPending:!1,causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,effectTargets:{},attackDeclareCount:0,battlePotisionChangeCount:0,materials:[],equipedBy:void 0,equipedAs:void 0,equipEntities:[]},this._info.isEffectiveIn.push(...me),this._info.isEffectiveIn.distinct()});o(this,"resetInfoAll",()=>{var t;this._info={kind:this.origin.kind,isDying:!1,isPending:!1,isEffectiveIn:[...Me],causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,isVanished:!1,isRebornable:((t=this.origin.monsterCategories)==null?void 0:t.union(Dn).length)===0,isSettingSickness:!1,summonKinds:[],materials:[],effectTargets:{},attackDeclareCount:0,battlePotisionChangeCount:0,equipedBy:void 0,equipedAs:void 0,validateEquipOwner:()=>!0,equipEntities:[],xyzOwner:void 0,battleLog:[]},this.counterHolder.clear()});o(this,"resetNumericStatus",()=>{const t=An.reduce((i,a)=>(i[a]=this.origin[a],i),{});this._numericStatus={origin:{...t},wip:{...t},calculated:{...t}}});o(this,"resetStatus",()=>{this.status={...this.origin,canBattlePositionChange:!0,canAttack:!0,canDirectAttack:!1,canActivateEffect:!0,isEffective:!0,isFaithful:!1,isSelectableForAttack:!0,allowHandSynchro:!1,allowHandLink:!1,willBeBanished:!1,willReturnToDeck:void 0,fusionSubstitute:!1,maxCounterQty:{},piercingTo:[]}});o(this,"resetStatusAll",()=>{this.resetNumericStatus(),this.resetStatus()});o(this,"resetCauseOfDeath",()=>{this.info.isDying=!1,this.info.causeOfDeath=[],this.info.isKilledBy=void 0,this.info.isKilledByWhom=void 0});this.seq=z.nextEntitySeq++,this.counterHolder=new Zc(this),this.definition=r,this.owner=t,this.cell=i,this.entityType=a,this.parent=l,this.origin=r.staticInfo,this._status=JSON.parse(JSON.stringify(r.staticInfo)),this._numericStatus=JSON.parse(JSON.stringify(r.staticInfo)),this.resetStatusAll(),this._info={kind:this.origin.kind,isEffectiveIn:[...Me],attackDeclareCount:0,battlePotisionChangeCount:0,isDying:!1,isPending:!1,causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,isVanished:!1,isRebornable:!0,isSettingSickness:!1,summonKinds:[],materials:[],effectTargets:{},equipedBy:void 0,equipedAs:void 0,validateEquipOwner:()=>!0,equipEntities:[],xyzOwner:void 0,battleLog:[]},this.resetInfoAll(),this.face=n,this.orientation=s,this.summonFilterBundle=new jc(i.field.summonFilterPool,this),this.procFilterBundle=new hc(i.field.procFilterPool,this),this.numericOprsBundle=new vc(i.field.numericStateOperatorPool,this),this.statusOperatorBundle=new $c(i.field.statusOperatorPool,this),this.damageFilterBundle=new Wc(i.field.damageFilterPool,this),this._exists=this.entityType==="Card",i.acceptEntities(this,"Top"),this.moveLog=new Dc(this),this.moveLog.pushForRuleAction(["Spawn"]);let u=[];u=r.continuousEffects??[],this.substituteEffects.push(...(r.substituteEffects??[]).map(c=>Ba.createNew(this,c))),this.origin.kind==="Monster"&&this.entityType==="Card"&&r.summonFilter&&this.summonFilterBundle.push(new zc({title:"default",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:this,actionAttr:{},isApplicableTo:()=>!0,summonKinds:Un,filter:r.summonFilter})),r.defaultStatus&&this.statusOperatorBundle.push(new fe({title:"default",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:this,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:()=>r.defaultStatus??{}})),this.actions.push(...r.actions.map(c=>mt.createNew(this,c))),this.immediatelyActions.push(...(r.immediatelyActions??[]).map(c=>La.createNew(this,c))),this.continuousEffects.push(...u.map(c=>Na.createNew(this,c)))}get isUnderControl(){return this.face==="FaceUp"||Fn.every(t=>t!==this.cell.cellType)}get controller(){return this.cell.owner??this.owner}get field(){return this.owner.duel.field}get duel(){return this.owner.duel.field.duel}get actionLogRecords(){return this.duel.chainBlockLog.records.filter(t=>t.chainBlockInfo.action.entity===this)}get status(){return this._status}set status(t){this._status={...t}}get numericStatus(){return this._numericStatus}get info(){return this._info}get kind(){return this.info.kind}get nm(){return this.status.name}get atk(){return this._numericStatus.calculated.attack}get def(){return this._numericStatus.calculated.defense}get lvl(){return this._numericStatus.calculated.level}get rank(){return this._numericStatus.calculated.rank}get attr(){return this.status.attributes??[]}get types(){return this.status.types??[]}get psL(){return this._numericStatus.calculated.pendulumScaleL}get psR(){return this._numericStatus.calculated.pendulumScaleR}get linkArrows(){let t=(this.origin.linkArrowKeys??[]).map(i=>Pn[i].linkArrow);return this.controller.seat==="Above"&&(t=t.map(i=>({offsetColumn:i.offsetColumn*-1,offsetRow:i.offsetRow*-1}))),t}get linkArrowDests(){var t;return(t=this.origin.monsterCategories)!=null&&t.includes("Link")?this.isOnFieldAsMonsterStrictly?this.linkArrows.map(i=>[this.cell.row+i.offsetRow,this.cell.column+i.offsetColumn]).map(([i,a])=>this.field.cells[i][a]).filter(i=>i.isMonsterZoneLikeCell):[]:[]}get linkedEntities(){return this.isOnFieldAsMonsterStrictly?[...this.linkArrowDests.map(t=>t.cardEntities[0]).map(t=>t),...this.cell.linkArrowSources].getDistinct():[]}get coLinkedEntities(){var t;return this.isOnFieldAsMonsterStrictly?(t=this.origin.monsterCategories)!=null&&t.includes("Link")?this.linkArrowDests.map(i=>i.cardEntities[0]).filter(i=>i).union(this.cell.linkArrowSources):[]:[]}get isEffective(){return this.status.isEffective&&this.info.isEffectiveIn.includes(this.cell.cellType)}get canBeSet(){var t;return this.entityType==="Card"&&!((t=this.status.monsterCategories)!=null&&t.includes("Link"))}get isEffectiveWeakly(){return this.status.isEffective}get battlePosition(){if(this.isOnFieldStrictly&&this.kind==="Monster")return this.orientation==="Vertical"?"Attack":this.face==="FaceUp"?"Defense":"Set"}get battlePositionName(){const t=this.battlePosition;if(t)return Ti[t]}get wasMovedAtCurrentProc(){return this.field.duel.clock.totalProcSeq===this.moveLog.latestRecord.movedAt.totalProcSeq}get wasMovedAtPreviousProc(){return this.field.duel.clock.totalProcSeq===this.moveLog.latestRecord.movedAt.totalProcSeq+1}get wasMovedAtCurrentTurn(){return this.field.duel.clock.isSameTurn(this.moveLog.latestRecord.movedAt)}get wasMovedAtCurrentChain(){return this.field.duel.clock.isSameChain(this.moveLog.latestRecord.movedAt)}get wasMovedAtPreviousChain(){return this.field.duel.clock.isPreviousChain(this.moveLog.latestRecord.movedAt)}get wasMovedAtPreviousTurn(){return this.field.duel.clock.isPreviousTurn(this.moveLog.latestRecord.movedAt)}get wasMovedFrom(){return this.moveLog.previousPlaceRecord.cell}get isPendulumScale(){var t;return!(!((t=this.origin.monsterCategories)!=null&&t.includes("Pendulum"))||!this.isOnField||!this.cell.isSpellTrapZoneLikeCell||this.status.spellCategory)}get isOnField(){return this.cell.isPlayFieldCell}get isOnFieldStrictly(){return this.isOnField&&!this.info.isPending&&!this.info.isDying&&this.kind!=="XyzMaterial"}get isOnFieldAsMonsterStrictly(){return this.cell.isMonsterZoneLikeCell&&this.isOnFieldStrictly}get isMonster(){return this.isOnFieldAsMonsterStrictly||this.kind==="Monster"}get isOnFieldAsSpellTrapStrictly(){return this.isOnFieldStrictly&&(this.kind==="Spell"||this.kind==="Trap")}get isInTrashCell(){return this.cell.isTrashCell}get isLikeContinuousSpell(){return this.status.spellCategory==="Continuous"||this.status.spellCategory==="Field"||this.status.spellCategory==="Equip"||this.status.trapCategory==="Continuous"||(this.status.monsterCategories??[]).includes("Pendulum")}get isBelongTo(){return this.origin.monsterCategories&&this.origin.monsterCategories.union(Li).length?this.owner.getExtraDeck():this.owner.getDeckCell()}get exist(){return this._exists}get allStickyEffectOperators(){return[...this.procFilterBundle.effectiveOperators,...this.numericOprsBundle.effectiveOperators]}get fusionMaterialInfos(){return this.definition.fusionMaterialInfos??[]}};o(z,"nextEntitySeq",0),o(z,"splitBattlePos",t=>({face:t==="Set"?"FaceDown":"FaceUp",orientation:t==="Attack"?"Vertical":"Horizontal"})),o(z,"recreateArray",(t,i)=>{if(!i.length)return[];const a=t.getAllCells().flatMap(r=>r.entities);return i.map(r=>r.seq).map(r=>a.find(n=>n.seq===r)).filter(r=>r!==void 0)}),o(z,"createPlayerEntity",t=>{const i=t.getHandCell();return new z(t,i,"Duelist",lp(t),"FaceUp","Vertical")}),o(z,"createCardEntity",(t,i)=>{const a=i.staticInfo.monsterCategories&&i.staticInfo.monsterCategories.union(Li).length?t.getExtraDeck():t.getDeckCell();return new z(t,a,"Card",i,"FaceDown","Vertical")}),o(z,"createTokenEntity",(t,i,a)=>new z(t,t.duel.field.getWaitingRoomCell(),"Token",a,"FaceUp","Vertical",i)),o(z,"moveMany",async(t,i)=>{if(!t.length)return;const a=t[0].entity.duel,n=[...t.filter(l=>l.entity.cell!==l.to).map(l=>l.entity).filter(l=>!(i??[]).includes(l)),...a.field.getCardsOnFieldStrictly().filter(l=>l.info.isDying)],s=new Map;for(t.forEach(({entity:l,to:u,kind:c,face:d,orientation:f,pos:p,...h})=>{var D;let y=u,v=c,g=d,m=p,T=f;l.status.willBeBanished?(y=l.owner.getBanished(),g="FaceUp",T="Vertical"):l.status.willReturnToDeck?(y=l.isBelongTo,g="FaceDown",m=l.status.willReturnToDeck,T="Vertical"):(D=l.status.monsterCategories)!=null&&D.includes("Pendulum")&&l.isOnField&&!l.info.isPending&&l.kind!=="XyzMaterial"&&l.face==="FaceUp"&&u.isTrashCell&&(y=l.owner.getExtraDeck(),g="FaceUp",m="Top",T="Vertical"),y.cellType==="ExtraDeck"&&(m=g==="FaceUp"?"Top":"Bottom"),l.isBelongTo.cellType==="ExtraDeck"&&(y.cellType==="Hand"||y.cellType==="Deck")&&(y=l.isBelongTo,g="FaceDown",T="Vertical"),y.isPlayFieldCell||(v=l.origin.kind,l.entityType==="Token"&&(y=l.field.getWaitingRoomCell())),y.isMonsterZoneLikeCell||(T="Vertical"),s.set(y,[{entity:l,to:y,kind:v,face:g,orientation:T,pos:m,...h},...s.get(y)??[]])});;){const l=Array.from(s.values()).map(u=>u.pop()).filter(u=>u!==void 0).map(u=>u.entity._move(u));if(!l.length)break;await Promise.all(l),await S.waitCorpseDisposal(a,{excludedList:n})}z.settleEntityMove(a)}),o(z,"summonMany",async(t,i,a,r,n)=>{if(!t.length)return;const s=n.duel,l={Attack:"AttackSummon",Defense:"DefenseSummon",Set:"SetSummon"},u=t.map(({monster:c,dest:d,pos:f,summoner:p})=>{if(c.info.summonKinds=[i],i==="NormalSummon"||i==="AdvanceSummon"){c.info.summonKinds.push("NormalSummon");const v=i==="AdvanceSummon"?"アドバンス":"";f==="Attack"?c.field.duel.log.info(`${c.toString()}を${v}召喚`,p):c.duel.log.info(`${c.toString()}を${v}セット`,p),a.includes("Rule")?p.info.ruleNormalSummonCountQty++:p.info.effectNormalSummonCountQty++}else i==="SpecialSummon"?c.duel.log.info(`${c.toString()}を${Ti[f]}で特殊召喚`,p):(c.info.summonKinds.push("SpecialSummon"),c.duel.log.info(`${c.toString()}を${Ti[f]}で${Kc[i]}！`,p)),p.info.specialSummonCountQty++;c.info.summonKinds=c.info.summonKinds.getDistinct(),c.info.battlePotisionChangeCount=1;const{face:h,orientation:y}=z.splitBattlePos(f);return a.includes("Rule")&&(c.info.isPending=!0),{entity:c,args:{to:d,kind:"Monster",face:h,orientation:y,pos:"Top",movedAs:[i,l[f],...a],movedBy:r,actionOwner:n,chooser:p}}}).map(c=>c.entity._move(c.args));await Promise.all(u),t.map(c=>c.summoner).forEach(c=>{i==="NormalSummon"||i==="AdvanceSummon"?a.includes("Rule")?c.info.ruleNormalSummonCount++:c.info.effectNormalSummonCount++:c.info.specialSummonCount++}),await S.waitCorpseDisposal(s),z.settleEntityMove(t[0].monster.duel)}),o(z,"sendManyToGraveyard",(t,i)=>z.bringManyToSameCell("Graveyard","Top",t.map(a=>({...a,face:"FaceUp",orientation:"Vertical"})),i)),o(z,"bringManyToSameCell",async(t,i,a,r)=>(await z.moveMany(a.map(n=>({...n,to:n.entity.field.getCells(t).filter(s=>s.owner===n.entity.owner)[0],kind:n.entity.origin.kind,pos:i,chooser:n.activator,actionOwner:n.activator})),r),a.map(n=>n.entity).filter(n=>n.cell.cellType===t))),o(z,"settleEntityMove",t=>{t.field.recalcLinkArrows(),t.field.distributeOperators(t.clock);const i=t.field.getAllEntities().filter(a=>a.wasMovedAtCurrentProc);i.filter(a=>!a.isOnFieldStrictly&&!a.info.isPending).forEach(a=>a.resetInfoIfLeavesTheField()),i.filter(a=>a.face==="FaceDown").filter(a=>a.cell===a.isBelongTo).forEach(a=>{a.resetInfoAll(),a.resetStatusAll()}),i.flatMap(a=>a.continuousEffects).forEach(a=>a.updateState()),t.field.getAllCells().filter(a=>a.needsShuffle).map(a=>a.shuffle())});let R=z;R.prototype.hasBeenArrivalNow=function(e,t=k,i=!1){const a=t.map(Yc),r=this.moveLog.latestArrivalRecord;if(!r)return!1;if(this.field.duel.clock.isPreviousChain(r.movedAt)){if(i&&!this.field.duel.clock.isPreviousProc(r.movedAt))return!1}else return!1;const n=r.movedAs;return!(!n.union(e).length||!n.union(a).length)};R.prototype.getAttackTargets=function(){const e=this.controller.getOpponentPlayer().getMonstersOnField().filter(t=>t.status.isSelectableForAttack);return(this.status.canDirectAttack||!e.length)&&e.push(this.controller.getOpponentPlayer().entity),e.filter(t=>t.canBeTargetOfBattle(this.controller,this)).filter(t=>this.procFilterBundle.filter(["BattleTarget"],this.controller,this,{},[t]))};R.prototype.canBeEffected=function(e,t,i){return this.procFilterBundle.filter(["Effect"],e,t,i,[this])};const eu=(e,t,i,a,r)=>e.canBeEffected(i,a,r)&&e.procFilterBundle.filter([t],i,a,r,[e]);R.prototype.canBeTargetOfEffect=function(e){return this.procFilterBundle.filter(["EffectTarget"],e.activator,e.action.entity,e.action,[this])};R.prototype.canBeBanished=function(e,t,i,a){return this.cell.cellType==="Banished"?!1:eu(this,e,t,i,a)};R.prototype.canBeTargetOfBattle=function(e,t){return this.procFilterBundle.filter(["BattleTarget"],e,t,{},[this])};R.prototype.validateDestroy=function(e,t,i,a){let r=this.procFilterBundle.filter([e==="Battle"?"BattleDestroy":"EffectDestroy"],t,i,a??{},[this]);return r&&e==="Effect"&&(r=this.canBeEffected(t,i,a)),r};R.prototype.getIndexInCell=function(){const e=this;if(e.info.isVanished)return-1;const t=e.cell.cardEntities.indexOf(e);if(t<0)throw new _("エンティティとセルの状態が矛盾している。",[e,e.cell]);return t};R.prototype.getXyzMaterials=function(){const e=this;return(e.status.monsterCategories??[]).includes("Xyz")?e.cell.xyzMaterials:[]};R.prototype.wasMovedAfter=function(e){return this.moveLog.latestRecord.movedAt.totalProcSeq>e.totalProcSeq};R.prototype.hadArrivedToFieldAt=function(){let e=this.moveLog.latestRecord.movedAt;return this.moveLog.records.findLast(t=>!t.cell.isPlayFieldCell||t.isPending||t.kind!==this.kind||t.face==="FaceDown"?!0:(e=t.movedAt,!1)),e};R.prototype.release=async function(e,t,i){return await this.sendToGraveyard([...e,"Release"],t,i),this.info.isVanished?void 0:this.cell};R.prototype.ruleDestroy=async function(){return await this.sendToGraveyard(["Rule","Destroy"],void 0,void 0),this.info.isVanished?void 0:this.cell};R.prototype.sendToGraveyard=async function(e,t,i){await S.sendManyToGraveyardForTheSameReason([this],e,t,i)};R.prototype.discard=async function(e,t,i){await S.discardManyForTheSameReason([this],e,t,i)};R.prototype.returnToDeck=async function(e,t,i,a){await S.returnManyToDeckForTheSameReason(e,[this],t,i,a)};R.prototype.banish=async function(e,t,i){await S.banishManyForTheSameReason([this],e,t,i)};class tu{constructor(t){o(this,"cells");o(this,"duel");o(this,"summonFilterPool");o(this,"procFilterPool");o(this,"numericStateOperatorPool");o(this,"statusOperatorPool");o(this,"damageFilterPool");o(this,"moveLog");o(this,"distributeOperators",t=>{console.info(`[totalProcSeq]:${t.totalProcSeq}`);let i=0;for(;;){if(i++,i>10)throw new _("無限ループ発生");let a=!0;for(const r of this.stickyOperatorPools)if(!r.distributeAll(this.duel)){a=!1;break}if(a)return}});o(this,"getAllCells",()=>this.cells.flat());o(this,"getCells",(...t)=>this.getAllCells().filter(i=>t.includes(i.cellType)));o(this,"getAvailableExtraMonsterZones",()=>this.getCells("ExtraMonsterZone").filter(t=>t.isAvailable));o(this,"getWaitingRoomCell",()=>this.getCells("WaitingRoom")[0]);o(this,"getAllEntities",()=>this.getAllCells().map(t=>t.entities).flat());o(this,"getAllCardEntities",()=>this.getAllCells().map(t=>t.cardEntities).flat());o(this,"getCardsOnFieldStrictly",()=>this.getCells(...me).map(t=>t.cardEntities).filter(t=>t.length>0).map(t=>t[0]).filter(t=>t.isOnFieldStrictly));o(this,"getMonstersOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(t=>t.isOnFieldAsMonsterStrictly));o(this,"getSpellTrapsOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(t=>t.isOnFieldAsSpellTrapStrictly));o(this,"getPendulumScalesOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(t=>{var i;return(i=t.origin.monsterCategories)==null?void 0:i.includes("Pendulum")}).filter(t=>t.isOnFieldAsSpellTrapStrictly).filter(t=>!t.status.spellCategory));o(this,"getPendingCardsOnField",()=>this.getCells(...me).map(t=>t.cardEntities).filter(t=>t.length>0).map(t=>t[0]).filter(t=>t.info.isPending));o(this,"getDyingCardsOnField",()=>this.getCells(...me).flatMap(t=>[...t.cardEntities,...t.xyzMaterials]).filter(t=>t.info.isDying));o(this,"getPendingMonstersOnField",()=>this.getPendingCardsOnField().filter(t=>t.kind==="Monster"));o(this,"getEntities",t=>this.getAllEntities().filter(i=>i.controller===t));o(this,"recalcLinkArrows",()=>{const t=this.getAllCells().filter(i=>i.isMonsterZoneLikeCell);t.some(i=>i.recalcLinkArrows)&&t.forEach(i=>i.recalcLinkArrows())});o(this,"canExtraLink",(t,i)=>{if(!t.linkArrows.length)return!1;const a=i.map(c=>c.material),r=this.getCells("ExtraMonsterZone").filter(c=>c.isAvailable||a.includes(c.cardEntities[0]));if(r.length!==1)return!1;const n=r[0],s=t.linkArrows.map(c=>this.cells[n.row+c.offsetRow][n.column+c.offsetColumn]);let l=n.linkArrowSources.filter(c=>!a.includes(c)).filter(c=>s.includes(c.cell));if(!l.length)return!1;let u=-1;for(;u!==l.length;){const c=l.flatMap(d=>d.coLinkedEntities).filter(d=>!a.includes(d));if(c.some(d=>d.cell.cellType==="ExtraMonsterZone"))return!0;l=[...l,...c].getDistinct(),u=l.length}return!1});o(this,"drawAtSameTime",async(t,i,a,r,n,s)=>{const l=[],u=[],c=[t.draw(i,n,s),a.draw(r,n,s)].map(d=>d.catch(f=>{f instanceof re?f.winner&&l.push(f.winner):u.push(f)}));if(await Promise.all(c),u.length)throw new _("ドロー処理で想定されない例外が発生した。",t,i,a,r,n,...u);if(l.length!==0)throw l.length===1?new re(l[0],`${l[0].getOpponentPlayer().name}がデッキからドローできなかった。`):new re(void 0,"お互いにデッキからカードをドローできなかった。")});o(this,"sendToGraveyard",async(t,i,a,r,n,s,l,u)=>{if(r>0&&a.length<r)return;const c=await this.duel.view.waitSelectEntities(i,{selectables:a,qty:r,validator:n,cancelable:u??!1},t);if(c)return await R.sendManyToGraveyard(c.map(d=>({entity:d,movedAs:s,movedBy:l,activator:i}))),this.duel.log.info(`${c.map(d=>d.status.name).join(", ")}を墓地に送った（${s.getDistinct().join(", ")}）。`,i),c});this.duel=t,this.cells=[...Array(7)].map(()=>[]);for(const i of Object.keys(Oa).map(Number))for(const a of Object.keys(Oa[i]).map(Number))this.cells[i][a]=new dc(this,i,a,i<3?t.duelists.Above:i>3?t.duelists.Below:a<2?t.duelists.Above:a>4?t.duelists.Below:void 0);this.summonFilterPool=new Uc,this.procFilterPool=new gc,this.numericStateOperatorPool=new yc,this.statusOperatorPool=new Gc,this.damageFilterPool=new Vc,this.moveLog=new kc(this),this.duel.clock.onStageChange.append(this.distributeOperators)}get stickyOperatorPools(){return[this.procFilterPool,this.statusOperatorPool,this.numericStateOperatorPool,this.summonFilterPool,this.damageFilterPool]}}const Or=e=>{let t=[];do{const i=e.qty&&e.qty>0?e.qty:Math.floor(Math.random()*e.selectables.length+1);t=e.selectables.randomPickMany(i)}while(!e.validator(t));return t};class iu{constructor(t){o(this,"onStateChangeEvent",new V);o(this,"_stateLog",[]);o(this,"_state");this._stateLog.push({state:t,timestamp:new Date}),this._state=t}get stateLog(){return this._stateLog}get wasSpawnedAt(){return this.stateLog[0].timestamp}get onStateChange(){return this.onStateChangeEvent.expose()}get state(){return this._state}set state(t){this._stateLog.push({state:t,timestamp:new Date}),this._state=t,this.onStateChangeEvent.trigger(t)}}class Nr{constructor(t,i){o(this,"_dispose");o(this,"_commit");o(this,"commit",()=>this._commit());this._dispose=t,this._commit=i}[Symbol.dispose](){this._dispose()}[Symbol.for("Symbol.dispose")](){this._dispose()}}class au{constructor(t){o(this,"onUpdateEvent",new V);o(this,"nextSeq");o(this,"records",[]);o(this,"_state","Opened");o(this,"pooledRecords",[]);o(this,"duel");o(this,"openTransaction",()=>this._state!=="Opened"?(console.info("ログの二重トランザクションを開始しようとしたため、ダミーを返す。"),new Nr(()=>{},()=>{})):(this._state="Pending",new Nr(this.closeTransaction,this.commit)));o(this,"commit",()=>{if(this._state!=="Pending")throw new _("DuelLog is not in Pending state.");this.records.push(...this.pooledRecords),this.pooledRecords=[],this.onUpdateEvent.trigger(this.nextSeq-1)});o(this,"closeTransaction",()=>{this._state="Opened",this.pooledRecords=[],this.onUpdateEvent.trigger(this.nextSeq-1)});o(this,"dispose",()=>{this.onUpdateEvent.clear()});o(this,"error",t=>{const i=["エラー発生"];t instanceof Error?(i.push("-- エラーメッセージ --"),i.push(t.message),t instanceof _&&(i.push("-- 関連オブジェクト --"),t.items.forEach(a=>i.push(JSON.stringify(a)))),i.push("-- エラー名称 --"),i.push(t.name||"エラー名称取得失敗"),i.push("-- スタックトレース --"),i.push(t.stack||"スタックトレース取得失敗")):(i.push("-- エラー型特定失敗 --"),i.push(JSON.stringify(t))),console.error(t),console.error(i),this.write("error","System",i,void 0)});o(this,"warn",t=>{this.write("warn","System",["【注意】",t],void 0)});o(this,"info",(t,i)=>{this.write("info","Others",[t],i)});o(this,"pushChainBlockHeaderLog",(t,i,a)=>{this.write("info","ChainBlockHeader",[a],t,{chainNumber:i})});o(this,"pushMoveLog",(t,i,a,r)=>{const n=a.cellType==="WaitingRoom"?void 0:a,s=r.cellType==="WaitingRoom"?void 0:r;if(!n&&!s)throw new _("移動元、移動先ともにWaitingRoomが指定されている。",t,i,a,r);const l=n&&s?"EntityMove":s?"EntityAppear":"EntityDisappear";this.write("info",l,[],t,{mainEntity:i,from:n,to:s})});o(this,"write",(t,i,a,r,n={})=>{const s=a.join(`
`),l={seq:this.nextSeq++,lvl:t,type:i,clock:this.duel.clock.getClone(),text:s,duelist:r,subEntities:[],...n};this._state==="Opened"||t!=="info"?(this.records.push(l),this.onUpdateEvent.trigger(this.nextSeq-1)):this.pooledRecords.push(l)});this.nextSeq=0,this.duel=t}get onUpdate(){return this.onUpdateEvent.expose()}get lastRecord(){return this.records.slice(-1)[0]}}class qa{constructor(t){o(this,"onUpdateEvent",new V);o(this,"_state","Disable");o(this,"defaultArgs");o(this,"_args");o(this,"resolve",()=>{});o(this,"show",t=>{this._args=t,this._state="Shown",console.log(this,this.onUpdateEvent),this.onUpdateEvent.trigger();const{promise:i,resolve:a}=Zn();return this.resolve=r=>{this._state="Disable",a(r),this.resolve=()=>{},this.onUpdateEvent.trigger()},i});o(this,"cancel",()=>{console.log(this),this.args.cancelable&&(this._state!=="Disable"&&this.resolve(void 0),this.terminate())});o(this,"terminate",()=>{this._state="Disable",this._args=this.defaultArgs,this.resolve=()=>{}});this.defaultArgs=t,this._args=t}get onUpdate(){return this.onUpdateEvent.expose()}get state(){return this._state}get args(){return this._args}}class ru{constructor(t,...i){o(this,"textSelector",new qa({title:"選択。",position:"Middle",choises:[],cancelable:!1}));o(this,"onUpdateEvent",new V);o(this,"modals");o(this,"eventHolder");o(this,"terminateAll",()=>{this.modals.forEach(t=>t.terminate()),this.onUpdateEvent.trigger()});this.modals=[this.textSelector,...i],this.eventHolder=t,this.modals.forEach(a=>a.onUpdate.append(()=>{this.onUpdateEvent.trigger()}))}get onUpdate(){return this.onUpdateEvent.expose()}}var nu=G("<div></div>"),su=G('<div class="duel_card_row svelte-1qeuyz"><div> </div> <div> </div></div>'),lu=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"> </div></div>'),ou=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"> </div></div>'),cu=G('<div class="duel_card_row svelte-1qeuyz"><div> </div> <div> </div></div>'),uu=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz">ペンデュラム</div></div>'),du=G('<div class="duel_card_row duel_card_detail svelte-1qeuyz"><div class="svelte-1qeuyz"> </div></div> <div class="duel_card_row duel_card_detail svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"><span> </span> / <span> </span></div></div>',1),fu=G('<button><div class="duel_card_body svelte-1qeuyz"><div class="duel_card_row svelte-1qeuyz" style="position:relative"><div> </div> <div class="svelte-1qeuyz"></div> <!></div> <!> <!> <!> <!></div></button>'),pu=G('<button><div class="svelte-1qeuyz">裏守備</div></button>'),gu=G('<button><div class="svelte-1qeuyz">セット</div></button>');function jn(e,t){ct(t,!1);let i=K(t,"entity",8),a=K(t,"state",8,"Disabled"),r=K(t,"selectedList",28,()=>[]),n=K(t,"isVisibleForcibly",8,!1),s=K(t,"isWideMode",8,!1),l=K(t,"dummyActionInfos",24,()=>[]),u=K(t,"cardActionResolve",8),c=K(t,"entitySelectResolve",8,()=>{}),d,f=Ai(!1),p=()=>{},h=K(t,"qty",12,void 0);const y=N=>{var b;d=N.activator,Y(f,!1),h((b=N.entitiesChoices)==null?void 0:b.qty),p=N.resolve};i().field.duel.view.onWaitStart.append(y);let v=Ai(!1);const g=N=>{(i().face==="FaceUp"||i().owner===i().field.duel.duelists.Below&&(i().isUnderControl||n()))&&i().field.duel.view.showCardInfo(i(),N??"Normal")},m=()=>{if(g(),console.log(i().toString(),a(),l().length,u(),h(),p),a()==="Disabled")return;if(a()==="Selectable"){if(Y(f,!P(f)),h()===1){c()&&c()([i()]),p&&p({selectedEntities:[i()]});return}r(P(f)?[...r(),i()]:r().filter(b=>b!==i()));return}if(l().length===0)return;if(l().length===1){const b=l()[0];if(u()){u()(b);return}console.log(i().toString(),a(),l().length,p),p({actionInfo:b});return}if(!d)return;i().field.duel.view.modalController.actionSelector.show({title:"行動を選択。",position:"Bottom",activator:d,dummyActionInfos:l(),cancelable:!0}).then(b=>{b&&p({actionInfo:b})})},T=N=>{var b;window.getSelection&&((b=window.getSelection())==null||b.removeAllRanges()),console.info("drag start",N,l()),i().field.duel.view.setDraggingActions(l()),Y(v,!0)},D=N=>{console.info("drag end",N,l()),i().field.duel.view.removeDraggingActions(),N.dataTransfer&&Y(v,!1)},w=()=>(g("Debug"),!1);Zt();var A=yt(),J=Ne(A);{var pe=N=>{var b=fu(),ie=L(b),I=L(ie),he=L(I),xe=L(he),Se=Q(he,4);ii(Se,1,()=>i().attr,ti,(U,ee)=>{var le=nu();te(()=>ae(le,`monster_attr ${P(ee)??""} svelte-1qeuyz`)),F(U,le)});var zt=Q(I,2);{var yi=U=>{var ee=su(),le=L(ee),dt=L(le),Ze=Q(le,2),_e=L(Ze);te((Ge,$e)=>{ae(le,pt(i().lvl!==i().origin.level?"different_from_its_origin":""),"svelte-1qeuyz"),ge(dt,Ge),ae(Ze,pt(i().rank!==i().origin.rank?"different_from_its_origin":""),"svelte-1qeuyz"),ge(_e,$e)},[()=>"★".repeat(i().lvl||0),()=>"☆".repeat(i().rank||0)],at),F(U,ee)},vi=U=>{var ee=yt(),le=Ne(ee);{var dt=_e=>{var Ge=lu(),$e=Q(L(Ge),2),Vt=L($e);te(()=>ge(Vt,`${ic[i().status.spellCategory]??""}魔法`)),F(_e,Ge)},Ze=_e=>{var Ge=yt(),$e=Ne(Ge);{var Vt=wt=>{var mi=ou(),Ue=Q(L(mi),2),bt=L(Ue);te(()=>ge(bt,`${ac[i().status.trapCategory]??""}罠`)),F(wt,mi)};X($e,wt=>{i().kind==="Trap"&&i().status.trapCategory&&wt(Vt)},!0)}F(_e,Ge)};X(le,_e=>{i().kind==="Spell"&&i().status.spellCategory?_e(dt):_e(Ze,!1)},!0)}F(U,ee)};X(zt,U=>{i().isMonster?U(yi):U(vi,!1)})}var cr=Q(zt,2);{var vl=U=>{var ee=cu(),le=L(ee),dt=L(le),Ze=Q(le,2),_e=L(Ze);te(()=>{ae(le,pt(i().psL!==i().origin.pendulumScaleL?"different_from_its_origin":""),"svelte-1qeuyz"),ge(dt,`◀ ${i().psL??""}`),ae(Ze,pt(i().psR!==i().origin.pendulumScaleR?"different_from_its_origin":""),"svelte-1qeuyz"),ge(_e,`${i().psR??""} ▶`)}),F(U,ee)};X(cr,U=>{var ee;(ee=i().status.monsterCategories)!=null&&ee.includes("Pendulum")&&U(vl)})}var ur=Q(cr,2);{var ml=U=>{var ee=uu();F(U,ee)};X(ur,U=>{i().kind==="Spell"&&i().isPendulumScale&&U(ml)})}var Sl=Q(ur,2);{var _l=U=>{var ee=du(),le=Ne(ee),dt=L(le),Ze=L(dt),_e=Q(le,2),Ge=Q(L(_e),2),$e=L(Ge),Vt=L($e),wt=Q($e,2),mi=L(wt);te((Ue,bt)=>{ge(Ze,`${Ue??""}
            ${bt??""}`),ae($e,pt(i().atk!==i().origin.attack?"different_from_its_origin":""),"svelte-1qeuyz"),ge(Vt,i().atk??"?"),ae(wt,pt(i().def!==i().origin.defense?"different_from_its_origin":""),"svelte-1qeuyz"),ge(mi,i().def??"?")},[()=>i().types.map(Ue=>nc[Ue]+(s()?rc[Ue]:"")).join(),()=>{var Ue;return(Ue=i().status.monsterCategories)==null?void 0:Ue.map(bt=>tc[bt]+(s()?ec[bt]:"")).join()}],at),F(U,ee)};X(Sl,U=>{i().isMonster&&U(_l)})}te(U=>{ae(b,`duel_card button_style_reset ${i().origin.kind??""} ${U??""} ${(P(f)?"duel_card_selected":"")??""} ${a()??""} duel_card_${i().orientation??""} ${(P(v)?"isDragging":"")??""} ${(s()?"duel_card_wide":"")??""} duel_card_${i().face??""} ${(i().isOnField?"duel_card_is_on_field":"")??""} svelte-1qeuyz`),wr(b,"draggable",a()==="Draggable"),wr(b,"title",i().nm),ae(he,pt(i().nm!==i().origin.name?"different_from_its_origin":""),"svelte-1qeuyz"),ge(xe,i().nm)},[()=>{var U;return((U=i().status.monsterCategories)==null?void 0:U.join(" "))||""}],at),ft("dragstart",b,T),ft("dragend",b,D),ft("click",b,m),ft("mouseenter",b,()=>g()),ft("contextmenu",b,w),F(N,b)},q=N=>{var b=yt(),ie=Ne(b);{var I=xe=>{var Se=pu();te(()=>ae(Se,`duel_card duel_card_face_down duel_card_face_down_defense ${a()??""}  ${(P(f)?"duel_card_selected":"")??""} svelte-1qeuyz`)),ft("click",Se,m),F(xe,Se)},he=xe=>{var Se=gu();te(()=>ae(Se,`duel_card duel_card_face_down ${a()??""}  ${(P(f)?"duel_card_selected":"")??""} svelte-1qeuyz`)),ft("click",Se,m),F(xe,Se)};X(ie,xe=>{i().battlePosition==="Set"?xe(I):xe(he,!1)},!0)}F(N,b)};X(J,N=>{i().face==="FaceUp"||n()||i().controller.duelistType==="Player"&&i().isUnderControl?N(pe):N(q,!1)})}F(e,A),ut()}var hu=G('<div class="modal_window_header svelte-2kmgt1"> </div>'),yu=G('<div><!> <div class="modal_window_body svelte-2kmgt1"><!></div> <div class="modal_window_footer svelte-2kmgt1"><!></div></div>');function sr(e,t){ct(t,!1);let i=K(t,"args",8),a=K(t,"eventHolder",8),r=Ai(!1);const n=()=>{Y(r,!0)},s=()=>{Y(r,!1)};a().onDragStart.append(n),a().onDragEnd.append(s),Zt();var l=yu(),u=L(l);{var c=y=>{var v=hu(),g=L(v);te(()=>ge(g,i().title)),F(y,v)};X(u,y=>{P(r)||y(c)})}var d=Q(u,2),f=L(d);Fa(f,t,"body",{});var p=Q(d,2),h=L(p);Fa(h,t,"footer",{}),te(y=>ae(l,`modal_window modal_window_${y??""} ${(P(r)?"modal_window_is_dragging":"")??""} svelte-2kmgt1`),[()=>i().position.toLowerCase()],at),F(e,l),ut()}const vu=(e,t,i)=>t.resolve(P(i));var mu=G('<div><!> <div class="cell_type_name svelte-p7db7v"> </div></div>'),Su=G("<div></div>"),_u=G('<div slot="body"></div>'),Cu=G('<button class="svelte-p7db7v">OK</button>'),Tu=(e,t)=>t.resolve(void 0),wu=G('<button class="cancel_button svelte-p7db7v">Cancel</button>'),bu=G('<div slot="footer" class="modal_window_footer svelte-p7db7v"><!> <!></div>');function Eu(e,t){ct(t,!0);let i=ro(Ie([])),a=t.args.chainBlockInfos.flatMap(l=>l.selectedEntities).getDistinct();var r=yt(),n=Ne(r);{var s=l=>{sr(l,{get eventHolder(){return t.eventHolder},get args(){return t.args},$$slots:{body:(u,c)=>{var d=_u();ii(d,21,()=>t.args.entitiesChoices.selectables.map(f=>f.controller.seat).getDistinct(),ti,(f,p)=>{var h=Su();ii(h,21,()=>t.args.entitiesChoices.selectables.filter(y=>y.controller.seat===P(p)).toSorted(Ic),ti,(y,v)=>{var g=mu(),m=L(g);jn(m,{get entity(){return P(v)},isVisibleForcibly:!0,state:"Selectable",entitySelectResolve:w=>t.resolve(w),get qty(){return t.args.entitiesChoices.qty},cardActionResolve:void 0,get selectedList(){return P(i)},set selectedList(w){Y(i,Ie(w))}});var T=Q(m,2),D=L(T);te(w=>{ae(g,`entities_list_item ${w??""} svelte-p7db7v`),ge(D,`〈${P(v).cell.shortName??""}〉`)},[()=>a.includes(P(v))?"effect_target":""]),F(y,g)}),te(()=>ae(h,`entities_list ${P(p)??""} svelte-p7db7v`)),F(f,h)}),F(u,d)},footer:(u,c)=>{var d=bu(),f=L(d);{var p=v=>{var g=Cu();g.__click=[vu,t,i],te(m=>g.disabled=m,[()=>!t.args.entitiesChoices.validator(P(i))]),F(v,g)};X(f,v=>{(t.args.entitiesChoices.qty??1e3)>1&&v(p)})}var h=Q(f,2);{var y=v=>{var g=wu();g.__click=[Tu,t],F(v,g)};X(h,v=>{t.args.cancelable&&v(y)})}F(u,d)}}})};X(n,l=>{l(s)})}F(e,r),ut()}oa(["click"]);var ku=G('<div class="duel_card_wrapper svelte-1pg50l9"><!> <div> </div></div>'),Du=G('<div class="action_list" slot="body" style="display: flex; justify-content: space-around;"></div>'),xu=(e,t)=>t()(void 0),Au=G('<button class="cancel_button svelte-1pg50l9">Cancel</button>'),Pu=G('<div slot="footer"><!></div>');function Mu(e,t){ct(t,!1);let i=K(t,"eventHolder",8),a=K(t,"args",8),r=K(t,"resolve",8);Zt();var n=yt(),s=Ne(n);{var l=u=>{sr(u,{get eventHolder(){return i()},get args(){return a()},$$slots:{body:(c,d)=>{var f=Du();ii(f,5,()=>a().dummyActionInfos,ti,(p,h)=>{var y=ku(),v=L(y);const g=at(()=>P(h).dests.length?"Draggable":"Clickable"),m=at(()=>a().dragAndDropOnly?[]:[P(h)]);jn(v,{get entity(){return P(h).action.entity},isVisibleForcibly:!0,get state(){return P(g)},get dummyActionInfos(){return P(m)},get cardActionResolve(){return r()}});var T=Q(v,2),D=L(T);te(()=>ge(D,`«${P(h).action.title??""}»`)),F(p,y)}),F(c,f)},footer:(c,d)=>{var f=Pu(),p=L(f);{var h=y=>{var v=Au();v.__click=[xu,r],F(y,v)};X(p,y=>{a().cancelable&&y(h)})}F(c,f)}}})};X(s,u=>{u(l)})}F(e,n),ut()}oa(["click"]);var Fu=(e,t,i)=>t()(i()),Ou=G('<li><button class="svelte-1rzyf4u"> </button></li>'),Nu=G('<ui slot="body" class="text_list svelte-1rzyf4u"></ui>'),Bu=(e,t)=>t()(void 0),Lu=G('<button class="cancel_button svelte-1rzyf4u">Cancel</button>'),qu=G('<div slot="footer"><!></div>');function Ru(e,t){ct(t,!1);let i=K(t,"eventHolder",8),a=K(t,"args",8),r=K(t,"resolve",8);Zt();var n=yt(),s=Ne(n);{var l=u=>{sr(u,{get eventHolder(){return i()},get args(){return a()},$$slots:{body:(c,d)=>{var f=Nu();ii(f,5,()=>a().choises,ti,(p,h)=>{let y=()=>P(h).seq,v=()=>P(h).text;var g=Ou(),m=L(g);m.__click=[Fu,r,y];var T=L(m);te(()=>{ae(g,`text_item ${y()??""} svelte-1rzyf4u`),ge(T,v())}),F(p,g)}),F(c,f)},footer:(c,d)=>{var f=qu(),p=L(f);{var h=y=>{var v=Lu();v.__click=[Bu,r],F(y,v)};X(p,y=>{a().cancelable&&y(h)})}F(c,f)}}})};X(s,u=>{u(l)})}F(e,n),ut()}oa(["click"]);const Hu=(e,t)=>t().modals.filter(i=>i.args.cancelable).forEach(i=>i.cancel());var Zu=G("<button>☆</button> <!> <!>",1),Gu=G("<div><!></div>");function $u(e,t){ct(t,!1);let i=K(t,"modalController",12),a=Ai(!1);const r=()=>{i(i())},n=()=>{console.log("hoge"),Y(a,!0),r()},s=()=>{Y(a,!1),r()};i().eventHolder.onDragStart.append(n),i().eventHolder.onDragEnd.append(s),i().onUpdate.append(r),Zt();var l=Gu(),u=L(l);{var c=d=>{var f=Zu(),p=Ne(f);p.__click=[Hu,i];var h=Q(p,2);Fa(h,t,"default",{});var y=Q(h,2);{var v=g=>{Ru(g,{get eventHolder(){return i().eventHolder},get args(){return i().textSelector.args},get resolve(){return i().textSelector.resolve}})};X(y,g=>{i().textSelector.state==="Shown"&&g(v)})}te(()=>ae(p,`overlay ${(P(a)?"pointer_events_none":"")??""} svelte-xqm104`)),F(d,f)};X(u,d=>{i().modals.some(f=>f.state==="Shown")&&d(c)})}te(()=>ae(l,`base ${(P(a)?"base_is_dragging":"")??""} svelte-xqm104`)),F(e,l),ut()}oa(["click"]);const Ki=class Ki extends ru{constructor(t,i){super(t,...Object.values(i))}};o(Ki,"createModalController",t=>{const i={actionSelector:new qa({title:"カード操作を選択。",position:"Bottom",activator:void 0,dummyActionInfos:[],cancelable:!1}),entitySelector:new qa({title:"対象を選択",position:"Middle",entitiesChoices:{selectables:[],validator:()=>!0,cancelable:!1},cancelable:!1,chainBlockInfos:[]})};return Object.assign(new Ki(t,i),i)});let Ra=Ki;var Uu=G("<!> <!>",1);function Up(e,t){ct(t,!1);let i=K(t,"modalController",8);Zt(),$u(e,{get modalController(){return i()},children:(a,r)=>{var n=Uu(),s=Ne(n);{var l=d=>{Eu(d,{get eventHolder(){return i().eventHolder},get args(){return i().entitySelector.args},get resolve(){return i().entitySelector.resolve}})};X(s,d=>{i().entitySelector.state==="Shown"&&d(l)})}var u=Q(s,2);{var c=d=>{Mu(d,{get eventHolder(){return i().eventHolder},get args(){return i().actionSelector.args},get resolve(){return i().actionSelector.resolve}})};X(u,d=>{i().actionSelector.state==="Shown"&&d(c)})}F(a,n)},$$slots:{default:!0}}),ut()}const ju=[{seq:10,name:"Internet Explorer",key:"msie"},{seq:20,name:"Internet Explorer",key:"trident"},{seq:30,name:"Edge",key:"edge"},{seq:40,name:"Google Chrome",key:"chrome"},{seq:50,name:"Safari",key:"safari"},{seq:60,name:"Mozilla Firefox",key:"firefox"},{seq:70,name:"Opera",key:"opera"}],zu=[{seq:10,name:"Microsoft Windows",key:"windows nt"},{seq:20,name:"Android",key:"android"},{seq:30,name:"iOS",key:"iphone"},{seq:40,name:"iOS",key:"ipad"},{seq:50,name:"macOS",key:"mac os x"}],ni=window.navigator.userAgent.toLowerCase();var jr;const Vu=((jr=ju.find(e=>ni.indexOf(e.key)!==-1))==null?void 0:jr.name)??"Unknown Browser";var zr;const lr=((zr=zu.find(e=>ni.indexOf(e.key)!==-1))==null?void 0:zr.name)??"Unknown OS",zn=ni.indexOf("iphone")!==-1||lr==="Android"&&ni.indexOf("mobile")!==-1,Wu=ni.indexOf("ipad")!==-1||lr==="Android"&&!zn,Br=zn?"Smart Phone":Wu?"Tablet Device":"PC",_a={canDragElement:Br==="PC",text:`${Br} ${lr} ${Vu}`};class Qu{constructor(t){o(this,"onDuelUpdateEvent",new V);o(this,"requireUpdate",()=>{this.onDuelUpdateEvent.trigger()});o(this,"onWaitStartEvent",new V);o(this,"onWaitEndEvent",new V);o(this,"onDragStartEvent",new V);o(this,"onDragEndEvent",new V);o(this,"onAnimationStartEvent",new V);o(this,"onShowCardEntityEvent",new V);o(this,"duel");o(this,"modalController");o(this,"_message");o(this,"waitMode");o(this,"infoBoardState");o(this,"infoBoardCell");o(this,"getCell",(t,i)=>this.duel.field.cells[t][i]);o(this,"showCardInfo",(t,i)=>{this.onShowCardEntityEvent.trigger({card:t,mode:i})});o(this,"dispose",()=>{this.onDragStartEvent.clear(),this.onDragEndEvent.clear(),this.onDuelUpdateEvent.clear(),this.onWaitStartEvent.clear(),this.onWaitEndEvent.clear()});o(this,"waitFieldAction",async t=>{if(this.duel.getTurnPlayer().duelistType==="NPC"){const n=this.duel.getTurnPlayer().selectActionForNPC(t,[]);return n?{actionInfo:n}:{phaseChange:this.duel.nextPhaseList[0]}}const i=await this._waitDuelistAction(this.duel.getTurnPlayer(),t,"Free","",void 0,void 0,!1);if(!i.actionInfo)return{...i,actionInfo:void 0};const a={...i.actionInfo},r=t.find(n=>{var s;return((s=i.actionInfo)==null?void 0:s.originSeq)===n.originSeq});if(!r)throw new _("想定されない状態",t,i);return{...i,actionInfo:{dest:a.dest,battlePosition:a.battlePosition,action:r.action,originSeq:r.originSeq}}});o(this,"waitQuickEffect",async(t,i,a,r,n)=>{if(i.length===0)return;if(t.duelistType==="NPC")return t.selectActionForNPC(i,a);const s=[this.modalController.actionSelector.show({title:r,position:"Bottom",activator:t,dummyActionInfos:i,cancelable:n}),this._waitDuelistAction(t,i,"Modal",this.message,void 0,void 0,!1).then(c=>c.actionInfo)],l=await Promise.any(s);if(!l)return;this.infoBoardState="Default";const u=i.find(c=>l.originSeq===c.originSeq);if(!u)throw new _("想定されない状態",l);return{...u,dest:l.dest}});o(this,"waitSubAction",async(t,i,a,r=!1)=>{if(t.duelistType==="NPC")throw Error("Not implemented");const n=await this._waitDuelistAction(t,i,"Modal",a,void 0,void 0,r);if(n&&n.actionInfo)return n.actionInfo});o(this,"waitSelectEntities",async(t,i,a)=>{if(!i.selectables.length)return;if(i.qty&&i.selectables.length===i.qty)return[...i.selectables];if(t.duelistType==="NPC")return Or(i);let r;i.selectables.some(s=>s.entityType==="Duelist")&&(r={...i,selectables:i.selectables.filter(s=>s.entityType==="Duelist").map(s=>s.cell),qty:1,validator:s=>s.length===1});const n=await this._waitDuelistAction(t,[],"Modal",a,i,r,i.cancelable);return(n.selectedEntities||n.selectedCells)&&[...n.selectedEntities??[],...(n.selectedCells??[]).flatMap(s=>s.entities).filter(s=>s.entityType==="Duelist")]});o(this,"waitSelectNumber",async(t,i,a,r)=>{const n=await this.waitSelectText(t,a.getDistinct().toSorted().map(s=>({seq:s,text:s.toString()})),i,r);if(n)return n.seq});o(this,"waitYesOrNo",async(t,i)=>{const a=await this.waitSelectText(t,[{seq:0,text:"Yes"},{seq:1,text:"No"}],i,!1);return(a==null?void 0:a.seq)===0});o(this,"waitSelectText",async(t,i,a,r=!1)=>{if(t.duelistType==="NPC")return i.randomPick();const n=await this.modalController.textSelector.show({title:a,position:"Middle",choises:i,cancelable:r});if(n===void 0){if(!r)throw new O(t,i,a,r);return}return i.find(s=>s.seq===n)});o(this,"waitAnimation",async t=>{var i;return this._message="",this.waitMode="Animation",window.getSelection&&((i=window.getSelection())==null||i.removeAllRanges()),this.onDuelUpdateEvent.trigger(),new Promise(a=>this.onAnimationStartEvent.trigger({...t,resolve:a}))});o(this,"waitTokenAnimation",async()=>{this.requireUpdate(),await Gi(450)});o(this,"setDraggingActions",t=>{this.onDragStartEvent.trigger(t),this.requireUpdate()});o(this,"removeDraggingActions",()=>{this.onDragEndEvent.trigger()});o(this,"waitSelectAction",async(t,i,a,r)=>{var u;const n=i.map(c=>mt.createDummyAction(c.entity,c.title,[],void 0,c.origin)),s=await this._waitDammyAction(t,n,a,r);if(!s)return;const l=(u=i.find(c=>c.origin.seq===s.originSeq))==null?void 0:u.origin;if(!l)throw new _("想定されない状態",i,s);return l});o(this,"waitSelectSummonDestination",async(t,i,a,r,n)=>{const s=a.length>1&&_a.canDragElement?"カードを召喚先へドラッグ。":"表示形式を選択。";if(!a.length&&!r.length){if(n)return;throw new _("想定されない状態",t,i,a,r,n)}let l=[...r];for(;;){const u={dest:a.randomPick(),battlePosition:l[0]};if(l.length===1&&!_a.canDragElement){const f=await this.waitSelectCell(t,a,n,"召喚先を選択。");return f?{...u,dest:f}:void 0}const c=l.map(f=>mt.createDummyAction(i,f,a,f)),d=await this._waitDammyAction(t,c,s,n);if(!d)return;if(d.battlePosition&&(l=[d.battlePosition]),!(a.length>1&&!d.dest))return u.dest=d.dest??u.dest,u.battlePosition=d.battlePosition??u.battlePosition,u}});o(this,"waitSelectDestination",async(t,i,a,r,n,s=!1)=>{if(!a.length)return;if(a.length===1)return a[0];if(!_a.canDragElement)return await this.waitSelectCell(t,a,s,r);let l=a.randomPick();const u=[mt.createDummyAction(i,n,a,void 0)],c=await this._waitDammyAction(t,u,r,s);if(c)return l=c.dest??l,l});o(this,"_waitDammyAction",async(t,i,a,r=!1)=>{if(!i.length)return;const n=i.randomPick();let s={...n,dest:n.dest??n.dests.randomPick()};if(t.duelistType!=="NPC"){const l=[this.modalController.actionSelector.show({title:a,position:"Bottom",activator:t,dummyActionInfos:i,cancelable:r}),this.duel.view.waitSubAction(t,i,a,r)],u=await Promise.any(l);if(!u&&!r)throw new O(u,l);if(!u)return;s=u??s}return s});o(this,"waitSelectCell",async(t,i,a,r)=>i.length?t.duelistType==="NPC"?i.randomPick():(await this.waitSelectCells(t,{selectables:i,qty:1,validator:s=>s.length===1,cancelable:a},r)??[])[0]:void 0);o(this,"waitSelectCells",async(t,i,a)=>{if(!i.selectables.length)return;if(t.duelistType==="NPC")return Or(i);const r=await this._waitDuelistAction(t,[],"Modal",a,void 0,i,i.cancelable);if((!r||!r.selectedCells)&&!i.cancelable)throw new O(t,i,a);return r.selectedCells});o(this,"_waitDuelistAction",async(t,i,a,r,n,s,l=!1)=>{for(this.waitMode=a,this._message=r;this.onDuelUpdateEvent.length<38;)console.log("this.onDuelUpdateEvent.length",this.onDuelUpdateEvent.length),await Gi(1);this.onDuelUpdateEvent.trigger();const u=Zn(),c={resolve:u.resolve,activator:t,dummyActionInfos:i,chainBlockInfos:t.duel.chainBlockInfos,entitiesChoices:n,cellsChoices:s};console.info("wait start",c),this.onWaitStartEvent.trigger(c);const d=await u.promise;if(console.info("response",d),this.modalController.terminateAll(),this.waitMode="None",this.onWaitEndEvent.trigger(),d.surrender)throw new re(t.getOpponentPlayer(),`${t.profile.name}がサレンダーした。`);if(!l&&d.cancel)throw new _("キャンセル不可のアクションがキャンセルされた。",d,i,a,n,s);return this.infoBoardState="Default",d});this.duel=t,this._message="",this.waitMode="None",this.infoBoardState="Default",this.infoBoardCell=t.duelists.Below.getExtraDeck(),this.modalController=Ra.createModalController(this)}get onDuelUpdate(){return this.onDuelUpdateEvent.expose()}get onWaitStart(){return this.onWaitStartEvent.expose()}get onWaitEnd(){return this.onWaitEndEvent.expose()}get onDragStart(){return this.onDragStartEvent.expose()}get onDragEnd(){return this.onDragEndEvent.expose()}get onAnimation(){return this.onAnimationStartEvent.expose()}get onShowCardEntity(){return this.onShowCardEntityEvent.expose()}get message(){var t;return(this._message||((t=this.duel.log.records.filter(i=>i.type==="Others"||i.type==="System").slice(-1)[0])==null?void 0:t.text))??""}}const Ha=["turn","phaseSeq","stepSeq","stageSeq","chainSeq","chainBlockSeq","procSeq"];[...Ha];const Yi=class Yi{constructor(){o(this,"onClockChangeEvents",{turn:new V,phaseSeq:new V,stepSeq:new V,stageSeq:new V,chainSeq:new V,chainBlockSeq:new V,procSeq:new V});o(this,"_turn",0);o(this,"_phaseSeq",0);o(this,"_stepSeq",0);o(this,"_stageSeq",0);o(this,"_chainSeq",0);o(this,"_chainBlockSeq",0);o(this,"_procSeq",0);o(this,"_totalProcSeq",0);o(this,"_periodKey");o(this,"_previousStartPoints",{turn:0,phaseSeq:0,stepSeq:0,stageSeq:0,chainSeq:0,chainBlockSeq:0,procSeq:0});o(this,"_currentStartPoints",{turn:0,phaseSeq:0,stepSeq:0,stageSeq:0,chainSeq:0,chainBlockSeq:0,procSeq:0});o(this,"setPhase",(t,i)=>{const a=Object.values(gt).filter(r=>r.phase===i).find(r=>(r.step??"start")==="start");if(!a)throw new _("想定されない状態",this.period,i,gt);i==="draw"?(this.turn>0&&t.log.info("ターン終了。",t.getTurnPlayer()),this._turn++,this._phaseSeq=0):(t.log.info(`フェイズ移行（${this.period.name}→${a.name}）`,t.getTurnPlayer()),this._phaseSeq++),this._stepSeq=0,this._stageSeq=0,this.periodKey=a.key});o(this,"setStep",(t,i)=>{const a=this.period.phase,r=Object.values(gt).filter(n=>n.phase===a).find(n=>(n.step??"")===i);if(!r)throw new _("想定されない状態",this.period,i,gt);this.period.name!==r.name&&(t.log.info(`ステップ移行（${this.period.name}→${r.name}）`,t.getTurnPlayer()),this._stepSeq++,this._stageSeq=0,this.periodKey=r.key)});o(this,"setStage",(t,i)=>{const a=this.period,r=Object.values(gt).filter(n=>n.phase===a.phase).filter(n=>n.step===a.step).find(n=>(n.stage??"")===i);if(!r)throw new _("想定されない状態",this.period,i,gt);t.log.info(`タイミング移行（${this.period.name}→${r.name}）`,t.getTurnPlayer()),this._stageSeq++,this.periodKey=r.key});o(this,"incrementChainSeq",()=>{this._chainSeq++,this._chainBlockSeq=0,this._procSeq=0,this.incrementTotalProcSeq()});o(this,"incrementChainBlockSeq",()=>{this._chainBlockSeq++,this._procSeq=0,this.incrementTotalProcSeq()});o(this,"incrementProcSeq",()=>{this._procSeq++,this.incrementTotalProcSeq()});o(this,"incrementTotalProcSeq",()=>{this._totalProcSeq++;let t=!0;Ha.toReversed().forEach(i=>{t&&(this._previousStartPoints[i]=this.currentStartPoints[i],this._currentStartPoints[i]=this.totalProcSeq),t=t&&this[i]===0}),Ha.toReversed().filter(i=>this._currentStartPoints[i]===this.totalProcSeq).filter(i=>i!=="procSeq").forEach(i=>this.onClockChangeEvents[i].trigger(this)),this.onClockChangeEvents.procSeq.trigger(this)});o(this,"toFullString",()=>`${this.totalProcSeq}(t${this.turn}-phs${this.phaseSeq}-stp${this.stepSeq}-stg${this.stepSeq}-c${this.chainSeq}-cb${this.chainBlockSeq}-prc${this.procSeq})`);o(this,"getClone",()=>({turn:this.turn,phaseSeq:this.phaseSeq,stepSeq:this.stepSeq,stageSeq:this.stageSeq,chainSeq:this.chainSeq,chainBlockSeq:this.chainBlockSeq,procSeq:this.procSeq,totalProcSeq:this.totalProcSeq,period:this.period}));o(this,"isSameTurn",t=>this.turn===t.turn);o(this,"isSameChain",t=>Yi.isSameChain(this,t));o(this,"isPreviousChain",t=>this.turn===t.turn&&this.phaseSeq===t.phaseSeq&&this.stepSeq===t.stepSeq&&this.stageSeq===t.stageSeq&&this.chainSeq===t.chainSeq+1);o(this,"isPreviousStage",t=>this.turn===t.turn&&this.phaseSeq===t.phaseSeq&&this.stepSeq===t.stepSeq&&this.stageSeq===t.stageSeq+1);o(this,"isPreviousTurn",t=>this.turn===t.turn+1);o(this,"isPreviousProc",t=>this.totalProcSeq===t.totalProcSeq+1);this._periodKey="end"}get onTurnChange(){return this.onClockChangeEvents.turn.expose()}get onStageChange(){return this.onClockChangeEvents.stageSeq.expose()}get onProcSeqChange(){return this.onClockChangeEvents.procSeq.expose()}get previousStartPoints(){return this._previousStartPoints}get currentStartPoints(){return this._currentStartPoints}set periodKey(t){this._periodKey!==t&&(this._periodKey=t,this._chainSeq=0,this._chainBlockSeq=0,this._procSeq=0,this.incrementTotalProcSeq())}get periodKey(){return this._periodKey}get period(){return gt[this.periodKey]}get turn(){return this._turn}get phaseSeq(){return this._phaseSeq}get stepSeq(){return this._stepSeq}get stageSeq(){return this._stageSeq}get chainSeq(){return this._chainSeq}get chainBlockSeq(){return this._chainBlockSeq}get procSeq(){return this._procSeq}get totalProcSeq(){return this._totalProcSeq}get isFirstChain(){return this.chainSeq===0}};o(Yi,"isSameChain",(t,i)=>t.turn===i.turn&&t.phaseSeq===i.phaseSeq&&t.stepSeq===i.stepSeq&&t.stageSeq===i.stageSeq&&t.chainSeq===i.chainSeq);let Za=Yi;class Xu{constructor(t){o(this,"onInsertEvent",new V);o(this,"nextSeq");o(this,"records",[]);o(this,"duel");o(this,"push",t=>{const i={seq:this.nextSeq++,clock:this.duel.clock.getClone(),chainBlockInfo:t};this.records.push(i),this.onInsertEvent.trigger(i)});this.nextSeq=0,this.duel=t}get onInsert(){return this.onInsertEvent.expose()}}class pi{constructor(t,i){o(this,"duel");o(this,"phase");o(this,"_priorityHolder");o(this,"turnPlayer");o(this,"_chainBlockInfos",[]);o(this,"proceed",async()=>await this._proceed());o(this,"procSpellSpeed1",async()=>{this.priorityHolder=this.turnPlayer;let t=0;const i={Above:Number.MAX_VALUE,Below:Number.MAX_VALUE};for(;;){const a=this.priorityHolder.getEnableActions(["IgnitionEffect","QuickEffect","CardActivation","LingeringEffect"],["Normal","Quick","Counter"],[]);if(i[this.priorityHolder.seat]=a.filter(l=>l.action.isMandatory).length,Object.values(i).every(l=>l===0)&&t>1)break;const r=a.find(l=>l.action.isMandatory);let n=r?{action:r.action,originSeq:r.action.seq}:void 0,s=!n;if(this.priorityHolder.isTurnPlayer?t===0&&(s=!0):i[this.turnPlayer.seat]&&(s=!0),a.length&&(a.length>1||!n)&&(this.priorityHolder.chainConfig.noticeFreeChain||a.some(l=>l.action.isNoticedForcibly))&&(n=await this.duel.view.waitQuickEffect(this.priorityHolder,a,[],this.duel.clock.period.name,s)),n){if(await this.procChain({activator:this.priorityHolder,actionInfo:n},void 0)==="cancel")continue;if(!await this.procFreeChain())return!1;this.priorityHolder=this.turnPlayer,t=0;continue}this.priorityHolder=this.priorityHolder.getOpponentPlayer(),t++}return!0});o(this,"procFreeChain",async(t=()=>!0)=>{const i=this.duel.clock.period.key;for(;await this.procChain(void 0,void 0)!=="pass";)if(this.duel.clock.period.key!==i||!t())return!1;return!0});o(this,"procTriggerEffects",async()=>{for(;await this.procChain(void 0,void 0,!0)==="done";);});o(this,"procChain",async(t,i,a)=>{const r=this.chainBlockInfos.length===0;let n=t?[]:i??Object.values(this.duel.duelists).flatMap(l=>l.getEnableActions(["TriggerEffect"],[this.chainBlockInfos.length?"Quick":"Normal"],this.chainBlockInfos).map(u=>({activator:l,actionInfo:u,targetChainBlock:this.chainBlockInfos.slice(-1)[0]}))),s;if(t)s={activator:t.activator,action:t.actionInfo.action,dest:t.actionInfo.dest,targetChainBlock:void 0},this.priorityHolder=s.activator;else if(n.length>0){const l=await this.selectTriggerEffect(n);l?(n=n.filter(u=>u!==l),s={...l,action:l.actionInfo.action},this.priorityHolder=s.activator):n=[]}if(!s){if(a)return"pass";let l=0;for(;l<2;){this.priorityHolder=this.priorityHolder.getOpponentPlayer();const u=["Counter"];this.chainBlockInfos.every(f=>f.action.spellSpeed!=="Counter")&&u.push("Quick");let d=this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],u,this.chainBlockInfos).some(f=>f.action.isNoticedForcibly)||!!this.attackingMonster;if(d||(this.chainBlockInfos.length?d=this.priorityHolder.chainConfig.noticeSelfChain||this.chainBlockInfos.slice(-1)[0].activator!==this.priorityHolder:d=this.priorityHolder.chainConfig.noticeFreeChain),d){const f=this.chainBlockInfos.some(h=>h.action.isWithChainBlock)?"チェーンして効果を発動しますか？":"クイックエフェクト発動タイミング。効果を発動しますか？",p=await this.duel.view.waitQuickEffect(this.priorityHolder,this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],u,this.chainBlockInfos),this.chainBlockInfos,f,!0);if(p){s={...p,activator:this.priorityHolder,targetChainBlock:this.chainBlockInfos.slice(-1)[0]};break}}l++}}if(console.info("selected action: ",s),s){const l=s.activator,u=await s.action.prepare(l,s.dest,s.targetChainBlock,this.chainBlockInfos,r,!1);if(!u)return"cancel";if(this.duel.chainBlockLog.push(u),this._chainBlockInfos.push(u),this.duel.clock.incrementProcSeq(),this.duel.clock.incrementChainBlockSeq(),n=n.filter(c=>c.actionInfo.action.seq!==(s==null?void 0:s.action.seq)).filter(c=>c.actionInfo.action.validateCount(c.activator,this.chainBlockInfos)),u.action.isChainable&&await this.procChain(void 0,n.length?n:void 0),await u.action.execute(u,this.chainBlockInfos),u.state==="done"||u.state==="failed")for(const c of[this.turnPlayer,this.nonTurnPlayer]){for(const d of c.getEnableActions(["Exodia"],["Normal"],[u]))await d.action.directExecute(c,u,!1);for(const d of c.getEnableActions(["AfterChainBlock"],["Normal"],[u])){await d.action.directExecute(c,u,!1);for(const f of c.getEnableActions(["Exodia"],["Normal"],[u]))await f.action.directExecute(c,u,!1)}}r?(await S.sendManyToGraveyardForTheSameReason(this._chainBlockInfos.filter(c=>c.action.playType==="CardActivation").filter(c=>!c.action.isLikeContinuousSpell).map(c=>c.action.entity).filter(c=>c.isOnFieldStrictly).filter(c=>c.face==="FaceUp"),["Rule"],void 0,void 0),this._chainBlockInfos.reset(),u.nextActionInfo&&await this.procChain({activator:u.activator,actionInfo:u.nextActionInfo},void 0),this.duel.clock.incrementChainSeq()):(u.nextActionInfo&&await u.nextActionInfo.action.directExecute(u.activator,void 0,!1),this.duel.clock.incrementChainBlockSeq())}return s?"done":"pass"});o(this,"selectTriggerEffect",async t=>{if(t.length>0)for(const i of[!0,!1])for(const a of[this.turnPlayer,this.nonTurnPlayer]){const r=t.filter(s=>s.actionInfo.action.isMandatory===i&&s.activator===a);if(r.length===0)continue;if(r.length===1&&i)return r[0];const n=await this.duel.view.waitQuickEffect(a,r.map(s=>s.actionInfo),this.chainBlockInfos,"トリガーエフェクトを選択。",!i);if(n)return r.find(s=>s.actionInfo.action===n.action)}});this.duel=t,this.phase=i,this.duel.clock.setPhase(this.duel,this.phase),this.turnPlayer=this.duel.getTurnPlayer(),this._priorityHolder=this.turnPlayer}set priorityHolder(t){this._priorityHolder=t}get priorityHolder(){return this._priorityHolder}get nonTurnPlayer(){return this.turnPlayer.getOpponentPlayer()}get chainBlockInfos(){return this._chainBlockInfos}}class Ku extends pi{constructor(i,a){super(i,a);o(this,"_attackingMonster");o(this,"_targetForAttack");o(this,"declareAttack",(i,a,r=!1)=>{var l;this._attackingMonster=i,this._targetForAttack=a;let n=" ("+((l=a.battlePosition==="Attack"?a.atk:a.def)==null?void 0:l.toString())+")";a.face==="FaceDown"&&(n=" (????)"),a.entityType==="Duelist"&&(n="");const s=r?"攻撃対象再選択":"攻撃宣言";r||i.info.attackDeclareCount++,this.duel.log.info(`${s}:${i.toString()} (${i.atk})⇒ ${a.toString()}${n}`,i.controller)});o(this,"_proceed",async()=>(await this.procBattlePhaseStartStep()&&await this.procBattlePhaseBattleStep(),await this.procBattlePhaseEndStep(),new Vn(this.duel,"main2")));o(this,"procBattlePhaseStartStep",async()=>(this.setStep("start"),this.priorityHolder=this.turnPlayer,this._attackingMonster=void 0,this._targetForAttack=void 0,await this.procSpellSpeed1()));o(this,"procBattlePhaseBattleStep",async()=>{for(;;){this.setStep("battle"),this.priorityHolder=this.turnPlayer,this._attackingMonster=void 0,this._targetForAttack=void 0;const i=await this.duel.view.waitFieldAction(this.priorityHolder.getEnableActions(["DeclareAttack","QuickEffect","CardActivation"],["Normal","Quick","Counter"],[]));if(i.phaseChange)break;if(!(!i.actionInfo||await this.procChain({activator:this.priorityHolder,actionInfo:i.actionInfo},void 0)==="cancel")){if(!this.attackingMonster||!this.targetForAttack){await this.procTriggerEffects();continue}for(;this.attackingMonster&&this.targetForAttack;){const r=this.duel.clock.totalProcSeq,n=this.nonTurnPlayer.getMonstersOnField(),s=await this.procChain(void 0,void 0);if(await this.procTriggerEffects(),!this.attackingMonster)throw new _("想定されない状態");if(!this.canContinueBattle())break;const l=this.attackingMonster.getAttackTargets();if(n.some(u=>!u.isOnFieldAsMonsterStrictly)||this.nonTurnPlayer.getMonstersOnField().flatMap(u=>u.moveLog.records).filter(u=>u.movedAt.totalProcSeq>r).some(u=>!u.cell.isMonsterZoneLikeCell)?(this.duel.log.info("モンスターの数が増減したためバトルステップの巻き戻しが発生。"),this._targetForAttack=void 0):this.targetForAttack.entityType==="Duelist"&&l.every(u=>u!==this.targetForAttack)&&!this.attackingMonster.status.canDirectAttack&&(this.duel.log.info(`${this.attackingMonster.toString()}が直接攻撃能力を喪失したため、バトルステップの巻き戻しが発生。`),this._targetForAttack=void 0),!this.targetForAttack){if(!l.length){this.duel.log.info("攻撃可能な対象が存在しないため、攻撃対象選択を選択肢しなおせない。");break}if(this.turnPlayer.duelistType==="Player"&&!await this.duel.view.waitYesOrNo(this.turnPlayer,"攻撃対象選択を選択し直す？")){this.turnPlayer.writeInfoLog(`${this.attackingMonster.toString()}の攻撃宣言をキャンセル。`);break}const u=await this.turnPlayer.waitSelectEntity(l,"攻撃対象を選択。",!0);if(!u){this.turnPlayer.writeInfoLog(`${this.attackingMonster.toString()}の攻撃宣言をキャンセル。`);break}this.declareAttack(this.attackingMonster,u,!0);continue}if(s==="pass")break}this.attackingMonster&&this.targetForAttack&&await this.procBattlePhaseDamageStep()}}});o(this,"procBattlePhaseDamageStep",async()=>{if(!this.attackingMonster||!this.targetForAttack)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);if(this.targetForAttack.entityType!=="Duelist"&&!this.targetForAttack.isOnFieldAsMonsterStrictly)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);for(const i of[this.procBattlePhaseDamageStep1,this.procBattlePhaseDamageStep2,this.procBattlePhaseDamageStep3,this.procBattlePhaseDamageStep4,this.procBattlePhaseDamageStep5])if(!await i())return});o(this,"procBattlePhaseDamageStep1",async()=>(this.setStage("start"),await this.procFreeChain(this.canContinueBattle)));o(this,"procBattlePhaseDamageStep2",async()=>{if(!this.attackingMonster)throw new _("想定されない状態",this.attackingMonster);if(!this.targetForAttack)throw new _("想定されない状態",this.targetForAttack);const i=this.attackingMonster,a=this.targetForAttack;return this.setStage("beforeDmgCalc"),a.battlePosition==="Set"&&a.setBattlePosition("Defense",["Flip","Battle"],i,i.controller),await this.procFreeChain(this.canContinueBattle)});o(this,"procBattlePhaseDamageStep3",async()=>{if(!this.attackingMonster)throw new _("想定されない状態",this.attackingMonster);if(!this.targetForAttack)throw new _("想定されない状態",this.targetForAttack);const i=this.attackingMonster,a=this.targetForAttack;if(i.atk===void 0)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);if(this.setStage("dmgCalc"),!await this.procFreeChain(this.canContinueBattle))return!1;const r=i.atk,n=(a.battlePosition==="Attack"?a.atk:a.def)??0,s=this.turnPlayer,l=i.actions.find(d=>d.playType==="Battle");if(!l)throw new _(`${i.toString()}に戦闘アクションが定義されていない。`);const u=await l.prepare(s,a.cell,void 0,[],!1,!1);if(!u)throw new O("戦闘アクションがキャンセルされた。");if(this.duel.chainBlockLog.push(u),a.entityType==="Duelist")s.writeInfoLog(`ダメージ計算：${i.toString()} (${r}) ⇒ ${a.toString()}`),i.controller.getOpponentPlayer().battleDamage(r-n,i,a,u);else{s.writeInfoLog(`ダメージ計算：${i.toString()} (${r}) ⇒ ${a.toString()} (${n})`),r>0&&r>n?a.battlePosition==="Attack"?i.controller.getOpponentPlayer().battleDamage(r-n,i,a,u):i.status.piercingTo.getDistinct().forEach(f=>f.battleDamage(r-n,i,a,u)):r<n&&i.controller.battleDamage(n-r,a,i,u);const d=[];r>0&&(r>n||r===n&&a.battlePosition==="Attack")&&d.push(a),a.battlePosition==="Attack"&&r<=n&&d.push(i),await S.tryMarkForDestroy(d,u)}u.state=r>n?"done":"failed",i.info.battleLog.push({enemy:a,timestamp:this.duel.clock.getClone()}),a.info.battleLog.push({enemy:i,timestamp:this.duel.clock.getClone()});const c=Object.values(this.duel.duelists).filter(d=>d.lp<=0);if(c.length)throw c.length===1?new re(c[0].getOpponentPlayer(),`戦闘ダメージによって、${c[0].name}のライフポイントがゼロになった。`):new re(void 0,"戦闘ダメージによって、お互いのライフポイントがゼロになった。");return!0});o(this,"procBattlePhaseDamageStep4",async()=>(this.setStage("afterDmgCalc"),!!await this.procFreeChain()));o(this,"procBattlePhaseDamageStep5",async()=>(this.setStage("end"),await S.waitCorpseDisposal(this.duel),this.duel.clock.incrementChainSeq(),!!await this.procFreeChain()));o(this,"procBattlePhaseEndStep",async()=>{this.setStep("end"),this.priorityHolder=this.turnPlayer,await this.procSpellSpeed1()});o(this,"canContinueBattle",()=>this.attackingMonster?(this.attackingMonster.isOnFieldStrictly?this.attackingMonster.face==="FaceDown"?(this.duel.log.info(`${this.attackingMonster.toString()}が裏側守備表示になったため、戦闘が中断された。`),this._attackingMonster=void 0):this.attackingMonster.orientation==="Horizontal"&&(this.duel.log.info(`${this.attackingMonster.toString()}が守備表示になったため、戦闘が中断された。`),this._attackingMonster=void 0):(this.duel.log.info(`${this.attackingMonster.toString()}がフィールドに存在しなくなっため、戦闘が中断された。`),this._attackingMonster=void 0),!!this.attackingMonster):!1);o(this,"setStep",i=>{this.duel.clock.setStep(this.duel,i)});o(this,"setStage",i=>{this.duel.clock.setStage(this.duel,i)})}get nextPhaseList(){return["main2"]}get attackingMonster(){return this._attackingMonster}get targetForAttack(){return this._targetForAttack}}class Vn extends pi{constructor(i,a){super(i,a);o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{for(;;){this.priorityHolder=this.turnPlayer;const i=await this.duel.view.waitFieldAction(this.priorityHolder.getEnableActions(["NormalSummon","SpellTrapSet","SpecialSummon","FlipSummon","ChangeBattlePosition","IgnitionEffect","QuickEffect","CardActivation","LingeringEffect"],["Normal","Quick","Counter"],[]));if(i.actionInfo){if(await this.procChain({activator:this.priorityHolder,actionInfo:i.actionInfo},void 0)==="cancel")continue;await this.procFreeChain();continue}const a=i.phaseChange;if(a){this.priorityHolder=this.nonTurnPlayer;let r="done";for(;;){const n=await this.duel.view.waitQuickEffect(this.priorityHolder,this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],["Quick","Counter"],[]),[],"相手がフェイズを終了しようとしている。",!0);if(n&&(r=await this.procChain({activator:this.priorityHolder,actionInfo:n},void 0),r==="done")){await this.procTriggerEffects();break}return a==="battle1"?new Ku(this.duel,a):new Wn(this.duel)}if(r==="done"){await this.procFreeChain();continue}}}})}get nextPhaseList(){return this.duel.phase==="main1"&&this.duel.clock.turn>1?["battle1","end"]:["end"]}get attackingMonster(){}get targetForAttack(){}}class Yu extends pi{constructor(i){super(i,"standby");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>(await this.procSpellSpeed1(),new Vn(this.duel,"main1")))}get nextPhaseList(){return["main1"]}get attackingMonster(){}get targetForAttack(){}}class Ju extends pi{constructor(i){super(i,"draw");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{if(Object.values(this.duel.duelists).forEach(i=>i.initForDrawPhase()),this.turnPlayer.writeInfoLog("ドローフェイズ開始。"),this.duel.clock.turn===1)this.turnPlayer.writeInfoLog("先攻プレイヤーはドローできない。");else{await this.turnPlayer.draw(1,void 0,void 0);for(const i of this.turnPlayer.getEnableActions(["Exodia"],["Normal"],[]))await i.action.directExecute(this.turnPlayer,void 0,!1)}return this.duel.field.getCardsOnFieldStrictly().forEach(i=>i.initForTurn()),await this.procSpellSpeed1(),new Yu(this.duel)})}get nextPhaseList(){return["standby"]}get attackingMonster(){}get targetForAttack(){}}class Wn extends pi{constructor(i){super(i,"end");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{for(await this.procSpellSpeed1();;){const a=this.turnPlayer.getHandCell().cardEntities.length;if(a<7)break;await this.turnPlayer.discard(a-6,"Rule")}return this.turnPlayer.writeInfoLog("ターン終了。"),new Ju(this.duel)})}get nextPhaseList(){return["draw"]}get attackingMonster(){}get targetForAttack(){}}const Iu=["PlayFirst","DrawFirst","Random"],jp={PlayFirst:"先攻",DrawFirst:"後攻",Random:"ランダム"};class re extends Error{constructor(i,a){super(i?`デュエルが終了した。勝者：${i.profile.name}`:"デュエルが終了した。ドロー。");o(this,"winner");o(this,"message");this.winner=i,this.message=a}}class _ extends Error{constructor(i,...a){super(i);o(this,"message");o(this,"items");this.message=i,this.items=a}}class O extends _{constructor(...t){super("キャンセル不可のアクションがキャンセルされた。",...t)}}class zp{constructor(t,i,a,r=[],n,s,l,u=[],c="Random"){o(this,"onDuelEndEvent",new V);o(this,"view");o(this,"log");o(this,"chainBlockLog");o(this,"field");o(this,"clock");o(this,"duelists");o(this,"_facilitator");o(this,"isEnded");o(this,"winner");o(this,"reasonOfEnd","");o(this,"coin",!1);o(this,"startMode");o(this,"declareAttack",(...t)=>this._facilitator.declareAttack(...t));o(this,"getTurnPlayer",()=>this.clock.turn%2===0?this.secondPlayer:this.firstPlayer);o(this,"getNonTurnPlayer",()=>this.clock.turn%2===0?this.firstPlayer:this.secondPlayer);o(this,"main",async()=>{console.info("main start!"),this.coin=this.startMode==="PlayFirst"?!0:this.startMode==="DrawFirst"?!1:Math.random()>.5;const t=sp(...Object.values(this.duelists).flatMap(i=>i.deckInfo.cardNames).getDistinct()).reduce((i,a)=>(i[a.name]=a,{...i}),{});for(const i of Object.values(this.duelists))i.pushDeck(t),i.getDeckCell().shuffle(),i.initHand.length&&i.initHand.forEach(a=>{const r=i.getDeckCell().cardEntities.find(n=>n.origin.name===a);if(!r){this.log.info(`初手操作により${a}を手札に加えようとしたが、デッキに存在しない。`);return}r.addToHand(["System"],void 0,void 0),this.log.info(`初手操作により${r.toString()}を手札に加えた`,i)}),await i.draw(5-i.getHandCell().cardEntities.length,void 0,void 0);this.log.info(`【デュエル開始】${this.firstPlayer.profile.name} V.S. ${this.secondPlayer.profile.name}`),this.log.info(`先攻：${this.firstPlayer.profile.name} 後攻：${this.secondPlayer.profile.name}`);try{for(const i of Object.values(this.duelists))for(const a of i.getEnableActions(["Exodia"],["Normal"],[]))await a.action.directExecute(i,void 0,!1);for(;!this.isEnded&&(this._facilitator=await this._facilitator.proceed(),!(this.clock.turn>1e3)););}catch(i){i instanceof re?(this.chainBlockLog.records.forEach(a=>{a.chainBlockInfo.state==="ready"?a.chainBlockInfo.state="failed":a.chainBlockInfo.state==="processing"&&(a.chainBlockInfo.state="done")}),this.clock.incrementChainSeq(),console.info(i),this.isEnded=!0,this.winner=i.winner,this.reasonOfEnd=i.message,this.log.info(i.winner?`デュエル終了。勝者${i.winner.profile.name}。${i.message}`:`デュエル終了。引き分け。${i.message}`),this.view.requireUpdate(),this.onDuelEndEvent.trigger()):i instanceof Error&&this.log.error(i)}finally{this.log.dispose()}});o(this,"executeSystemPeriodActions",()=>{Object.values(this.duelists).forEach(t=>t.getEnableActions(["SystemPeriodAction"],["Normal"],[]))});this.clock=new Za,this.isEnded=!1,this.startMode=c,this.duelists={Below:new $i(this,"Below",t,i,a,r),Above:new $i(this,"Above",n,s,l,u)},this.field=new tu(this),this.clock.onStageChange.append(this.executeSystemPeriodActions),this.view=new Qu(this),this.log=new au(this),this.chainBlockLog=new Xu(this),this._facilitator=new Wn(this)}get onDuelEnd(){return this.onDuelEndEvent.expose()}get phase(){return this.clock.period.phase}get step(){return this.clock.period.step}get stage(){return this.clock.period.stage}get nextPhaseList(){return this.facilitator.nextPhaseList}get chainBlockInfos(){return this.facilitator.chainBlockInfos}get attackingMonster(){return this.facilitator.attackingMonster}get targetForAttack(){return this.facilitator.targetForAttack}get firstPlayer(){return this.coin?this.duelists.Below:this.duelists.Above}get secondPlayer(){return this.coin?this.duelists.Above:this.duelists.Below}get facilitator(){return this._facilitator}}const Ce=class Ce{constructor(t){o(this,"id");o(this,"name");o(this,"description");o(this,"chainConfig");o(this,"previousGameMode");o(this,"previousNpcId");o(this,"previousNpcDeckId");o(this,"previousStartMode");o(this,"npcLvl",Number.MAX_VALUE);o(this,"npcType","None");o(this,"save",async t=>{const i={id:this.id,name:this.name,description:this.description,chainConfig:this.chainConfig??{noticeSelfChain:!1,noticeFreeChainPhase:!1,noticeFreeChainStep:!1,noticeAfterChainInMainPhase:!1},previousGameMode:this.previousGameMode??"Preset",previousNpcId:this.previousNpcId??Number.MIN_SAFE_INTEGER,previousStartMode:this.previousStartMode,previousNpcDeckId:this.previousNpcDeckId>-1?this.previousNpcDeckId:Number.MIN_SAFE_INTEGER,...t},a=await Ce.tblHeader.update(this.id,r=>({...r,...i}));return console.log(this.previousNpcDeckId,Number.MIN_SAFE_INTEGER,i,a),new Ce(a)});var i;this.id=t.id,this.name=t.name,this.description=t.description,this.chainConfig=t.chainConfig,this.previousGameMode=t.previousGameMode,this.previousNpcId=((i=qr.find(a=>a.id===t.previousNpcId))==null?void 0:i.id)??Zi(...qr.map(a=>a.id)),this.previousStartMode=Iu.includes(t.previousStartMode)?t.previousStartMode:"Random",this.previousNpcDeckId=t.previousNpcDeckId}};o(Ce,"tblHeader"),o(Ce,"getOrCreateNew",async t=>{Ce.tblHeader||(Ce.tblHeader=new ed(t));const i=await Ce.tblHeader.getAll();if(i.length){let r=i[0];return r.chainConfig||(r={...r,chainConfig:{noticeSelfChain:!1,noticeFreeChain:!1}}),new Ce(r)}const a=await Ce.tblHeader.insert({name:"あなた",description:"ここの文字列を何に使うかは未定。",chainConfig:{noticeSelfChain:!1,noticeFreeChain:!1},previousGameMode:"Preset",previousNpcId:0,previousNpcDeckId:Number.MIN_SAFE_INTEGER,previousStartMode:"Random"});return new Ce(a)});let Lr=Ce;class ed extends ar{constructor(i){super(i,"TblDuelistProfile");o(this,"_prepareInitialRecords",()=>[])}}let Ca=-1;const qr=[{id:Ca--,name:"サンドバッグくん棒立ち",description:"攻撃宣言なし、強制効果以外の効果の発動なし。",npcLvl:0,npcType:"Normal"},{id:Ca--,name:"サンドバッグくん非暴力",description:"攻撃宣言なし。",npcLvl:100,npcType:"Normal"},{id:Ca--,name:"サンドバッグくん白帯",description:"とくに制限なし。",npcLvl:200,npcType:"Normal"},{id:Number.MIN_SAFE_INTEGER,name:"FTK or Die",description:"FTKに失敗すると敗北。",npcLvl:Number.MIN_SAFE_INTEGER,npcType:"FtkChallenge"}],td=(e,t)=>Array.from({length:t-e},(i,a)=>e+a);Array.prototype.shuffle=function(){return this.map(t=>({item:t,seq:Math.random()})).toSorted((t,i)=>t.seq-i.seq).map(t=>t.item)};Array.prototype.randomPickMany=function(e){return this.shuffle().slice(0,e)};Array.prototype.randomPick=function(){return this.shuffle().slice(0,1)[0]};Array.prototype.reset=function(...e){this.splice(0),this.push(...e)};Array.prototype.union=function(e){return this.filter(t=>e.find(i=>t===i))};Array.prototype.getAllOnOffPattern=function*(){const e=[[]];yield[];for(const t of this){const i=e.map(a=>[...a,t]);yield*i,e.push(...i)}};Array.prototype.getDistinct=function(){return Array.from(new Set(this))};Array.prototype.distinct=function(){this.reset(...this.getDistinct())};const Vp=["noticeSelfChain","noticeFreeChain"],Wp={noticeSelfChain:"セルフチェーン",noticeFreeChain:"フリーチェーン"},je=class je{constructor(t,i,a,r,n,s=[]){o(this,"duel");o(this,"seat");o(this,"profile");o(this,"deckInfo");o(this,"info");o(this,"infoOrigin");o(this,"status");o(this,"statusOrigin");o(this,"duelistType");o(this,"lifeLog");o(this,"actionBlackListForNPC");o(this,"_lp");o(this,"initHand");o(this,"chainConfig");o(this,"writeInfoLog",t=>this.duel.log.info(t,this));o(this,"writeChainBlockHeaderLog",(t,i)=>this.duel.log.pushChainBlockHeaderLog(this,t,i));o(this,"initForDrawPhase",()=>{this.info={...this.infoOrigin}});o(this,"canDiscard",t=>(this.status.canDiscardAsCost&&console.log(t),!0));o(this,"canSendToGraveyard",t=>(console.log(t),!0));o(this,"canRelease",t=>(console.log(t),!0));o(this,"canTryBanish",(t,i,a)=>this.entity.procFilterBundle.filter([i],this,this.entity,a,[t]));o(this,"battleDamage",(t,i,a,r)=>{const n=Xc(t,r.activator,this,i,a,r.action);return this.damage(i,n)});o(this,"effectDamage",(t,i)=>je.effectDamage([{to:this,point:t}],i));o(this,"_effectDamage",(t,i)=>this.damage(i.action.entity,Qc(t,i,this)));o(this,"damage",(t,i)=>{const a=[];if(i.point){const r=i.damageType==="Heal"?i.point:i.point*-1;a.push(this.setLp(this._lp+r,t,i.damageType))}return i.damageToOpponent1&&a.push(this.getOpponentPlayer().setLp(this._lp-i.damageToOpponent1,t,i.damageType)),i.damageToOpponent2&&a.push(this.getOpponentPlayer().setLp(this._lp-i.damageToOpponent2,t,i.damageType)),a});o(this,"lostLp",(t,i)=>this.setLp(this._lp-t,i,"Lost"));o(this,"payLp",(t,i)=>{const a=this.setLp(this._lp-t,i,"Pay");if(this.lp<=0)throw new re(this.getOpponentPlayer(),`${i.toString()}へのライフポイント支払いにより、${this.name}のライフポイントが0になった。`);return a});o(this,"heal",(t,i)=>this.setLp(this._lp+t,i,"Heal"));o(this,"setLp",(t,i,a)=>{const r={duelist:this,clock:this.duel.clock.getClone(),reason:a||"Set",beforeLp:this._lp,afterLp:t,entity:i};return this.lifeLog.push(r),this._lp=t,this.writeInfoLog(`ライフポイント変動：${r.afterLp-r.beforeLp}（${r.beforeLp} ⇒ ${r.afterLp}）`),r});o(this,"getOpponentPlayer",()=>this.duel.firstPlayer===this?this.duel.secondPlayer:this.duel.firstPlayer);o(this,"getCells",(...t)=>this.duel.field.getCells(...t).filter(i=>{var a;return i.owner===this||((a=i.cardEntities[0])==null?void 0:a.controller)===this}));o(this,"getHandCell",()=>this.getCells("Hand")[0]);o(this,"getDeckCell",()=>this.getCells("Deck")[0]);o(this,"getExtraDeck",()=>this.getCells("ExtraDeck")[0]);o(this,"getGraveyard",()=>this.getCells("Graveyard")[0]);o(this,"getFieldZone",()=>this.getCells("FieldSpellZone")[0]);o(this,"getBanished",()=>this.getCells("Banished")[0]);o(this,"getMonsterZones",()=>this.getCells("MonsterZone"));o(this,"getExtraMonsterZones",()=>this.getCells("ExtraMonsterZone"));o(this,"getSpellTrapZones",()=>this.getCells("SpellAndTrapZone"));o(this,"getXyzMaterialZone",()=>this.getCells("XyzMaterialZone")[0]);o(this,"getEmptyMonsterZones",()=>this.getMonsterZones().filter(t=>t.cardEntities.length===0));o(this,"getAvailableMonsterZones",()=>this.getMonsterZones().filter(t=>t.isAvailable));o(this,"getAvailableExtraMonsterZones",()=>this.getExtraMonsterZones().length===0?this.duel.field.getCells("ExtraMonsterZone").filter(t=>t.isAvailable):[]);o(this,"getAvailableSpellTrapZones",()=>this.getSpellTrapZones().filter(t=>t.isAvailable));o(this,"getMonstersOnField",()=>this.duel.field.getMonstersOnFieldStrictly().filter(t=>t.controller===this));o(this,"getSpellTrapsOnField",()=>this.duel.field.getSpellTrapsOnFieldStrictly().filter(t=>t.controller===this));o(this,"getPendingMonstersOnField",()=>this.duel.field.getPendingMonstersOnField().filter(t=>t.controller===this));o(this,"getPendulumScaleMonsters",()=>this.duel.field.getCardsOnFieldStrictly().filter(t=>t.isPendulumScale).filter(t=>t.controller===this));o(this,"getPendulumScales",()=>{const t=this.getPendulumScaleMonsters();if(t.length<2)return;const i=t.find(s=>s.cell.column===(this.seat==="Below"?1:5)),a=t.find(s=>s.cell.column===(this.seat==="Below"?5:1));if(!i||!a)throw new _("想定されない状態",t);const r=i.psR,n=a.psL;if(r===void 0||n===void 0)throw new _("想定されない状態",t);return r>n?{upperBound:r,lowerBound:n}:{upperBound:n,lowerBound:r}});o(this,"getEntiteisOnField",()=>this.duel.field.getCardsOnFieldStrictly().filter(t=>t.controller===this));o(this,"pushDeck",t=>{this.deckInfo.cardNames.map(i=>t[i]).filter(i=>i).forEach(i=>R.createCardEntity(this,i)),this.duel.log.info(`デッキをセット。メイン${this.getDeckCell().cardEntities.length}枚。エクストラ${this.getExtraDeck().cardEntities.length}枚。`,this)});o(this,"draw",async(t,i,a)=>{var s;if(t<1)return;const r=this.getDeckCell(),n=[];this.writeInfoLog(`デッキからカードを${t}枚ドロー。`);for(const l of Array(t)){if(!r.cardEntities.length)throw this.writeInfoLog(n.length>0?`デッキからカードを${t}枚ドローしようとしたが、${n.length}枚しかドローできなかった。${n}`:"デッキからカードをドローできなかった。"),new re(this.getOpponentPlayer(),`${this.name}がデッキからカードをドローできなかった。`);const u=r.cardEntities[0];await u.draw(i?["Effect"]:["Rule"],i,a),n.push(((s=u.origin)==null?void 0:s.name)||"!名称取得失敗!")}});o(this,"summon",async(t,i,a,r,n,s,l,u)=>(await this.summonMany(this,t,i,a,[{monster:r,posList:n,cells:s}],l,!1,1,d=>d.length===1,u)??[])[0]);o(this,"waitSelectNumberFromRange",(t,i,a,r)=>this.waitSelectNumber(t,td(i,a),r));o(this,"waitSelectNumber",(t,i,a)=>this.duel.view.waitSelectNumber(this,t,i,a));o(this,"waitSelectEntities",(t,i,a,r,n=!1)=>this.duel.view.waitSelectEntities(this,{selectables:t,qty:i,validator:a,cancelable:n},r));o(this,"waitSelectEntity",async(t,i,a=!1)=>{const r=await this.waitSelectEntities(t,1,n=>n.length===1,i,a);return r?r[0]:void 0});o(this,"waitYesNo",t=>this.duel.view.waitYesOrNo(this,t));o(this,"waitSelectText",(t,i,a=!1)=>this.duel.view.waitSelectText(this,t,i,a));o(this,"getEnableActions",(t,i,a)=>{var n;const r=((n=a.slice(-1)[0])==null?void 0:n.nextChainBlockFilter)??(()=>!0);return[...this.duel.field.getAllCardEntities(),this.entity].flatMap(s=>s.actions).filter(s=>s.canExecute(this)).filter(s=>i.includes(s.spellSpeed)).filter(s=>t.includes(s.playType)).filter(s=>r(this,s)).map(s=>s.validate(this,a)).filter(s=>s!==void 0)});o(this,"discard",async(t,i,a=()=>!0,r,n,s,l=!1)=>{const u=this.getHandCell().cardEntities.filter(a);if(u.length<t)return[];let c=[];if(u.length===t)c=u;else if((s||this).duelistType==="NPC")c=u.randomPickMany(t);else{const d=await this.duel.view.waitSelectEntities(s||this,{selectables:u,qty:t,validator:f=>f.length===t,cancelable:l},`${t}枚カードを捨てる。`);if(!d)return;c=d}return this.writeInfoLog(`手札からカードを${c.length}枚捨てた。${c.map(d=>d.toString())}。`),await S.discardManyForTheSameReason(c,["Discard",i],r,n),c});o(this,"getEnableSummonList",(t,i,a,r,n,s,l)=>{const u=this.duel.field.getCells("ExtraMonsterZone"),c=u.filter(f=>!s.map(p=>p.material).includes(f.cardEntities[0])).filter(f=>f.owner===this),d=[];return c.length&&d.push(...u.filter(f=>!c.includes(f)).filter(f=>f.isAvailable)),n.map(f=>({...f,summoner:this})).map(f=>{var p;return(i!=="LinkSummon"||!this.duel.field.canExtraLink(f.monster,s))&&(f.cells=f.cells.filter(h=>!d.includes(h))),(p=f.monster.status.monsterCategories)!=null&&p.includes("Link")&&(f.posList=f.posList.filter(h=>h==="Attack")),f}).map(f=>({...f,cells:f.cells.filter(p=>p.cardEntities.length===0||s.some(h=>h.material===p.cardEntities[0]))})).map(f=>{var p,h;if(f.monster.cell.cellType==="ExtraDeck"){if((p=f.monster.status.monsterCategories)!=null&&p.includes("Link")||(h=f.monster.status.monsterCategories)!=null&&h.includes("Pendulum"))return{...f,cells:f.cells.filter(y=>y.cellType==="ExtraMonsterZone"||y.linkArrowSources.filter(v=>!s.map(g=>g.material).includes(v)).length)}}else return{...f,cells:f.cells.filter(y=>y.cellType!=="ExtraMonsterZone")};return f}).filter(f=>f.cells.length&&f.posList.length).map(f=>this.entity.summonFilterBundle.filter(t,i,a,r,f,s,l)).filter(f=>f.cells.length&&f.posList.length).map(f=>f.monster.summonFilterBundle.filter(t,i,a,r,f,s,l)).filter(f=>f.cells.length&&f.posList.length).map(f=>s.map(p=>p.material.summonFilterBundle).reduce((p,h)=>h.filter(t,i,a,r,p,s,l),f)).filter(f=>f.cells.length&&f.posList.length)});o(this,"prepareToSummonMany",async(t,i,a,r,n,s,l,u,c,d,f="特殊召喚するモンスターを選択。")=>{const p=this.getEnableSummonList(t,i,a,r,n,s,l);if(!p.length)return[];let h=p.map(v=>({...v,cells:[...v.cells],posList:[...v.posList]}));const y=[];for(;h.length&&y.length<(u??Number.MAX_SAFE_INTEGER);){const v=d&&!y.length||c(y.map(w=>w.monster));let g=h.randomPick();if(h.length>1){const w=await this.waitSelectEntity(h.map(A=>A.monster),f,v);if(!w)return y;g=h.find(A=>A.monster===w)??g}let m=[...g.posList].randomPick(),T=[...g.cells].randomPick();if((g.cells.length||g.posList.length)&&this.duelistType!=="NPC"){const w=await this.duel.view.waitSelectSummonDestination(g.summoner,g.monster,g.cells,g.posList,v);if(!w)return y;T=w.dest,m=w.battlePosition}y.push({summoner:this,monster:g.monster,pos:m,dest:T});const D=T.cellType==="ExtraMonsterZone";h.forEach(w=>{w.cells=w.cells.filter(A=>!y.map(J=>J.dest).includes(A)),D&&(w.cells=w.cells.filter(A=>A.cellType!=="ExtraMonsterZone"))}),h=h.filter(w=>w!==g).filter(w=>w.cells.length)}return y});o(this,"summonAll",(t,i,a,r,n,s,l,u,c)=>this.summonMany(t,i,a,r,n,s,l,n.length,d=>d.length===n.length,u,c));o(this,"summonOne",async(t,i,a,r,n,s,l,u,c)=>{const d=await this.summonMany(t,i,a,r,n,s,l,1,f=>f.length===1,u,c);if(d)return d[0]});o(this,"summonMany",(t,i,a,r,n,s,l,u,c,d,f)=>je.summonMany(t,i,a,r,n.map(p=>({...p,summoner:this})),s,l,u,c,d,f));o(this,"summonEachFields",(t,i,a,r,n,s,l,u,c,d)=>je._summonMany(t,i,a,r,[{duelist:this,msg:"自分"},{duelist:this.getOpponentPlayer(),msg:"相手"}].map(f=>({summoner:this,msg:`${f.msg}フィールドに特殊召喚するモンスターを選択。`,summonChoices:n.map(p=>({...p,cells:p.cells.filter(h=>h.owner===f.duelist)}))})),s,l,u,c,d));o(this,"selectAttackTargetForNPC",(t,i)=>{const a=t.atk??0,r=t.getAttackTargets();if(!r.length)return;const n=r.find(s=>s.entityType==="Duelist");return n&&(a>=Zi(1600,this.getOpponentPlayer().lp)||t.info.battlePotisionChangeCount>0)?n:r.find(s=>s.battlePosition==="Attack"?a>=(s.atk??0):a<(s.battlePosition==="Set"?1e3:s.def??0)?!1:s.validateDestroy("Battle",this,t,i))});o(this,"selectActionForNPC",(t,i)=>{if(!t.length)return;const a=t.filter(g=>g.action.isMandatory);if(a.length)return a.randomPick();let r=t.filter(g=>!this.actionBlackListForNPC.includes(g.action.playType));const n=r.filter(g=>!Number.isNaN(g.action.priorityForNPC)).shuffle().sort((g,m)=>g.action.priorityForNPC-m.action.priorityForNPC);if(n.length)return n[0];const s=r.filter(g=>g.action.playType==="TriggerEffect");if(s.length)return s.randomPick();if(this.duel.phase!=="main1"&&this.duel.phase!=="main2"){const g=r.filter(m=>m.action.playType==="IgnitionEffect");if(g.length)return g.randomPick()}const l=r.filter(g=>g.action.playType==="DeclareAttack").sort((g,m)=>(g.action.entity.atk??0)-(m.action.entity.atk??0));if(l.length)return l.find(g=>this.selectAttackTargetForNPC(g.action.entity,g.action));r=r.filter(g=>g.action.playType!=="DeclareAttack");const u=r.length?i.slice(-1)[0]:void 0,c=r.filter(g=>g.action.negatePreviousBlock);if(u&&u.activator!==this&&c.length)return c.randomPick();if(r=r.filter(g=>!g.action.negatePreviousBlock),!r.length)return;const d=Hi(...this.getOpponentPlayer().getMonstersOnField().filter(g=>g.battlePosition==="Attack").map(g=>g.atk??0),1600),f=Zi(...this.getOpponentPlayer().getMonstersOnField().map(g=>g.battlePosition==="Set"?1500:(g.battlePosition==="Attack"?g.atk:g.def)??0),1500),p=this.getMonstersOnField(),h=Hi(...p.filter(g=>g.battlePosition==="Attack").map(g=>g.atk??0),0);let y=r.filter(g=>g.action.playType!=="ChangeBattlePosition").filter(g=>g.action.entity.battlePosition!=="Attack").filter(g=>(g.action.entity.atk??0)>=d||(g.action.entity.atk??0)>f&&(g.action.entity.atk??0)>2300);if(y.length)return y.randomPick();r=r.filter(g=>g.action.playType!=="ChangeBattlePosition").filter(g=>g.action.playType!=="SpellTrapSet").filter(g=>g.action.entity.actions.filter(m=>m.playType!=="NormalSummon"&&m.playType!=="SpecialSummon").flatMap(m=>m.executableCells).every(m=>m!=="Hand")||g.action.playType!=="NormalSummon"&&g.action.playType!=="SpecialSummon");const v=[...r.filter(g=>g.action.playType==="NormalSummon").filter(g=>(g.action.entity.lvl??12)<5),...r.filter(g=>g.action.playType==="SpecialSummon"),...r.filter(g=>g.action.playType==="NormalSummon").filter(g=>(g.action.entity.atk??0)>2600||(g.action.entity.atk??0)>2300&&(g.action.entity.lvl??12)<7).filter(g=>(g.action.entity.atk??0)>=h),...r.filter(g=>g.action.entity.face==="FaceUp").filter(g=>g.action.entity.isOnFieldStrictly)];if(v.length)return v.randomPick();if(r=r.filter(g=>g.action.playType!=="NormalSummon").filter(g=>g.action.playType!=="SpecialSummon"),this.duel.phase==="main2"){if(y=t.filter(g=>g.action.playType==="ChangeBattlePosition").filter(g=>g.action.entity.battlePosition==="Attack").filter(g=>(g.action.entity.atk??0)<d||(g.action.entity.atk??0)>f&&(g.action.entity.atk??0)>2300),y.length)return y.randomPick();if(this.getAvailableSpellTrapZones().length>1)return t.filter(g=>g.action.playType==="SpellTrapSet").filter(g=>g.action.entity.kind!=="Spell"||g.action.entity.status.spellCategory==="QuickPlay").randomPick()}if(console.log(r),Math.random()<r.length/4)return r.randomPick()});this.duel=t,this.seat=i,this.profile=a,this.chainConfig=a.chainConfig??{noticeSelfChain:!0,noticeFreeChain:!0},this.duelistType=r,this.deckInfo=n,this.initHand=s,this.lifeLog=[],this.infoOrigin={maxRuleNormalSummonCount:1,ruleNormalSummonCount:0,ruleNormalSummonCountQty:0,effectNormalSummonCount:0,effectNormalSummonCountQty:0,specialSummonCount:0,specialSummonCountQty:0},this.info={...this.infoOrigin},this.statusOrigin={maxSpecialSummonCount:Number.MAX_VALUE,canDrawByEffect:!0,canSearchFromDeck:!0,canDiscardAsCost:!0,canDiscardAsEffect:!0},this.status={...this.statusOrigin},this._lp=8e3;const l=[];this.duelistType==="NPC"&&(this.profile.npcLvl<0&&l.push("NormalSummon","SpecialSummon","SpellTrapSet"),this.profile.npcLvl<1&&l.push("CardActivation","IgnitionEffect","TriggerEffect","QuickEffect"),this.profile.npcLvl<101&&l.push("DeclareAttack")),this.actionBlackListForNPC=l}get entity(){const t=this.getHandCell().entities.find(i=>i.entityType==="Duelist");return t||R.createPlayerEntity(this)}get name(){return this.profile.name}get lp(){return this._lp}get isTurnPlayer(){return this.duel.getTurnPlayer()===this}get canDraw(){return!0}get canAddToHandFromDeck(){return!0}get canAddToHandFromGraveyard(){return!0}get canSet(){return!0}};o(je,"summonMany",async(t,i,a,r,n,s,l,u,c,d,f="特殊召喚するモンスターを選択。")=>je._summonMany(t,i,a,r,n.map(p=>p.summoner).getDistinct().map(p=>({summoner:p,summonChoices:n.filter(h=>h.summoner===p)})),s,l,u,c,d,f)),o(je,"_summonMany",async(t,i,a,r,n,s,l,u,c,d,f="特殊召喚するモンスターを選択。")=>{const p=[];for(const h of n){const y={...h};y.summonChoices=y.summonChoices.filter(g=>!p.map(m=>m.monster).includes(g.monster));const v=await y.summoner.prepareToSummonMany(t,i,a,r,y.summonChoices.map(g=>({...g,summoner:y.summoner})),s,l,u,c,d,y.msg??f);p.push(...v)}if(p.length)return p.forEach(h=>h.monster.info.materials.reset(...s)),await S.moveToXyzOwner(p[0].dest,p[0].monster,s.map(h=>h.material).filter(h=>h.kind==="XyzMaterial"),["XyzMaterial","Rule"],p[0].monster,t),await R.summonMany(p,i,a,r.entity,t),p.map(h=>h.monster)}),o(je,"effectDamage",(t,i)=>{if(!t.length)return[];const a=t.flatMap(n=>n.to._effectDamage(n.point,i)),r=Object.values(t[0].to.duel.duelists).filter(n=>n.lp>0);if(r.length===1)throw new re(r[0],`${i.action.toFullString()}により、${r[0].getOpponentPlayer().name}のライフポイントが0になった。`);if(!r.length)throw new re(void 0,`${i.action.toFullString()}により、お互いのライフポイントが0になった。`);return a});let $i=je;const Gt=["Controller","Opponent"],id=["IfNormarlSummonSucceed","IfAdvanceSummonSucceed","IfSpecialSummonSucceed","IfFusionSummonSucceed","IfRitualSummonSucceed","IfSynchroSummonSucceed","IfXyzSummonSucceed","IfPendulumSummonSucceed","IfLinkSummonSucceed","IfFlipSummonSucceed","IfFlip"],ad=[...id,"IfDestroyed","IfDoneByBattle","IfDoneByEffect"],Rr=["NormalSummon","AdvanceSummon","SpecialSummon","SpecialSummonFromDeck","SendToGraveyardFromDeck","Draw","SearchFromDeck","BanishFromDeck","BanishFromGraveyard","AddToHandFromGraveyard","ReturnToDeckFromGraveyard","SpecialSummonFromGraveyard","SpecialSummonFromBanished","ReturnToHandFromGraveyard","ReturnToHandFromField","BanishFromField","BanishFromHand","Destroy","DestroyMultiple","DestroyOnField","DestroyMultipleOnField","DestroyOnOpponentField","DestroyMultipleOnOpponentField","DestroyMonsterOnField","DestroyMonstersOnField","DestroySpellTrapOnField","DestroySpellTrapsOnField","SpecialSummonFromHand","SpecialSummonFromExtraDeck","SpecialSummonToken","DamageToOpponent","DamageToSelf","PayLifePoint","DiscordAsCost","DiscordAsEffect","RollDice","BounceToHand","NegateCardEffect","NegateCardActivation","NegateNormalSummon","NegateSpecialSummon",...ad],Ui=["discard","banish","release","returnToDeck","returnToHand","sendToGraveyard"],rd=e=>e.triggerType==="Arrival",nd=e=>e.triggerType==="Departure",Ae=class Ae extends ai{constructor(i,a,r,n){super(i,a,r);o(this,"getTargetableEntities",(i,a)=>{if(this.definition.hasToTargetCards&&!this.definition.getTargetableEntities)throw new _(`処理定義が矛盾している。${this.toFullString()}`,this);return this.definition.getTargetableEntities?this.definition.getTargetableEntities(i,a):[]});o(this,"toString",()=>this.playType==="CardActivation"?"カードの発動":this.isWithChainBlock?`«${this.title}»`:this.title);o(this,"toFullString",()=>`${this.entity.toString()}の${this.toString()}`);o(this,"addhocMaterialLimitation");o(this,"getClone",i=>new Ae(this.seq,this.entity,this.definition,i));o(this,"validate",(i,a,r=[],n)=>{const s=r.includes("IgnoreRegularCosts"),l=r.includes("IgnoreConditions"),u=r.includes("CopyEffectOnly");if(this.isWithChainBlock&&!this.entity.status.canActivateEffect||s&&this.needsToPayRegularCosts||!this.validateCount(i,a,n))return;const c=Hi(0,...a.map(p=>p.chainNumber??-1)),d={index:a.length,chainNumber:this.isWithChainBlock?c+1:void 0,action:this,activator:i,targetChainBlock:a.slice(-1)[0],state:"unloaded",dest:void 0,ignoreCosts:!1};if(this.definition.canPayCosts&&!s&&!this.definition.canPayCosts(d,this.playType==="AfterChainBlock"?[]:a))return;if(this.definition.triggerPattern){if(rd(this.definition.triggerPattern)){if(!Ae.validateArrivalTrigger(this.entity,this.definition.triggerPattern))return}else if(nd(this.definition.triggerPattern)&&!Ae.validateDepartureTrigger(this.entity,this.definition.triggerPattern))return}if(this.definition.meetsConditions&&!l&&!this.definition.meetsConditions(d,this.playType==="AfterChainBlock"?[]:a))return;if(this.definition.canExecute){const p=this.definition.canExecute(d,this.playType==="AfterChainBlock"?[]:a,n);if(p==="RemoveMe"){this.entity.actions.reset(...this.entity.actions.filter(h=>h.seq!==this.seq));return}if(!p)return}const f=[];if(this.definition.getDests&&f.push(...this.definition.getDests(d,this.playType==="AfterChainBlock"?[]:a)),this.playType==="CardActivation"&&!u){const p=this.getDestForCardActivation(i);if(!p)return;f.push(...p)}else this.playType==="SpellTrapSet"&&(this.entity.status.spellCategory==="Field"?f.push(i.getFieldZone()):f.push(...i.getAvailableSpellTrapZones()));return{action:this,dests:f,originSeq:this.seq}});o(this,"validateCount",(i,a,r)=>{if(r)return!0;const n=a.filter(l=>this.isSameGroup(l.action)).length;if(this.isOnlyNTimesPerDuel>0&&this.entity.field.duel.chainBlockLog.records.filter(l=>!l.chainBlockInfo.isNegatedActivationBy).filter(l=>this.isSameGroup(l.chainBlockInfo.action)).filter(l=>l.chainBlockInfo.activator===i).length+n>=this.isOnlyNTimesPerDuel||this.isOnlyNTimesPerTurn>0&&this.entity.field.duel.chainBlockLog.records.filter(l=>!l.chainBlockInfo.isNegatedActivationBy).filter(l=>this.isSameGroup(l.chainBlockInfo.action)).filter(l=>l.clock.turn===this.entity.field.duel.clock.turn).filter(l=>l.chainBlockInfo.activator===i).length+n>=this.isOnlyNTimesPerTurn||this.isOnlyNTimesPerChain>0&&n>=this.isOnlyNTimesPerChain)return!1;const s=n+this.entity.counterHolder.getActionCount(this);return!(this.isOnlyNTimesPerTurnIfFaceup>0&&s>=this.isOnlyNTimesPerTurnIfFaceup||this.isOnlyNTimesIfFaceup>0&&s>=this.isOnlyNTimesIfFaceup)});o(this,"getDestForCardActivation",i=>{var r;if(this.entity.info.isPending||this.entity.info.isDying||this.entity.info.isSettingSickness)return;if(this.entity.isOnFieldAsSpellTrapStrictly)return this.entity.face==="FaceDown"?[]:void 0;if(this.entity.cell.cellType!=="Hand"||this.definition.canActivateCardDirectly||!i.isTurnPlayer)return;if(this.entity.status.spellCategory==="Field")return[i.getFieldZone()];let a=i.getAvailableSpellTrapZones();return(r=this.entity.status.monsterCategories)!=null&&r.includes("Pendulum")&&(a=a.filter(n=>n.isAvailableForPendulum)),a});o(this,"prepare",async(i,a,r,n,s,l)=>{var w,A;var J=[];try{let u=a;let c=s;const d=this.isWithChainBlock?Hi(0,...n.map(b=>b.chainNumber??-1))+1:void 0;let f="";const p=[];if(this.playType==="CardActivation"||this.playType==="SpellTrapSet")if(this.entity.cell.cellType==="Hand"){let b=this.entity.status.spellCategory==="Field"?[i.getFieldZone()]:i.getAvailableSpellTrapZones();if((w=this.entity.status.monsterCategories)!=null&&w.includes("Pendulum")&&(b=b.filter(I=>I.isAvailableForPendulum)),u&&b.includes(u)&&(b=[u],u=void 0),this.entity.status.spellCategory==="Field"){const I=i.getFieldZone().cardEntities;if(I.length){const he=I[0];p.push(async()=>{await he.sendToGraveyard(["Rule"],this.entity,i),i.writeInfoLog(`フィールド魔法の上書きにより、${he.toString()}は墓地に送られた。`)}),c=!1}}let ie=b[0];if(b.length>1){ie=b.randomPick();const I=this.playType==="SpellTrapSet"?"セット":"カードの発動",he=await this.duel.view.waitSelectDestination(i,this.entity,b,"カードを移動先へドラッグ",I,c);if(!he)return;ie=he}f+="手札から",this.playType==="SpellTrapSet"?f+="魔法・罠カードをセット。":f+=`${this.entity.toString()}を発動。`,c=!1,this.playType==="CardActivation"&&(this.entity.info.isPending=!0),(A=this.entity.status.monsterCategories)!=null&&A.includes("Pendulum")?p.push(()=>this.entity.activateAsPendulumScale(ie,["CardActivation"],this.entity,i)):this.playType==="CardActivation"?p.push(()=>this.entity.activateSpellTrapFromHand(ie,this.entity.kind,["CardActivation"],this.entity,i)):p.push(()=>this.entity.setAsSpellTrap(ie,this.entity.kind,["SpellTrapSet"],this.entity,i))}else this.entity.isOnField&&this.entity.face==="FaceDown"?(f+=`セットされていた${this.entity.toString()}を発動。`,c=!1,this.playType==="CardActivation"&&(this.entity.info.isPending=!0),p.push(()=>this.entity.setNonFieldMonsterPosition(this.entity.origin.kind,"FaceUp",["Rule"]))):f="";else d!==void 0&&(f+=`${this.toFullString()}を発動。`);const h=pr(J,this.duel.log.openTransaction());f&&d&&i.writeChainBlockHeaderLog(d,f);for(const b of p)await b();const y={index:n.length,chainNumber:d,action:this,activator:i,targetChainBlock:r,isActivatedIn:this.entity.cell,isActivatedAt:this.duel.clock.getClone(),enableCellTypes:[...this.entity.info.isEffectiveIn],costInfo:{},state:"ready",dest:u,ignoreCosts:!1};if(this.definition.payCosts&&!l){const b=await this.definition.payCosts(y,n,c);if(!b)return;y.costInfo=b,c=!1}const v=await this.definition.prepare(y,n,c);if(v===void 0)return;const g={...v};g.selectedEntities=g.selectedEntities??[];g.chainBlockTags=[...g.chainBlockTags??[],...this.definition.fixedTags??[]];g.chainBlockTags.some(b=>b.startsWith("SpecialSummon"))&&g.chainBlockTags.push("SpecialSummon");g.chainBlockTags=g.chainBlockTags.getDistinct();if(Bn.some(b=>b===this.playType)){const b=v.nextChainBlockFilter??(()=>!0);g.nextChainBlockFilter=(ie,I)=>I.negateSummon&&b(ie,I)}const m=new iu(y.state);const T={...g,...y};Object.keys(T).filter(b=>b!=="state").forEach(b=>{m[b]=T[b]});const D=m;h.commit();return D}catch(pe){var q=pe,N=!0}finally{gr(J,q,N)}});o(this,"execute",async(i,a,r)=>{const n=(r==null?void 0:r.indirectly)??!1;if(i.action.isLikeContinuousSpell&&(i.action.entity.face==="FaceDown"||!i.action.entity.isOnField))return this.entity.info.isPending=!1,i.state="failed",!1;i.state="processing";let s=!1;if(!n&&i.chainNumber&&i.activator.writeChainBlockHeaderLog(i.chainNumber,`${i.action.toFullString()}の効果処理。`),i.isNegatedActivationBy)i.state="nagated",i.chainNumber&&i.activator.writeInfoLog(`チェーン${i.chainNumber}: ${i.action.toFullString()}を${i.isNegatedActivationBy.toFullString()}によって発動が無効にされた。`);else{let l=i.action.entity.isEffective,u="";if(l){if(i.isNegatedEffectBy)u=`チェーン${i.chainNumber}: ${i.action.toFullString()}を${i.isNegatedEffectBy.toFullString()}によって効果を無効にした。`,l=!1;else if(this.isWithChainBlock&&!i.enableCellTypes.includes(i.isActivatedIn.cellType)){const c=i.action.entity.moveLog.records.findLast(d=>d.face==="FaceDown"&&d.orientation==="Horizontal");l=(c&&i.activator.duel.clock.isSameChain(c.movedAt))??!1}}l?(s=await this.definition.execute(i,a),i.state=s?"done":"failed"):(i.state="nagated",i.chainNumber&&(u=u||`チェーン${i.chainNumber}: カードの効果が無効となっているため${i.action.toFullString()}の効果処理を行えない。`),i.activator.writeInfoLog(u)),await this.entity.determine(),this.isOnlyNTimesPerTurnIfFaceup>0?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&this.entity.counterHolder.incrementActionCount(this),this.definition.settle(i,a)}return s});o(this,"directExecute",async(i,a,r)=>{const n=await this.prepare(i,void 0,a,[],!1,r);if(!n)throw new _("想定されない状態",this,i,r);return i.duel.chainBlockLog.push(n),await this.execute(n,[])});o(this,"isSame",i=>this.entity.origin.name===i.entity.origin.name&&this.title===i.title);o(this,"isSameGroup",i=>this.actionGroupName?this.entity.origin.name===i.entity.origin.name&&this.actionGroupName===i.actionGroupName:this.isSame(i));o(this,"calcChainBlockTagsForDestroy",(i,a)=>{if(!Rr.length)return[];const r=["Destroy"];Rr.length>1&&r.push("DestroyMultiple");const n=a.filter(c=>c.isOnFieldStrictly);n.length&&(r.push("DestroyOnField"),n.length>1&&r.push("DestroyMultipleOnField"));const s=n.filter(c=>c.kind==="Monster");s.length&&(r.push("DestroyMonsterOnField"),s.length>1&&r.push("DestroyMonstersOnField")),n.filter(c=>c.kind!=="Monster").length&&(r.push("DestroySpellTrapOnField"),s.length>1&&r.push("DestroySpellTrapsOnField"));const u=n.filter(c=>c.controller!==i);return u.length&&(r.push("DestroyOnOpponentField"),u.length>1&&r.push("DestroyMultipleOnOpponentField")),r});this.addhocMaterialLimitation=n??(()=>!0)}get definition(){return super.definition}get playType(){return this.definition.playType}get spellSpeed(){return this.definition.spellSpeed}get needsToPayRegularCosts(){return this.definition.needsToPayRegularCost??!1}get hasToTargetCards(){return this.definition.hasToTargetCards??!1}get isWithChainBlock(){return rr.some(i=>i===this.playType)}get isChainable(){return fc.some(i=>i===this.playType)}get isLikeContinuousSpell(){return this.definition.isLikeContinuousSpell||this.entity.isLikeContinuousSpell&&this.playType==="CardActivation"}get isNoticedForcibly(){return this.definition.isNoticedForcibly||this.isMandatory||this.definition.playType==="TriggerEffect"||this.definition.playType==="LingeringEffect"||this.negatePreviousBlock||this.negateSummon}get negatePreviousBlock(){return this.definition.negatePreviousBlock??!1}get negateSummon(){return this.definition.negateSummon??!1}get priorityForNPC(){return this.definition.priorityForNPC??Number.NaN}*getEnableMaterialPatterns(i){this.definition.getEnableMaterialPatterns&&(yield*this.definition.getEnableMaterialPatterns(i).filter(this.addhocMaterialLimitation))}};o(Ae,"createNew",(i,a)=>new Ae("AutoSeq",i,a)),o(Ae,"validateArrivalTrigger",(i,a)=>{const r=a.needsJustNow??!1;if(!i.hasBeenArrivalNow(a.arrivalReasons,a.battlePositions??k,r))return!1;const n=i.moveLog.latestArrivalRecord;if(!n)throw new _("想定されない状態");return!(a.needsByOpponent&&n.chooser===i.controller||a.needsByEffect&&!n.movedAs.includes("Effect")||a.causerFilter&&(!n.movedBy||!a.causerFilter(i,n.movedBy)))}),o(Ae,"validateDepartureTrigger",(i,a)=>{const r=a.needsJustNow??!1,n=i.moveLog.latestRecord;if(console.log(i.toString(),i.duel.clock.toFullString(),n.movedAt),!i.duel.clock.isPreviousChain(n.movedAt)||r&&!i.duel.clock.isPreviousProc(n.movedAt)||a.from&&!a.from.includes(i.wasMovedFrom.cellType)||i.cell.cellType==="Graveyard"&&i.wasMovedFrom.cellType==="Banished"||a.needsByDestory&&!n.movedAs.includes("Destroy"))return!1;if(a.needsByBattle||a.needsByEffect){let s=!1;if((a.needsByBattle&&n.movedAs.includes("Battle")||a.needsByEffect&&n.movedAs.includes("Effect"))&&(s=!0),!s)return!1}return!(a.needsByOpponent&&(i.wasMovedFrom.owner===i.controller.getOpponentPlayer()||n.actionOwner===i.controller&&!n.movedAs.includes("Battle"))||a.causerFilter&&(!n.movedBy||!a.causerFilter(i,n.movedBy)))}),o(Ae,"createDummyAction",(i,a,r,n,s)=>({action:Ae.createNew(i,{title:a,isMandatory:!1,executableCells:[],executablePeriods:[],executableDuelistTypes:[],playType:"Dammy",spellSpeed:"Dammy",getDests:()=>r,prepare:async()=>{},execute:async()=>!1,settle:async()=>!1}),dests:r,battlePosition:n,originSeq:(s==null?void 0:s.seq)??-1}));let mt=Ae;const C=async()=>({selectedEntities:[]}),$t=async(e,t,i)=>(e.activator.payLp(i,e.action.entity),{lifePoint:i}),sd=e=>e.activator.canSendToGraveyard([e.action.entity])&&e.action.entity.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action),ld=async e=>(await e.action.entity.sendToGraveyard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[e.action.entity]}),gi=e=>e.activator.canTryBanish(e.action.entity,"BanishAsCost",e.action)&&e.action.entity.canBeBanished("BanishAsCost",e.activator,e.action.entity,e.action),da=async e=>(await e.action.entity.banish(["Cost"],e.action.entity,e.activator),{banish:[e.action.entity]}),Qn=(e,t,i=1)=>t.filter(a=>e.activator.canTryBanish(a,"BanishAsCost",e.action)).filter(a=>a.canBeBanished("BanishAsCost",e.activator,e.action.entity,e.action)).length>=i,Xn=async(e,t,i,a)=>{const r=t.filter(s=>e.activator.canTryBanish(s,"BanishAsCost",e.action)).filter(s=>s.canBeBanished("BanishAsCost",e.activator,e.action.entity,e.action)),n=await e.activator.waitSelectEntities(r,a,i,"コストとして除外するカードを選択",!1)??[];return await S.banishManyForTheSameReason(n,["Cost"],e.action.entity,e.activator),{banish:n}},od=(e,t=()=>!0,i=1,a=1)=>({canPayCosts:(...r)=>Qn(r[0],e(...r),i),payCosts:(...r)=>Xn(r[0],e(r[0],r[1]),t,i===a?i:void 0)}),Ut=(e,t,i=()=>!0,a=1)=>e.activator.getHandCell().cardEntities.filter(i).filter(r=>e.activator.canDiscard([r])).length>=a,jt=async(e,t,i=!1,a=()=>!0,r=1)=>({discard:await e.activator.discard(r,"Cost",a,e.action.entity,e.activator,e.activator,i)}),cd=(e,t)=>Ut(e,t,i=>e.action.entity===i,1),ud=(e,t,i=!1)=>jt(e,t,i,a=>e.action.entity===a),dd=(e,t)=>e.action.getTargetableEntities(e,t).filter(i=>i.isOnField).map(i=>i.cell),Kn=(e,t,...i)=>{const[a,r,n]=i;return e.activator.getCells(...r??me).flatMap(l=>l.cardEntities).filter(l=>l.kind==="Monster").filter(l=>l.canBeReleased(e.activator,e.action.entity,["ReleaseAsCost"],e.action)).filter(l=>!a||a(e,t,l)).length>=(n??1)},fd=(e=()=>!0,t=me,i=1)=>({canPayCosts:(...a)=>Kn(...a,e,t,i),payCosts:async(a,r,n)=>{const s=a.activator.getCells(...t).flatMap(u=>u.cardEntities).filter(u=>u.kind==="Monster").filter(u=>u.canBeReleased(a.activator,a.action.entity,["ReleaseAsCost"],a.action)).filter(u=>e(a,r,u)),l=await a.activator.waitSelectEntities(s,i,u=>u.length===i,"コストとするモンスターを選択",n);if(l)return await S.releaseManyForTheSameReason(l,["Cost"],a.action.entity,a.activator),{release:l}}}),Hr=(e,t,i,a={})=>{const{posList:r,cells:n}={posList:k,cells:e.activator.getMonsterZones(),...a};return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,i(e,t).filter(s=>s.kind==="Monster").filter(s=>s.canBeTargetOfEffect(e)).map(s=>({monster:s,posList:r,cells:n})),[],!1)},pd=async(e,t,i=k,a=n=>n.length===1,r=1)=>{const n=e.activator.getMonsterZones(),s=e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,t.filter(c=>c.kind==="Monster").filter(c=>c.canBeTargetOfEffect(e)).map(c=>({monster:c,posList:i,cells:n})),[],!1),l=await e.activator.waitSelectEntities(s.map(c=>c.monster),r,a,"特殊召喚するモンスターを選択",!1)??[];if(!l.length)throw new O(e);const u=l.map(c=>c.cell.cellType).getDistinct().filter(c=>c==="Graveyard"||c==="Banished").map(c=>c==="Graveyard"?"SpecialSummonFromGraveyard":"SpecialSummonFromBanished");return{selectedEntities:l,chainBlockTags:u}},Yn=async(e,t,i)=>{const{posList:a,allOrNothing:r,cells:n}={posList:k,allOrNothing:!0,cells:e.activator.getMonsterZones(),...i},s=e.selectedEntities.filter(l=>!l.wasMovedAfter(e.isActivatedAt)).map(l=>({monster:l,posList:a,cells:n}));return r&&(s.length!==e.selectedEntities.length||n.length<s.length)?!1:(await e.activator.summonAll(e.activator,"SpecialSummon",["Effect"],e.action,s,[],!1,!1),!0)},Jn=async(e,t,i)=>{const a=(i==null?void 0:i.cells)??e.activator.getMonsterZones(),r=(i==null?void 0:i.posList)??k,n=t.map(s=>({monster:s,posList:r,cells:a}));return await e.activator.summonAll(e.activator,"SpecialSummon",["Effect"],e.action,n,[],!1,!1),!0},He=(e,t={})=>{const i=t.qty??1;return{hasToTargetCards:!0,getTargetableEntities:e,canExecute:(a,r,n)=>(!t.canExecute||t.canExecute(a,r,n))&&Hr(a,r,e,t).length>=i,prepare:async(a,r,n)=>{const s=t.tags??[],l=t.message??"特殊召喚するモンスターを選択。",u=Hr(a,r,e,t),c=await a.activator.waitSelectEntities(u.map(d=>d.monster),i,d=>d.length===i,l,n);if(c)return s.push(...c.map(d=>d.cell.cellType).getDistinct().filter(d=>d==="Graveyard"||d==="Banished").map(d=>d==="Graveyard"?"SpecialSummonFromGraveyard":"SpecialSummonFromBanished")),{selectedEntities:c,chainBlockTags:s,appendix:[`対象：${c.map(d=>d.toString()).join(", ")}`]}},execute:async(...a)=>{const r=await Yn(...a,t);return t.afterExecute?t.afterExecute(r,...a):r}}},De=(e,t={})=>{const i=(a,r,n)=>e(a,r,n).filter(s=>s.canBeTargetOfEffect(a));return{hasToTargetCards:!0,getTargetableEntities:e,canExecute:(...a)=>i(...a).length>0&&(!t.canExecute||t.canExecute(...a)),getDests:dd,prepare:async(a,r,n)=>{let s=[];const l=t.tags??[],u=t.message??(t.do==="Destroy"?"破壊するカードを選択。":"対象とするカードを選択。");if(a.dest)s=[a.dest.cardEntities[0]];else{const c=await a.activator.waitSelectEntity(i(a,r),u,n);if(!c)return;s=[c]}return t.do==="Destroy"&&l.push(...a.action.calcChainBlockTagsForDestroy(a.activator,s)),{selectedEntities:s,chainBlockTags:l,appendix:[`対象：${s.map(c=>c.toString()).join(", ")}`]}}}},gd=(e,t,i)=>({title:e,playType:"SystemPeriodAction",spellSpeed:"Normal",executableCells:Me,executablePeriods:t,executableDuelistTypes:Gt,isMandatory:!0,canExecute:a=>(i(a),!1),prepare:C,execute:async()=>!0,settle:async()=>!0}),E={title:"セット",playType:"SpellTrapSet",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isMandatory:!1,prepare:C,execute:async()=>!0,settle:async()=>!0},st={title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone","FieldSpellZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],prepare:C,execute:async()=>!0,settle:async()=>!0},hd=async(e,t,i,a,r)=>{const n=e.action.getTargetableEntities(e,t);if(!n)throw new _("CardAction定義が正しくない",e);const s=await e.activator.waitSelectEntity(n,"装備対象モンスターを選択",i);if(s)return e.action.entity.info.equipedBy=s,e.action.entity.info.effectTargets[e.action.seq]=[s],{chainBlockTags:a??[],selectedEntities:[s],prepared:r}},In=async(e,t,i=()=>!0)=>{const a=e.selectedEntities[0];return e.action.entity.info.equipedBy=a,e.action.entity.info.effectTargets[e.action.seq]=[a],i(a,e.action.entity)?(e.action.entity.info.equipedBy=a,e.action.entity.info.validateEquipOwner=i,a.info.equipEntities.push(e.action.entity),!0):(await e.action.entity.ruleDestroy(),e.activator.writeInfoLog(`${a.toString()}が装備条件を満たさなくなったため、${e.action.entity.toString()}は破壊された。`),!1)},Ft=(e=()=>!0)=>({title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getTargetableEntities:t=>t.action.entity.field.getMonstersOnFieldStrictly().filter(i=>i.face==="FaceUp").filter(i=>i.canBeTargetOfEffect(t)).filter(i=>e(i,t.action.entity)),getDests:(t,i)=>t.action.getTargetableEntities(t,i).filter(a=>a.isOnFieldAsMonsterStrictly).map(a=>a.cell),prepare:(t,i,a)=>hd(t,i,a,[],void 0),execute:In,settle:async()=>!0});function*yd(){yield{name:"連合軍",actions:[st,E],continuousEffects:[Ri("発動","Spell",e=>[ne.createContinuous("発動",t=>t.isSpawnedBy.isOnFieldStrictly&&t.isSpawnedBy.face==="FaceUp",e,(t,i)=>i.controller===t.isSpawnedBy.controller&&i.types.includes("Warrior")&&i.isOnFieldStrictly&&i.face==="FaceUp","attack","wip","Addition",(t,i,a)=>{if(!t.isEffective||i.face==="FaceDown")return a;const r=t.controller.getMonstersOnField().filter(n=>n.face==="FaceUp").filter(n=>n.types.includes("Warrior")||n.types.includes("Spellcaster")).length;return a+r*200})])]}}const es=Object.freeze(Object.defineProperty({__proto__:null,default:yd},Symbol.toStringTag,{value:"Module"}));function*vd(){const e=[{name:"リビングデッドの呼び声",pos:"Attack",filter:()=>!0},{name:"エンジェル・リフト",pos:"Attack",filter:t=>(t.lvl??12)<3},{name:"正統なる血統",pos:"Attack",filter:t=>{var i;return!!((i=t.status.monsterCategories)!=null&&i.includes("Normal"))}},{name:"蘇りし魂",pos:"Defense",filter:t=>{var i;return!!((i=t.status.monsterCategories)!=null&&i.includes("Normal"))}},{name:"リミット・リバース",pos:"Attack",filter:t=>(t.atk??9999)<=1e3,targetImmdAction:async(t,i)=>{if(i){if(!i.isOnFieldAsMonsterStrictly||i.face==="FaceDown")return"RemoveMe";if(t.entity.isEffective&&i.battlePosition==="Defense")return t.entity.controller.writeInfoLog(`${i.toString()}が守備表示になったため、${t.entity.toString()}とともに破壊される。`),await S.tryMarkForDestroy([i,t.entity],{action:t,activator:t.entity.controller,selectedEntities:[i]}),"RemoveMe"}}}];for(const t of e)yield{name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard","SpecialSummon"],...He(i=>i.activator.getGraveyard().cardEntities.filter(a=>a.kind==="Monster").filter(t.filter).filter(a=>a.canBeTargetOfEffect(i)),{posList:["Attack"],afterExecute:async(i,a)=>!i||!a.selectedEntities.length?!1:(a.action.entity.info.effectTargets[a.action.seq]=a.selectedEntities,!0)}),settle:async()=>!0},E],immediatelyActions:[{title:"自壊",executableCells:Me,executablePeriods:ue,executableFaces:Gn,execute:async(i,a,r)=>{if(t.targetImmdAction&&a&&Object.values(i.entity.info.effectTargets).flatMap(l=>l).includes(a)){t.targetImmdAction(i,a,r);return}if(console.log(i.entity.toString(),i,a,r),a!==i.entity||(console.log(i.entity.toString(),i,a,r),!r))return;console.log(i.entity.toString(),i,a,r);const n=Object.values(r.info.effectTargets).flatMap(l=>l);if(!n.length)return;console.log(i.entity.toString(),i,a,r);const s=n[0];s.isOnFieldAsMonsterStrictly&&s.face==="FaceUp"&&r.status.isEffective&&r.info.isEffectiveIn.includes(r.cell.cellType)&&(i.entity.controller.writeInfoLog(`${i.entity.toString()}がフィールドを離れたため、対象モンスター${s.toString()}を破壊。`),await S.tryMarkForDestroy([s],{action:i,activator:i.entity.controller,selectedEntities:n}))}}]}}const ts=Object.freeze(Object.defineProperty({__proto__:null,default:vd},Symbol.toStringTag,{value:"Module"}));function*md(){yield{name:"昇天の黒角笛",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Counter",executableCells:["SpellAndTrapZone"],executablePeriods:ue,executableDuelistTypes:["Controller"],negateSummon:!0,fixedTags:["NegateSpecialSummon"],canExecute:e=>(e.targetChainBlock&&e.targetChainBlock.action.playType==="SpecialSummon"&&e.targetChainBlock.activator!==e.activator&&e.activator.duel.field.getPendingMonstersOnField().length===1)??!1,prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=S.negateSummonMany(e.action.entity,e.activator);return await S.tryDestroy(t,e),!0},settle:async()=>!0},E]}}const is=Object.freeze(Object.defineProperty({__proto__:null,default:md},Symbol.toStringTag,{value:"Module"}));function*Sd(){yield*[{name:"団結の力",filter:e=>e.isMonster&&e.face==="FaceUp",rate:800},{name:"魔導師の力",filter:e=>e.kind==="Spell"||e.kind==="Trap",rate:500}].map(e=>({name:e.name,actions:[Ft(),E],continuousEffects:[fi(e.name,"Spell",t=>t.info.equipedBy?[t.info.equipedBy]:[],t=>["attack","defense"].map(i=>ne.createContinuous("発動",a=>a.isSpawnedBy.isOnFieldStrictly&&a.isSpawnedBy.face==="FaceUp",t,(a,r)=>r.isOnFieldStrictly&&r.face==="FaceUp",i,"wip","Addition",(a,r,n)=>{if(!a.isEffective)return n;const s=a.controller.getEntiteisOnField().filter(e.filter).length;return n+s*e.rate})))]})),yield{name:"早すぎた埋葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard","PayLifePoint"],canPayCosts:e=>e.activator.lp>=800,payCosts:(e,t)=>$t(e,t,800),...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>t.canBeTargetOfEffect(e)),{posList:["Attack"],afterExecute:async(e,t,i)=>e?In(t,i,(a,r)=>{var n;return(n=r.info.effectTargets[t.action.seq])==null?void 0:n.includes(a)}):(await t.action.entity.ruleDestroy(),!1)}),settle:async()=>!0},E],immediatelyActions:[{title:"自壊",executableCells:["SpellAndTrapZone",...ca],executablePeriods:ue,executableFaces:["FaceUp"],execute:async(e,t,i)=>{if(t!==e.entity||!i)return;const a=i.info.equipedBy;a&&a.isOnFieldStrictly&&a.face==="FaceUp"&&i.status.isEffective&&i.info.isEffectiveIn.includes(i.cell.cellType)&&!t.cell.isSpellTrapZoneLikeCell&&t.moveLog.latestRecord.movedAs.some(r=>r.endsWith("Destroy"))&&(e.entity.controller.writeInfoLog(`${e.entity.toString()}が破壊されたため、対象モンスター${a.toString()}を破壊。`),await S.tryMarkForDestroy([a],{action:e,activator:e.entity.controller,selectedEntities:[a]}))}}]},yield{name:"幻惑の巻物",actions:[Ft(),E],continuousEffects:[]}}const as=Object.freeze(Object.defineProperty({__proto__:null,default:Sd},Symbol.toStringTag,{value:"Module"}));function*_d(){yield*[{name:"伝説の剣",attr:void 0,monType:"Warrior",atk:200,def:200},{name:"秘術の書",attr:void 0,monType:"Spellcaster",atk:200,def:200},{name:"ポセイドンの力",attr:void 0,monType:"Aqua",atk:200,def:200},{name:"紫水晶",attr:void 0,monType:"Zombie",atk:200,def:200},{name:"猛獣の歯",attr:void 0,monType:"Beast",atk:200,def:200},{name:"機械改造工場",attr:void 0,monType:"Machine",atk:200,def:200},{name:"体温の上昇",attr:void 0,monType:"Reptile",atk:200,def:200},{name:"魔菌",attr:void 0,monType:"Plant",atk:200,def:200},{name:"闇・エネルギー",attr:void 0,monType:"Fiend",atk:200,def:200},{name:"レーザー砲機甲鎧",attr:void 0,monType:"Insect",atk:200,def:200},{name:"銀の弓矢",attr:void 0,monType:"Fairy",atk:200,def:200},{name:"電撃鞭",attr:void 0,monType:"Thunder",atk:200,def:200},{name:"ドラゴンの秘宝",attr:void 0,monType:"Dragon",atk:200,def:200},{name:"フォロー・ウィンド",attr:void 0,monType:"WingedBeast",atk:200,def:200},{name:"魔性の月",attr:void 0,monType:"BeastWarrior",atk:200,def:200},{name:"エルフの光",attr:"Light",monType:void 0,atk:400,def:-200},{name:"覚醒",attr:"Earth",monType:void 0,atk:400,def:-200},{name:"灼熱の槍",attr:"Fire",monType:void 0,atk:400,def:-200},{name:"突風の扇",attr:"Wind",monType:void 0,atk:400,def:-200},{name:"はがねの甲羅",attr:"Water",monType:void 0,atk:400,def:-200},{name:"闇の破神剣",attr:"Dark",monType:void 0,atk:400,def:-200},{name:"火器付機甲鎧",attr:void 0,monType:"Insect",atk:700,def:0},{name:"サラマンドラ",attr:"Fire",monType:void 0,atk:700,def:0},{name:"シャイン・キャッスル",attr:"Light",monType:void 0,atk:700,def:0}].map(e=>({name:e.name,actions:[Ft(t=>(!e.attr||t.attr.includes(e.attr))&&(!e.monType||t.types.includes(e.monType))),E],continuousEffects:[fi(e.name,"Spell",t=>t.info.equipedBy?[t.info.equipedBy]:[],t=>{const i=[];return e.atk!==0&&i.push(["attack",e.atk]),e.def!==0&&i.push(["defense",e.def]),i.map(([a,r])=>ne.createContinuous("発動",n=>n.isSpawnedBy.isOnFieldStrictly&&n.isSpawnedBy.face==="FaceUp",t,(n,s)=>s.isOnFieldStrictly&&s.face==="FaceUp"&&(!e.monType||s.types.includes(e.monType))&&(!e.attr||s.attr.includes(e.attr)),a,"wip","Addition",(n,s,l)=>n.isEffective?l+r:l))})]}))}const rs=Object.freeze(Object.defineProperty({__proto__:null,default:_d},Symbol.toStringTag,{value:"Module"}));function*Cd(){yield{name:"チキンレース",actions:[st,E,{title:"②効果発動",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["FieldSpellZone"],executablePeriods:["main1","main2"],executableDuelistTypes:Gt,executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,canPayCosts:e=>e.activator.lp>=1e3,canExecute:e=>e.action.entity.face==="FaceUp",payCosts:(e,t)=>$t(e,t,1e3),prepare:async(e,t,i)=>{let a=[{seq:0,text:"●デッキから１枚ドローする。",tags:["Draw"]},{seq:1,text:"●このカードを破壊する。",tags:e.action.calcChainBlockTagsForDestroy(e.activator,[e.action.entity])},{seq:2,text:"●相手は1000LP回復する。",tags:[]}];e.activator.getDeckCell().cardEntities.length||(a=a.filter(n=>n.seq));const r=await e.activator.waitSelectText(a,"使用する効果を選択",i);if(r!==void 0)return e.data=r.seq,{selectedEntities:[],chainBlockTags:r.tags,nextChainBlockFilter:()=>!1}},execute:async e=>{if(e.data===0)await e.activator.draw(1,e.action.entity,e.activator);else if(e.data===1)await S.tryDestroy([e.action.entity],e);else if(e.data===2)e.activator.getOpponentPlayer().heal(1e3,e.action.entity);else throw new _("値が正しくない。",e,e.data);return!0},settle:async()=>!0}],continuousEffects:[Ec("①ダメージ無効","Spell",e=>[e.controller,e.controller.getOpponentPlayer()].map(t=>t.entity),e=>[new Rn({title:"①ダメージ無効",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:()=>!0,calcType:"zero_typeA",filter:(t,i,a,r)=>t.isSpawnedBy.cell.cellType!=="FieldSpellZone"?{}:r.lp>=r.getOpponentPlayer().lp?{}:(a.writeInfoLog(`${r.profile.name}はチキンレースの効果でダメージを受けない。`),{zero_typeA:!0})})])]}}const ns=Object.freeze(Object.defineProperty({__proto__:null,default:Cd},Symbol.toStringTag,{value:"Module"}));function*Td(){yield*[{name:"草原",up:["Warrior","BeastWarrior"],down:[]},{name:"森",up:["Insect","Plant","Beast","BeastWarrior"],down:[]},{name:"山",up:["Dragon","WingedBeast","Thunder"],down:[]},{name:"荒野",up:["Dinosaur","Zombie","Rock"],down:[]},{name:"海",up:["Aqua","SeaSerpent","Fish"],down:["Machine","Pyro"]},{name:"闇",up:["Fiend","Spellcaster"],down:["Fairy"]}].map(e=>({name:e.name,actions:[st,E],continuousEffects:[Ri("発動","Spell",t=>["attack","defense"].flatMap(i=>["up","down"].map(a=>ne.createContinuous("発動",r=>r.isSpawnedBy.isOnFieldStrictly&&r.isSpawnedBy.face==="FaceUp",t,(r,n)=>n.isOnFieldStrictly&&n.face==="FaceUp"&&(n.status.monsterCategories??!1)&&e[a].union(n.types).length>0,i,"wip","Addition",(r,n,s)=>!r.isEffective||n.face==="FaceDown"?s:s+(a==="up"?200:-200)))))]})),yield*[{name:"バーニングブラッド",attr:"Fire"},{name:"ウォーターワールド",attr:"Water"},{name:"ガイアパワー",attr:"Earth"},{name:"シャインスパーク",attr:"Light"},{name:"ダークゾーン",attr:"Dark"},{name:"デザートストーム",attr:"Wind"}].map(e=>({name:e.name,actions:[st,E],continuousEffects:[Ri("発動","Spell",t=>["attack","defense"].flatMap(i=>ne.createContinuous("発動",a=>a.isSpawnedBy.isOnFieldStrictly&&a.isSpawnedBy.face==="FaceUp",t,(a,r)=>r.isOnFieldStrictly&&r.face==="FaceUp"&&r.attr.includes(e.attr),i,"wip","Addition",(a,r,n)=>!a.isEffective||r.face==="FaceDown"?n:n+(i==="attack"?500:-400))))]}))}const ss=Object.freeze(Object.defineProperty({__proto__:null,default:Td},Symbol.toStringTag,{value:"Module"}));function*wd(){const e=[{name:"カルボナーラ戦士",materialInfos:[{type:"Name",cardName:"マグネッツ１号"},{type:"Name",cardName:"マグネッツ２号"}]},{name:"クリッチー",materialInfos:[{type:"Name",cardName:"クリッター"},{type:"Name",cardName:"黒き森のウィッチ"}]},{name:"スケルゴン",materialInfos:[{type:"Name",cardName:"メデューサの亡霊"},{type:"Name",cardName:"暗黒の竜王"}]},{name:"スチームジャイロイド",materialInfos:[{type:"Name",cardName:"ジャイロイド"},{type:"Name",cardName:"スチームロイド"}]},{name:"バラに棲む悪霊",materialInfos:[{type:"Name",cardName:"グレムリン"},{type:"Name",cardName:"スネーク・パーム"}]},{name:"バロックス",materialInfos:[{type:"Name",cardName:"キラーパンダ"},{type:"Name",cardName:"ガーゴイル"}]},{name:"フュージョニスト",materialInfos:[{type:"Name",cardName:"プチテンシ"},{type:"Name",cardName:"スリーピィ"}]},{name:"ブラキオレイドス",materialInfos:[{type:"Name",cardName:"二頭を持つキング・レックス"},{type:"Name",cardName:"屍を貪る竜"}]},{name:"プラグティカル",materialInfos:[{type:"Name",cardName:"トラコドン"},{type:"Name",cardName:"フレイム・ヴァイパー"}]},{name:"マブラス",materialInfos:[{type:"Name",cardName:"タイホーン"},{type:"Name",cardName:"邪炎の翼"}]},{name:"ミノケンタウロス",materialInfos:[{type:"Name",cardName:"ミノタウルス"},{type:"Name",cardName:"ケンタウロス"}]},{name:"暗黒火炎龍",materialInfos:[{type:"Name",cardName:"火炎草"},{type:"Name",cardName:"プチリュウ"}]},{name:"炎の騎士 キラー",materialInfos:[{type:"Name",cardName:"モンスター・エッグ"},{type:"Name",cardName:"スティング"}]},{name:"炎の剣士",materialInfos:[{type:"Name",cardName:"炎を操る者"},{type:"Name",cardName:"伝説の剣豪 ＭＡＳＡＫＩ"}]},{name:"音楽家の帝王",materialInfos:[{type:"Name",cardName:"黒き森のウィッチ"},{type:"Name",cardName:"ハイ・プリーステス"}]},{name:"金色の魔象",materialInfos:[{type:"Name",cardName:"メデューサの亡霊"},{type:"Name",cardName:"ドラゴン・ゾンビ"}]},{name:"紅陽鳥",materialInfos:[{type:"Name",cardName:"セイント・バード"},{type:"Name",cardName:"スカイ・ハンター"}]},{name:"轟きの大海蛇",materialInfos:[{type:"Name",cardName:"魔法のランプ"},{type:"Name",cardName:"ひょうすべ"}]},{name:"黒き人食い鮫",materialInfos:[{type:"Name",cardName:"シーカーメン"},{type:"Name",cardName:"キラー・ブロッブ"},{type:"Name",cardName:"海原の女戦士"}]},{name:"砂の魔女",materialInfos:[{type:"Name",cardName:"岩石の巨兵"},{type:"Name",cardName:"エンシェント・エルフ"}]},{name:"裁きの鷹",materialInfos:[{type:"Name",cardName:"冠を戴く蒼き翼"},{type:"Name",cardName:"コケ"}]},{name:"裁きを下す女帝",materialInfos:[{type:"Name",cardName:"女王の影武者"},{type:"Name",cardName:"響女"}]},{name:"朱雀",materialInfos:[{type:"Name",cardName:"赤き剣のライムンドス"},{type:"Name",cardName:"炎の魔神"}]},{name:"深海に潜むサメ",materialInfos:[{type:"Name",cardName:"神魚"},{type:"Name",cardName:"舌魚"}]},{name:"水陸両用バグロス",materialInfos:[{type:"Name",cardName:"陸戦型 バグロス"},{type:"Name",cardName:"海を守る戦士"}]},{name:"戦場の死装束",materialInfos:[{type:"Name",cardName:"音女"},{type:"Name",cardName:"斬首の美女"}]},{name:"魔装騎士ドラゴネス",materialInfos:[{type:"Name",cardName:"アーメイル"},{type:"Name",cardName:"一眼の盾竜"}]},{name:"魔導騎士ギルティア",materialInfos:[{type:"Name",cardName:"冥界の番人"},{type:"Name",cardName:"王座の守護者"}]},{name:"雷神の怒り",materialInfos:[{type:"Name",cardName:"エンゼル・イヤーズ"},{type:"Name",cardName:"メガ・サンダーボール"}]},{name:"カイザー・ドラゴン",materialInfos:[{type:"Name",cardName:"砦を守る翼竜"},{type:"Name",cardName:"フェアリー・ドラゴン"}]},{name:"スカルビショップ",materialInfos:[{type:"Name",cardName:"悪魔の知恵"},{type:"Name",cardName:"魔天老"}]},{name:"デビル・ボックス",materialInfos:[{type:"Name",cardName:"マーダーサーカス"},{type:"Name",cardName:"ドリーム・ピエロ"}]},{name:"ヒューマノイド・ドレイク",materialInfos:[{type:"Name",cardName:"ワームドレイク"},{type:"Name",cardName:"ヒューマノイド・スライム"}]},{name:"ブラック・デーモンズ・ドラゴン",materialInfos:[{type:"Name",cardName:"デーモンの召喚"},{type:"Name",cardName:"真紅眼の黒竜"}]},{name:"マスター・オブ・ＯＺ",materialInfos:[{type:"Name",cardName:"ビッグ・コアラ"},{type:"Name",cardName:"デス・カンガルー"}]},{name:"メテオ・ブラック・ドラゴン",materialInfos:[{type:"Name",cardName:"真紅眼の黒竜"},{type:"Name",cardName:"メテオ・ドラゴン"}]},{name:"召喚獣メガラニカ",materialInfos:[{type:"Name",cardName:"召喚師アレイスター"},{type:"Name",cardName:"地属性モンスター"}]},{name:"聖女ジャンヌ",materialInfos:[{type:"Name",cardName:"慈悲深き修道女"},{type:"Name",cardName:"堕天使マリー"}]},{name:"青眼の究極竜",materialInfos:[{type:"Name",cardName:"青眼の白龍"},{type:"Name",cardName:"青眼の白龍"},{type:"Name",cardName:"青眼の白龍"}]},{name:"千年竜",materialInfos:[{type:"Name",cardName:"時の魔術師"},{type:"Name",cardName:"ベビードラゴン"}]},{name:"双頭の雷龍",materialInfos:[{type:"Name",cardName:"サンダー・ドラゴン"},{type:"Name",cardName:"サンダー・ドラゴン"}]},{name:"迷宮の魔戦車",materialInfos:[{type:"Name",cardName:"ギガテック・ウルフ"},{type:"Name",cardName:"キャノン・ソルジャー"}]},{name:"竜騎士ガイア",materialInfos:[{type:"Name",cardName:"暗黒騎士ガイア"},{type:"Name",cardName:"カース・オブ・ドラゴン"}]},{name:"アクア・ドラゴン",materialInfos:[{type:"Name",cardName:"フェアリー・ドラゴン"},{type:"Name",cardName:"海原の女戦士"}]},{name:"アンデット・ウォーリアー",materialInfos:[{type:"Name",cardName:"ワイト"},{type:"Name",cardName:"格闘戦士アルティメーター"}]},{name:"カオス・ウィザード",materialInfos:[{type:"Name",cardName:"ホーリー・エルフ"},{type:"Name",cardName:"黒魔族のカーテン"}]},{name:"クワガー・ヘラクレス",materialInfos:[{type:"Name",cardName:"クワガタ・アルファ"},{type:"Name",cardName:"ヘラクレス・ビートル"}]},{name:"ソウル・ハンター",materialInfos:[{type:"Name",cardName:"ランプの魔人"},{type:"Name",cardName:"異次元からの侵略者"}]},{name:"デス・バード",materialInfos:[{type:"Name",cardName:"タクヒ"},{type:"Name",cardName:"髑髏の寺院"}]},{name:"フラワー・ウルフ",materialInfos:[{type:"Name",cardName:"シルバー・フォング"},{type:"Name",cardName:"魔界のイバラ"}]},{name:"フレイム・ゴースト",materialInfos:[{type:"Name",cardName:"ワイト"},{type:"Name",cardName:"マグマン"}]},{name:"マリン・ビースト",materialInfos:[{type:"Name",cardName:"水の魔導師"},{type:"Name",cardName:"ベヒゴン"}]},{name:"メカ・ザウルス",materialInfos:[{type:"Name",cardName:"ミスター・ボンバー"},{type:"Name",cardName:"二頭を持つキング・レックス"}]},{name:"メタル・ドラゴン",materialInfos:[{type:"Name",cardName:"鋼鉄の巨神像"},{type:"Name",cardName:"レッサー・ドラゴン"}]},{name:"レア・フィッシュ",materialInfos:[{type:"Name",cardName:"フュージョニスト"},{type:"Name",cardName:"恍惚の人魚"}]},{name:"無の畢竟 オールヴェイン",materialInfos:[{type:"Filter",filter:t=>{var i;return((i=t.status.monsterCategories)==null?void 0:i.includes("Normal"))??!1}},{type:"Filter",filter:t=>{var i;return((i=t.status.monsterCategories)==null?void 0:i.includes("Normal"))??!1}}]},{name:"テセウスの魔棲物",materialInfos:[{type:"Filter",filter:t=>{var i;return((i=t.status.monsterCategories)==null?void 0:i.includes("Tuner"))??!1}},{type:"Filter",filter:t=>{var i;return((i=t.status.monsterCategories)==null?void 0:i.includes("Tuner"))??!1}}]},{name:"ジェムナイト・ジルコニア",materialInfos:[{type:"Filter",filter:t=>{var i;return((i=t.status.nameTags)==null?void 0:i.includes("ジェムナイト"))??!1}},{type:"Filter",filter:t=>t.types.includes("Rock")??!1}]},{name:"メタルフォーゼ・アダマンテ",materialInfos:[{type:"Filter",filter:t=>{var i;return((i=t.status.nameTags)==null?void 0:i.includes("メタルフォーゼ"))??!1}},{type:"Filter",filter:t=>(t.atk??9999)<=2500}]},{name:"メタルフォーゼ・カーディナル",materialInfos:[{type:"Filter",filter:t=>{var i;return((i=t.status.nameTags)==null?void 0:i.includes("メタルフォーゼ"))??!1}},{type:"Filter",filter:t=>(t.atk??9999)<=3e3},{type:"Filter",filter:t=>(t.atk??9999)<=3e3}]}];for(const t of e)yield{name:t.name,actions:[],fusionMaterialInfos:t.materialInfos}}const ls=Object.freeze(Object.defineProperty({__proto__:null,default:wd},Symbol.toStringTag,{value:"Module"})),bd=async(e,t,i=!1)=>{if(!e.action.entity.lvl)return;if(e.action.entity.lvl<5)return{};const a=e.activator.getAvailableMonsterZones();let r=e.activator.getMonstersOnField().filter(c=>c.canBeReleased(e.activator,e.action.entity,["AdvanceSummonRelease"],e.action));const n=e.activator.getExtraMonsterZones(),s=e.action.entity.lvl<7?1:2;n.length>=s&&(r=r.filter(c=>c.cell.cellType!=="ExtraMonsterZone"));const l=await e.activator.waitSelectEntities(r,s,c=>(i||c.length>0)&&(s<0||c.length===s)&&(a.length>0||c.some(d=>d.cell.cellType==="ExtraMonsterZone")),"リリースするモンスターを選択",i)??[];return l.length?(await S.releaseManyForTheSameReason(l,["Cost","AdvanceSummonRelease","Rule"],e.action.entity,e.activator),{summonMaterialInfos:l.map(c=>({material:c,cell:c.cell}))}):void 0},Ed=async e=>{var r;const t=["Rule","NormalSummon"];let i="NormalSummon";(r=e.costInfo.summonMaterialInfos)!=null&&r.length&&(i="AdvanceSummon",t.push("AdvanceSummon"));const a=e.dest?[e.dest]:e.activator.getAvailableMonsterZones();return lt(e,i,t,["Attack","Set"],a)},lt=async(e,t,i,a,r)=>{let n=e.dest?[e.dest]:r;return n||(n=e.activator.getMonsterZones(),e.action.entity.cell.cellType==="ExtraDeck"&&n.push(...e.activator.duel.field.getCells("ExtraMonsterZone"))),await e.activator.summon(t,i,e.action,e.action.entity,a,n,e.costInfo.summonMaterialInfos??[],!1),{selectedEntities:[]}},ot=async e=>{var t,i;return e.action.entity.info.isRebornable=!((t=e.action.entity.origin.monsterCategories)!=null&&t.includes("RegularSpecialSummonOnly")),await e.action.entity.determine(),(i=e.costInfo.summonMaterialInfos)==null||i.map(a=>a.material).forEach(a=>a.onUsedAsMaterial(e,e.action.entity)),!0},kd={title:"通常召喚",isMandatory:!1,playType:"NormalSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canPayCosts:e=>{if(!e.action.entity.lvl)return!1;if(e.action.entity.lvl<5)return e.activator.getEnableSummonList(e.activator,"NormalSummon",["Rule"],e.action,[{monster:e.action.entity,posList:["Attack","Set"],cells:e.activator.getMonsterZones()}],[],!1).length>0;const t=e.activator.getMonstersOnField().filter(r=>r.canBeReleased(e.activator,e.action.entity,["AdvanceSummonRelease"],e.action)),i=e.action.entity.lvl<7?1:2;return t.length<i?!1:t.getAllOnOffPattern().filter(r=>r.length===i).some(r=>e.activator.getEnableSummonList(e.activator,"AdvanceSummon",["Rule","NormalSummon"],e.action,[{monster:e.action.entity,posList:["Attack","Set"],cells:e.activator.getMonsterZones()}],r.map(n=>({material:n,cell:n.cell})),!1).length)},meetsConditions:e=>e.activator.info.ruleNormalSummonCount<e.activator.info.maxRuleNormalSummonCount&&!!e.action.entity.lvl,getDests:e=>e.action.entity.lvl?e.action.entity.lvl>4?[]:e.activator.getEnableSummonList(e.activator,"NormalSummon",["Rule"],e.action,[{monster:e.action.entity,posList:["Attack","Set"],cells:e.activator.getMonsterZones()}],[],!1).flatMap(i=>i.cells).getDistinct():[],payCosts:bd,prepare:Ed,execute:ot,settle:async()=>!0},Ot=(e,t,i,a)=>{const r=e.activator.getMonsterZones();return e.action.entity.cell.cellType==="ExtraDeck"&&r.push(...e.activator.getAvailableExtraMonsterZones()),e.activator.getEnableSummonList(e.activator,"SpecialSummon",a,e.action,[{monster:e.action.entity,posList:t,cells:r}],i,!1).flatMap(s=>s.cells)},ve=(...e)=>Ot(...e).length>0,Dd={title:"攻撃宣言",isMandatory:!1,playType:"DeclareAttack",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["b1Battle","b2Battle"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,getTargetableEntities:e=>e.action.entity.getAttackTargets(),canExecute:(e,t)=>!e.activator.isTurnPlayer||!e.action.entity.isMonster||!e.action.entity.status.canAttack||e.action.entity.info.attackDeclareCount>0||e.action.entity.battlePosition!=="Attack"?!1:e.action.getTargetableEntities(e,t).length>0,getDests:(e,t)=>e.action.getTargetableEntities(e,t).map(i=>i.cell),prepare:async(e,t)=>{var r,n;if(e.action.entity.info.attackDeclareCount>0||e.action.entity.battlePosition!=="Attack")return;const i=e.action.getTargetableEntities(e,t);if(i.length===0)throw new _("攻撃対象の選択肢がない状態で実行された。",e);let a=i[0];for(;i.length!==1;){if((r=e.dest)!=null&&r.targetForAttack){a=e.dest.entities.find(u=>u.entityType==="Duelist")??((n=e.dest)==null?void 0:n.targetForAttack);break}if(e.activator.duelistType==="NPC"){let l=e.activator.selectAttackTargetForNPC(e.action.entity,e.action);l||(e.activator.duel.log.warn("NPCの攻撃対象選択に失敗したため、ランダムに攻撃対象を選択。"),l=i.randomPick());break}const s=await e.activator.waitSelectEntity(i,"攻撃対象を選択。",!0);if(!s)return;a=s;break}return e.action.entity.field.duel.declareAttack(e.action.entity,a,!1),{selectedEntities:[a]}},execute:async()=>!0,settle:async()=>!0},xd={title:"戦闘",isMandatory:!1,playType:"Battle",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["b1DDmgCalc","b2DDmgCalc"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,canExecute:e=>!!e.activator.duel.targetForAttack&&e.activator.duel.attackingMonster===e.action.entity&&e.action.entity.isMonster,prepare:async e=>{if(e.activator.duel.attackingMonster!==e.action.entity)throw new _("canExecuteの判定が正しく行われなかった",e,e.activator.duel.attackingMonster,e.activator.duel.targetForAttack);if(!e.activator.duel.targetForAttack)throw new _("canExecuteの判定が正しく行われなかった",e,e.activator.duel.attackingMonster,e.activator.duel.targetForAttack);return{selectedEntities:[e.activator.duel.targetForAttack]}},execute:async()=>!0,settle:async()=>!0},os=async e=>{if(!(e.action.entity.info.battlePotisionChangeCount>0||!e.activator.isTurnPlayer))return await e.action.entity.setBattlePosition(e.action.entity.battlePosition==="Attack"?"Defense":"Attack",["Rule"],e.action.entity,e.activator),e.action.entity.info.battlePotisionChangeCount++,{selectedEntities:[]}},Ad={title:"反転召喚",isMandatory:!1,playType:"FlipSummon",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:e=>e.action.entity.info.battlePotisionChangeCount===0&&e.action.entity.info.attackDeclareCount===0&&e.activator.isTurnPlayer&&e.action.entity.face==="FaceDown"&&e.action.entity.isMonster,prepare:os,execute:async e=>(await e.action.entity.determine(),!0),settle:async()=>!0},Pd={title:"表示形式変更",isMandatory:!1,playType:"ChangeBattlePosition",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],meetsConditions:e=>e.action.entity.info.battlePotisionChangeCount===0&&e.action.entity.info.attackDeclareCount===0&&e.action.entity.status.canBattlePositionChange,canExecute:e=>e.activator.isTurnPlayer&&e.action.entity.face==="FaceUp"&&e.action.entity.isOnFieldAsMonsterStrictly,prepare:os,execute:async e=>(await e.action.entity.determine(),!0),settle:async()=>!0},Pe=async(e,t,i=["Attack","Defense"])=>{const a=e.activator.getMonsterZones();return e.action.entity.wasMovedAfter(e.isActivatedAt)?!1:(await e.activator.summon("SpecialSummon",["Effect"],e.action,e.action.entity,i,a,[],!1),!0)},cs=[Dd,xd],ji=[...cs,Pd,Ad],Zr=[kd,...ji],Ga=(e,t,i,a,r,n,s,l,u,c,d)=>{const f={posList:u,cells:c},p={posList:[],cells:[]};return t!==s||!s.isMonster||!s.origin.monsterCategories?f:s.origin.monsterCategories.includes("NormalSummonOnly")?r.includes("NormalSummon")||r.includes("AdvanceSummon")?f:p:s.origin.monsterCategories.includes("SpecialSummon")?s.origin.monsterCategories.includes("FreeReborn")?r.includes("Effect")?f:p:s.isInTrashCell&&!s.origin.monsterCategories.includes("RegularSpecialSummonOnly")?s.info.isRebornable?f:p:r.union($n).length?f:s.origin.monsterCategories.includes("RegularSpecialSummonOnly")?d?f:p:f:f},Ta={},Md=e=>(Ta[e]||(Ta[e]={title:`戦闘破壊耐性(${e})`,playType:"ContinuousEffect",isMandatory:!0,executableCells:["MonsterZone"],executablePeriods:["b1DDmgCalc","b2DDmgCalc"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurnIfFaceup:e,isApplicableTo:(t,i,a)=>a.includes(t.entity)?i!=="Battle"?[]:[t.entity]:[],substitute:async(t,i,a)=>a.includes(t.entity)?i!=="Battle"?[]:t.entity.isEffective?(t.entity.controller.writeInfoLog(`${t.entity.toString()}は１ターンに１度だけ戦闘では破壊されない。`),[t.entity]):[]:[]}),Ta[e]),fa=e=>e.activator.canRelease([e.action.entity])&&e.action.entity.canBeReleased(e.activator,e.action.entity,["ReleaseAsCost"],e.action),pa=async e=>(await e.action.entity.release(["Cost"],e.action.entity,e.activator),{release:[e.action.entity]}),us=e=>({title:"シンクロ召喚",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerChain:1,meetsConditions:t=>!t.activator.isTurnPlayer,canExecute:t=>t.activator.getExtraDeck().cardEntities.filter(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Synchro")}).flatMap(i=>i.actions).filter(i=>i.playType==="SpecialSummon").map(i=>({index:-1,chainNumber:void 0,action:i,activator:t.activator,targetChainBlock:void 0,isActivatedIn:i.entity.cell,costInfo:{},state:"unloaded",dest:void 0,ignoreCosts:!1})).some(i=>i.action.getEnableMaterialPatterns(i).some(a=>{const r=a.map(n=>n.material);return r.every(n=>n.controller===t.activator)&&r.every(n=>n.isOnFieldAsMonsterStrictly)&&r.includes(t.action.entity)})),prepare:C,execute:async t=>{if(t.activator!==t.action.entity.controller||t.activator.getMonstersOnField().filter(s=>s.lvl!==void 0).length<2)return!1;const i=t.activator.getExtraDeck().cardEntities.filter(s=>{var l;return(l=s.status.monsterCategories)==null?void 0:l.includes("Synchro")}).flatMap(s=>s.actions).filter(s=>s.playType==="SpecialSummon").map(s=>({index:-1,chainNumber:void 0,action:s,activator:t.activator,targetChainBlock:void 0,isActivatedIn:s.entity.cell,isActivatedAt:t.isActivatedAt,costInfo:{},state:"unloaded",dest:void 0,ignoreCosts:!1})).filter(s=>s.action.getEnableMaterialPatterns(s).some(l=>{const u=l.map(c=>c.material);return u.every(c=>c.controller===t.activator)&&u.every(c=>c.isOnFieldAsMonsterStrictly)&&u.includes(t.action.entity)})).map(s=>s.action.entity).getDistinct();if(!i.length)return!1;const a=await t.activator.waitSelectEntities(i,1,s=>s.length===1,"シンクロ召喚するモンスターを選択。",!1)??[];if(!a.length)throw new _("想定されない状態",t);const r=a[0].actions.find(s=>s.playType==="SpecialSummon");if(!r)throw new _("想定されない状態",t);const n=r.getClone(s=>{const l=s.map(u=>u.material);return l.every(u=>u.controller===t.activator)&&l.every(u=>u.isOnFieldAsMonsterStrictly)&&l.includes(t.action.entity)});return t.nextActionInfo={action:n,originSeq:n.seq},!0},settle:async()=>!0,...e}),Fd=ri("直接攻撃","Monster",e=>[e],e=>[new fe({title:"直接攻撃",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:(t,i)=>t.isSpawnedBy===i,statusCalculator:()=>({canDirectAttack:!0})})]),wa={title:"融合素材代用",appliableCellTypes:["MonsterZone","ExtraMonsterZone","Hand","Graveyard "],appliableDuelPeriodKeys:ue,faceList:["FaceUp","FaceDown"],canStart:()=>!0,start:async e=>{const t=new fe({title:"融合素材代用",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:(i,a,r)=>(a.isSpawnedBy.isEffective&&(r.fusionSubstitute=!0),r)});return e.statusOperatorBundle.push(t),{targets:[e],seq:t.seq}},finish:async(e,t)=>{t.targets.forEach(i=>i.statusOperatorBundle.removeItem(t.seq))}},Od=(e,t,i,a)=>{if(!e.action.entity.origin.link||e.action.entity.origin.link<i.length)return;let r=i.map(s=>({material:s,cell:s.cell,link:1}));if(e.action.entity.origin.link>i.length){if(i.every(u=>(u.origin.link??1)<2))return;const s=[r];i.filter(u=>(u.origin.link??1)>1).forEach(u=>{[...s].forEach(c=>{s.push([...c.filter(d=>d.material!==u),{material:u,cell:u.cell,link:u.origin.link??1}])})});const l=s.find(u=>u.reduce((c,d)=>c+d.link,0)===e.action.entity.origin.link);if(!l)return;r=l}if(!a(i)||!e.activator.getEnableSummonList(e.activator,"LinkSummon",["Rule","SpecialSummon"],e.action,[{monster:e.action.entity,posList:["Attack"],cells:t}],r,!1).length)return;if(e.activator.getAvailableExtraMonsterZones().length)return r;const n=e.activator.duel.field.getCells("ExtraMonsterZone").map(s=>s.cardEntities[0]).filter(s=>s);if(n.filter(s=>s.controller===e.activator).length&&n.filter(s=>s.controller===e.activator).length===i.filter(s=>s.cell.cellType==="ExtraMonsterZone").length||e.activator.getMonsterZones().flatMap(s=>s.linkArrowSources).some(s=>!i.includes(s))||e.activator.duel.field.canExtraLink(e.action.entity,r))return r};function*Nd(e,t=()=>!0){let i=[...e.activator.getMonstersOnField().filter(r=>r.battlePosition!=="Set"),...e.activator.getHandCell().entities.filter(r=>r.origin.kind==="Monster")];if(i.every(r=>!r.status.allowHandLink)&&(i=i.filter(r=>r.cell.isPlayFieldCell)),i.length<1)return;const a=[...e.activator.getMonsterZones(),...e.activator.duel.field.getAvailableExtraMonsterZones()];yield*i.getAllOnOffPattern().filter(r=>r.some(n=>n.status.allowHandLink)||r.every(n=>n.isOnFieldAsMonsterStrictly)).map(r=>Od(e,a,r,t)??[]).filter(r=>r.length)}const Bd=async(e,t,i)=>{var u;const a=e.action.getEnableMaterialPatterns(e).toArray(),r=a.map(c=>({infos:c,materialSeqList:c.map(d=>d.material.seq).sort()}));let n=a[0].map(c=>c.material);if(a.length>1){const c=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await e.activator.waitSelectEntities(c,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"リンク素材とするモンスターを選択",i);if(console.log(d),!d)return;n=d}const s=n.map(c=>c.seq).sort(),l=(u=r.find(c=>s.length===c.materialSeqList.length&&s.every((d,f)=>d===c.materialSeqList[f])))==null?void 0:u.infos;if(!l)throw new _("想定されない状態",e,n);return await S.sendManyToGraveyardForTheSameReason(n,["LinkMaterial","Cost","Rule","SpecialSummonMaterial"],e.action.entity,e.activator),{summonMaterialInfos:l}},or=(e=()=>!0)=>({title:"リンク召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:t=>Nd(t,e),canPayCosts:t=>t.action.getEnableMaterialPatterns(t).some(i=>i.length),canExecute:t=>!t.ignoreCosts||t.activator.getAvailableExtraMonsterZones().length+t.activator.getAvailableMonsterZones().length>0,payCosts:Bd,prepare:t=>lt(t,"LinkSummon",["Rule","SpecialSummon","LinkSummon"],["Attack"]),execute:ot,settle:async()=>!0});function*Ld(){yield*[{name:"ＬＡＮフォリンクス",validator:e=>e.length===2},{name:"トラフィックゴースト",validator:e=>e.length===3},{name:"天威の鬼神",validator:e=>e.length>1&&e.some(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Link")})},{name:"天威の拳僧",validator:e=>e.every(t=>{var i,a;return((i=t.status.nameTags)==null?void 0:i.includes("天威"))&&!((a=t.status.monsterCategories)!=null&&a.includes("Link"))})},{name:"電影の騎士ガイアセイバー",validator:e=>e.length>1}].map(e=>({name:e.name,actions:[or(e.validator)]}))}const ds=Object.freeze(Object.defineProperty({__proto__:null,default:Ld},Symbol.toStringTag,{value:"Module"}));function*qd(){yield*["サイバー・ドラゴン","六武衆のご隠居","アンノウン・シンクロン"].map(e=>({name:e,actions:[{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:e==="アンノウン・シンクロン"?1:void 0,canExecute:t=>{const i=t.action.entity.field.getMonstersOnFieldStrictly();return i.length>0&&i.every(a=>a.controller!==t.activator)&&ve(t,k,[],["Rule"])},getDests:t=>Ot(t,k,[],["Rule"]),prepare:t=>lt(t,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ot,settle:async()=>!0}]})),yield{name:"ジャンク・フォアード",actions:[{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:e=>e.activator.getMonstersOnField().length===0&&ve(e,k,[],["Rule"]),getDests:e=>Ot(e,k,[],["Rule"]),prepare:e=>lt(e,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ot,settle:async()=>!0}]},yield{name:"ゾンビキャリア",actions:[{title:"①自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:e=>e.activator.getHandCell().cardEntities.length>0,canExecute:e=>ve(e,k,[],["Effect"]),payCosts:async(e,t,i)=>{const a=e.activator.getHandCell().cardEntities,r=await e.activator.waitSelectEntity(a,"デッキトップに戻すカードを一枚選択。",i);if(!r)throw new O(e);return await r.returnToDeck("Top",["Cost"],e.action.entity,e.activator),{returnToDeck:[r]}},prepare:async()=>({selectedEntities:[]}),execute:async e=>await Pe(e)?(e.action.entity.statusOperatorBundle.push(new fe({title:"除外予定",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:(t,i)=>i.isOnFieldAsMonsterStrictly&&i.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})),!0):!1,settle:async()=>!0}]},yield{name:"グローアップ・バルブ",actions:[{title:"①自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerDuel:1,fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:e=>e.activator.getDeckCell().cardEntities.length>0,getDests:e=>Ot(e,k,[],["Effect"]),canExecute:e=>ve(e,k,[],["Effect"]),payCosts:async e=>{const t=e.activator.getDeckCell().cardEntities[0];return await e.activator.getDeckCell().cardEntities[0].sendToGraveyard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[t]}},prepare:async()=>({selectedEntities:[]}),execute:e=>Pe(e),settle:async()=>!0}]},yield{name:"終末の騎士",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon","SpecialSummon","FlipSummon"]},canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.attr.includes("Dark")),prepare:async e=>{const t=["SendToGraveyardFromDeck"];return e.action.entity.moveLog.latestRecord.movedAs.includes("NormalSummon")?t.push("IfNormarlSummonSucceed"):e.action.entity.moveLog.latestRecord.movedAs.includes("SpecialSummon")&&t.push("IfSpecialSummonSucceed"),{selectedEntities:[],chainBlockTags:t}},execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.attr.includes("Dark"));if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送るモンスターを選択",!1);if(!i)throw new O(e);return await i.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]},yield{name:"マスマティシャン",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon"]},fixedTags:["IfNormarlSummonSucceed","SendToGraveyardFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.lvl&&t.lvl<5),prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.lvl&&a.lvl<5);if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送るモンスターを選択",!1);if(!i)throw new O(e);return await i.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"②ドロー",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",needsByBattle:!0,needsByDestory:!0},fixedTags:["Draw"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),!0),settle:async()=>!0}]},yield{name:"伝説の白石",actions:[{title:"①サーチ",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:ue,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure"},fixedTags:["SearchFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.nm==="青眼の白龍")&&e.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=e.activator.getDeckCell().cardEntities.find(i=>i.nm==="青眼の白龍");return t?(await t.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]};for(const e of[{name:"灰流うらら",chainBlockTags:["Draw","SearchFromDeck","SendToGraveyardFromDeck","SpecialSummonFromDeck"]},{name:"屋敷わらし",chainBlockTags:["BanishFromGraveyard","SpecialSummonFromGraveyard","AddToHandFromGraveyard"]}])yield{name:e.name,actions:[{title:"①無効化",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["Hand"],executablePeriods:x,executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,negatePreviousBlock:!0,fixedTags:["NegateCardEffect"],canPayCosts:t=>t.activator.canDiscard([t.action.entity]),canExecute:t=>(t.targetChainBlock&&t.targetChainBlock.chainBlockTags.union(e.chainBlockTags).length>0)??!1,payCosts:async t=>(await t.action.entity.discard(["Cost"],t.action.entity,t.activator),{sendToGraveyard:[t.action.entity]}),prepare:C,execute:async(t,i)=>{const a=i[t.index-1];return a.isNegatedEffectBy=t.action,!0},settle:async()=>!0}]};for(const e of["翻弄するエルフの剣士","ロードランナー","氷結界の修験者"])yield{name:e,actions:[],continuousEffects:[nr("①戦闘破壊耐性","Monster",t=>[t],t=>[Tt.createContinuous("①戦闘破壊耐性",()=>!0,t,()=>!0,["BattleDestroy"],(i,a,r)=>!t.isEffective||(r.atk??0)<1900?!0:(t.duel.log.info(`${t.toString()}は攻撃力1900以上のモンスターとの先頭では破壊されない。`,t.controller),!1))])]}}const fs=Object.freeze(Object.defineProperty({__proto__:null,default:qd},Symbol.toStringTag,{value:"Module"})),Rd=(e,t,i,a,r,n)=>{if(!e.action.entity.origin.level||a.some(c=>!c.lvl)||a.map(c=>c.lvl??0).reduce((c,d)=>c+d,0)!==e.action.entity.origin.level)return;const s=a.filter(c=>{var d;return(d=c.status.monsterCategories)==null?void 0:d.some(f=>f==="Tuner")}),l=a.filter(c=>{var d;return(d=c.status.monsterCategories)==null?void 0:d.every(f=>f!=="Tuner")});if(!r(s)||!n(l))return;const u=[...s.map(c=>({material:c,cell:c.cell,isAsTuner:!0})),...l.map(c=>({material:c,cell:c.cell,isAsTuner:!1}))];if(e.activator.getEnableSummonList(e.activator,"SynchroSummon",["Rule","SpecialSummon"],e.action,[{monster:e.action.entity,posList:t,cells:i}],u,!1).length)return u};function*Hd(e,t=a=>a.length===1,i=a=>a.length>0){let a=[...e.activator.getMonstersOnField().filter(s=>s.battlePosition!=="Set"),...e.activator.getHandCell().cardEntities.filter(s=>s.origin.kind==="Monster")];if(a.every(s=>!s.status.allowHandSynchro)&&(a=a.filter(s=>s.cell.isPlayFieldCell)),a.length<2)return;const r=[...e.activator.getMonsterZones(),...e.activator.duel.field.getCells("ExtraMonsterZone")],n=["Attack","Defense"];yield*a.getAllOnOffPattern().filter(s=>s.some(l=>l.status.allowHandSynchro)||s.every(l=>l.isOnFieldAsMonsterStrictly)).map(s=>Rd(e,n,r,s,t,i)??[]).filter(s=>s.length)}const Zd=async(e,t,i)=>{var u;const a=e.action.getEnableMaterialPatterns(e).toArray(),r=a.map(c=>({infos:c,materialSeqList:c.map(d=>d.material.seq).sort()}));let n=a[0].map(c=>c.material);if(a.length>1){const c=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await e.activator.waitSelectEntities(c,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"シンクロ素材とするモンスターを選択",i);if(!d)return;n=d}const s=n.map(c=>c.seq).sort(),l=(u=r.find(c=>s.length===c.materialSeqList.length&&s.every((d,f)=>d===c.materialSeqList[f])))==null?void 0:u.infos;if(!l)throw new _("想定されない状態",e,n);return await S.sendManyToGraveyardForTheSameReason(n,["SynchroMaterial","Cost","Rule","SpecialSummonMaterial"],e.action.entity,e.activator),{summonMaterialInfos:l}},Te=(e=i=>i.length===1,t=i=>i.length>0)=>({title:"シンクロ召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:i=>Hd(i,e,t),canPayCosts:i=>i.action.getEnableMaterialPatterns(i).some(a=>a.length),canExecute:i=>!i.ignoreCosts||i.activator.getAvailableExtraMonsterZones().length+i.activator.getAvailableMonsterZones().length>0,payCosts:Zd,prepare:i=>lt(i,"SynchroSummon",["Rule","SpecialSummon","SynchroSummon"],["Attack","Defense"]),execute:ot,settle:async()=>!0}),Gr=e=>({title:"射出",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],needsToPayRegularCost:!0,fixedTags:["DamageToOpponent"],canPayCosts:t=>t.activator.getMonstersOnField().filter(e.filter).some(i=>i.canBeReleased(t.activator,t.action.entity,["ReleaseAsCost"],t.action)),payCosts:async(t,i,a)=>{const r=await t.activator.waitSelectEntities(t.activator.getMonstersOnField().filter(e.filter).filter(n=>n.canBeReleased(t.activator,t.action.entity,["ReleaseAsCost"],t.action)),e.qty,n=>n.length===e.qty,"リリースするモンスターを選択。",a);if(r)return t.data=e.calcDamage(t,r),await S.releaseManyForTheSameReason(r,["Cost","Release"],t.action.entity,t.activator),{release:r}},prepare:C,execute:async t=>{if(!qn(t.data))throw new _("値が正しくない。",t,t.data);return t.activator.getOpponentPlayer().effectDamage(t.data,t),!0},settle:async()=>!0,...e.otherActionProps});function*Gd(){const e=[{name:"キャノン・ソルジャー",qty:1,filter:()=>!0,calcDamage:()=>500,otherActionProps:{},otherActions:[]},{name:"アマゾネスの射手",qty:2,filter:()=>!0,calcDamage:()=>1200,otherActionProps:{},otherActions:[]},{name:"メガキャノン・ソルジャー",qty:2,filter:()=>!0,calcDamage:()=>1500,otherActionProps:{},otherActions:[]},{name:"プリーステス・オーム",qty:1,filter:t=>t.attr.includes("Dark"),calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"対空放花",qty:1,filter:t=>t.types.includes("Insect"),calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"人投げトロール",qty:1,filter:t=>{var i,a;return!!((i=t.status.monsterCategories)!=null&&i.includes("Normal")&&!((a=t.status.monsterCategories)!=null&&a.includes("Token")))},calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"墓守の大筒持ち",qty:1,filter:t=>{var i;return!!((i=t.status.nameTags)!=null&&i.includes("墓守")&&t.nm!=="墓守の大筒持ち")},calcDamage:()=>700,otherActionProps:{},otherActions:[]},{name:"カタパルト・ウォリアー",qty:1,filter:t=>{var i;return!!((i=t.status.nameTags)!=null&&i.includes("ジャンク"))},calcDamage:(t,i)=>i.map(a=>a.origin.attack??0).reduce((a,r)=>a+r,0),otherActionProps:{isOnlyNTimesPerTurnIfFaceup:1},otherActions:[Te()]},{name:"ダーク・ダイブ・ボンバー",qty:1,filter:t=>!!(t.lvl&&t.lvl>0),calcDamage:(t,i)=>i.map(a=>a.lvl??0).reduce((a,r)=>a+r,0)*200,otherActionProps:{isOnlyNTimesPerTurn:1,executablePeriods:["main1"]},otherActions:[Te()]}];for(const t of e)yield{name:t.name,actions:[Gr(t),...t.otherActions]};yield{name:"トゥーン・キャノン・ソルジャー",actions:[Gr({qty:1,filter:()=>!0,calcDamage:()=>500,otherActionProps:{}})],immediatelyActions:[{title:"自壊",executableCells:["MonsterZone"],executablePeriods:ue.filter(t=>t!=="b1DBeforeDmgCalc"&&t!=="b2DBeforeDmgCalc"&&t!=="b1DDmgCalc"&&t!=="b2DDmgCalc"),execute:async(t,i,a)=>{i&&a&&a.status.name==="トゥーン・ワールド"&&(i.moveLog.latestRecord.movedAs.every(r=>!r.endsWith("Destroy"))||(t.entity.controller.writeInfoLog(`${i.toString()}が破壊されたため、${t.entity.toString()}は破壊される。`),S.tryMarkForDestroy([t.entity],{activator:t.entity.controller,action:t,selectedEntities:[]}),t.entity.info.isDying=!0,t.entity.info.causeOfDeath=["Effect","Destroy"]))}}],continuousEffects:[ri("召喚酔い","Monster",t=>[t],t=>[new fe({title:"召喚酔い",validateAlive:i=>{const a=i.isSpawnedBy.moveLog.latestArrivalRecord;return!a||!i.duel.clock.isSameTurn(a.movedAt)?!1:a.movedAs.union(["NormalSummon","FlipSummon","SpecialSummon"]).length>0},isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:()=>({canAttack:!1})})]),ri("直接攻撃","Monster",t=>[t],t=>[new fe({title:"直接攻撃",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:i=>i.controller.getEntiteisOnField().filter(a=>a.nm==="トゥーン・ワールド").some(a=>a.face==="FaceUp")?i.controller.getOpponentPlayer().getMonstersOnField().filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Toon")}).some(a=>a.face==="FaceUp")?{}:{canDirectAttack:!0}:{}})])]}}const ps=Object.freeze(Object.defineProperty({__proto__:null,default:Gd},Symbol.toStringTag,{value:"Module"}));function*$d(){yield*["ラージマウス","レインボー・フラワー","レッグル","女王の影武者","人造人間７号"].map(e=>({name:e,actions:[],continuousEffects:[Fd]}))}const gs=Object.freeze(Object.defineProperty({__proto__:null,default:$d},Symbol.toStringTag,{value:"Module"}));function*Ud(){yield*[{name:"キラー・ポテト",filter:e=>e.attr.includes("Dark")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Effect"],executableCells:["Graveyard"]},{name:"キラー・トマト",filter:e=>e.attr.includes("Dark")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"巨大ネズミ",filter:e=>e.attr.includes("Earth")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"グリズリーマザー",filter:e=>e.attr.includes("Water")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"シャインエンジェル",filter:e=>e.attr.includes("Light")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ドラゴンフライ",filter:e=>e.attr.includes("Wind")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ＵＦＯタートル",filter:e=>e.attr.includes("Fire")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"荒野の女戦士",filter:e=>e.attr.includes("Earth")&&e.types.includes("Warrior")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"リトル・トルーパー",filter:e=>e.types.includes("Warrior")&&(e.lvl??9999)<3,qtyList:[1],posList:["Set"],destroyTypes:["Battle"],executableCells:["Graveyard","Banished"]},{name:"破面竜",filter:e=>e.types.includes("Warrior")&&(e.def??9999)<=1500,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"共鳴虫",filter:e=>e.types.includes("Insect")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ピラミッド・タートル",filter:e=>e.types.includes("Zombie")&&(e.def??9999)<=2e3,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ユーフォロイド",filter:e=>e.types.includes("Machine")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ヘル・セキュリティ",filter:e=>e.types.includes("Fiend")&&(e.lvl??9999)===1,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ガスタ・イグル",filter:e=>(e.status.nameTags??[]).includes("ガスタ")&&(e.status.monsterCategories??[]).includes("Tuner"),qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"幻影の魔術士",filter:e=>(e.status.nameTags??[]).includes("ＨＥＲＯ")&&(e.atk??9999)<=1e3,qtyList:[1],posList:["Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ジェネクス・サーチャー",filter:e=>(e.status.nameTags??[]).includes("ジェネクス")&&(e.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"紫炎の足軽",filter:e=>(e.status.nameTags??[]).includes("六武衆")&&(e.lvl??12)<=3,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"スレイブ・エイプ",filter:e=>(e.status.nameTags??[]).includes("剣闘獣")&&(e.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ゼンマイハニー",filter:e=>(e.status.nameTags??[]).includes("ゼンマイ")&&(e.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ＸＸ－セイバー エマーズブレイド",filter:e=>(e.status.nameTags??[]).includes("Ｘ－セイバー")&&(e.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"軍隊竜",filter:e=>e.nm==="軍隊竜",qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"アサルト・ガンドッグ",filter:e=>e.nm==="アサルト・ガンドッグ",qtyList:[1,2,3,4,5],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ハイエナ",filter:e=>e.nm==="ハイエナ",qtyList:[1,2,3,4,5],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]}].map(e=>({name:e.name,actions:[{title:"①リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:e.executableCells,executablePeriods:e.destroyTypes.includes("Effect")?[...x,...H]:["b1DEnd","b2DEnd"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain&&t.action.entity.moveLog.latestRecord.movedAs.includes("Destroy")&&t.action.entity.moveLog.latestRecord.movedAs.union(e.destroyTypes).length>0,canExecute:t=>{const i=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getDeckCell().cardEntities.filter(e.filter).filter(r=>r.kind==="Monster").filter(r=>r.canBeTargetOfEffect(t)).map(r=>({monster:r,posList:e.posList,cells:i})),[],!1).length>0},prepare:async()=>({selectedEntities:[]}),execute:async t=>{const i=t.activator.getDeckCell().cardEntities.filter(e.filter),a=t.activator.getMonsterZones();return t.activator.summonMany(t.activator,"SpecialSummon",["Effect"],t.action,i.map(n=>({monster:n,posList:e.posList,cells:a})),[],!1,e.qtyList.length>1?void 0:e.qtyList[0],n=>e.qtyList.includes(n.length),!1)?(t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]}))}const hs=Object.freeze(Object.defineProperty({__proto__:null,default:Ud},Symbol.toStringTag,{value:"Module"}));function*jd(){yield{name:"死者蘇生",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],...He(t=>t.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Monster").filter(i=>i.canBeTargetOfEffect(t))),settle:async()=>!0},E]};for(const t of[{name:"大嵐",cellTypes:qi,isOnlyEnemies:!1},{name:"ハーピィの羽根帚",cellTypes:qi,isOnlyEnemies:!0},{name:"ブラック・ホール",cellTypes:j,isOnlyEnemies:!1},{name:"サンダー・ボルト",cellTypes:j,isOnlyEnemies:!0}])yield{name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["DestroyOnField"],canExecute:i=>{let a=i.action.entity.field.getCells(...t.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return t.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),a.length>0},prepare:async i=>{let a=i.action.entity.field.getCells(...t.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return t.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),{selectedEntities:[],chainBlockTags:i.action.calcChainBlockTagsForDestroy(i.activator,a)}},execute:async i=>{let a=i.action.entity.field.getCells(...t.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return t.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),await S.tryDestroy(a,i),!0},settle:async()=>!0},E]};yield{name:"ハリケーン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["BounceToHand"],canExecute:t=>t.action.entity.field.getCells("SpellAndTrapZone","FieldSpellZone").flatMap(i=>i.cardEntities).some(i=>i!==t.action.entity),prepare:async()=>({selectedEntities:[]}),execute:async(t,i)=>{const a=i.map(n=>n.action).filter(n=>n.playType==="CardActivation").map(n=>n.entity).filter(n=>n.face==="FaceUp"),r=t.action.entity.field.getCells("SpellAndTrapZone","FieldSpellZone").flatMap(n=>n.cardEntities).filter(n=>!a.includes(n));return await S.returnManyToHandForTheSameReason(r,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},E]};const e=t=>t.activator.duel.field.getWaitingRoomCell().cardEntities.find(i=>i.parent===t.action.entity)??R.createTokenEntity(t.activator,t.action.entity,{name:"セキュリティトークン",actions:ji,staticInfo:{name:"セキュリティトークン",kind:"Monster",monsterCategories:["Normal","Token"],level:4,attack:2e3,defense:2e3,attributes:["Light"],types:["Cyberse"],wikiEncodedName:"%A5%BB%A5%AD%A5%E5%A5%EA%A5%C6%A5%A3%A5%C8%A1%BC%A5%AF%A5%F3"}});yield{name:"ワンタイム・パスコード",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummon","SpecialSummonToken"],canExecute:t=>{const i=e(t),a=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,[{monster:i,posList:["Defense"],cells:a}],[],!1).length>0},prepare:async()=>({selectedEntities:[]}),execute:async t=>{const i=e(t),a=t.activator.getMonsterZones();return!!await t.activator.summon("SpecialSummon",["Effect"],t.action,i,["Defense"],a,[],!1)},settle:async()=>!0},E]},yield{name:"ワン・フォー・ワン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],priorityForNPC:40,canPayCosts:t=>{if(t.activator.getDeckCell().cardEntities.every(i=>(i.lvl??12)>1)){if(t.activator.getHandCell().cardEntities.every(i=>(i.lvl??12)>1)||t.activator.getHandCell().cardEntities.filter(i=>i.kind==="Monster").length<2)return!1}else if(t.activator.getHandCell().cardEntities.filter(i=>i.kind==="Monster").length===0)return!1;return!0},canExecute:t=>{let i=[...t.activator.getDeckCell().cardEntities.filter(s=>(s.lvl??12)===1),...t.activator.getHandCell().cardEntities.filter(s=>(s.lvl??12)===1)];const a=t.activator.getHandCell().cardEntities;(a.length<2||!t.ignoreCosts)&&(i=i.filter(s=>!a.includes(s)));const r=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,i.map(s=>({monster:s,posList:k,cells:r})),[],!1).length>0},payCosts:async(t,i,a)=>{const r=[...t.activator.getDeckCell().cardEntities.filter(c=>(c.lvl??12)===1),...t.activator.getHandCell().cardEntities.filter(c=>(c.lvl??12)===1)],n=t.activator.getMonsterZones(),s=t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,r.map(c=>({monster:c,posList:k,cells:n})),[],!1);let l=t.activator.getHandCell().cardEntities.filter(c=>c.kind==="Monster");s.length===1&&(l=l.filter(c=>!s.map(d=>d.monster).includes(c)));const u=await t.activator.waitSelectEntity(l,"墓地へ送るモンスターを選択",a);if(!u)throw new O(t);return await u.sendToGraveyard(["Cost"],t.action.entity,t.activator),{sendToGraveyard:[u]}},prepare:async()=>({selectedEntities:[]}),execute:async t=>{const i=[...t.activator.getDeckCell().cardEntities.filter(n=>n.lvl===1),...t.activator.getHandCell().cardEntities.filter(n=>n.lvl===1)],a=t.activator.getMonsterZones();return await t.activator.summonOne(t.activator,"SpecialSummon",["Effect"],t.action,i.map(n=>({monster:n,posList:k,cells:a})),[],!1,!1)?(t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},E]},yield{name:"封印の黄金櫃",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["BanishFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(i=>t.activator.canTryBanish(i,"BanishAsEffect",t.action)),prepare:async()=>({selectedEntities:[]}),execute:async t=>{const i=t.activator.getDeckCell().cardEntities.filter(n=>t.activator.canTryBanish(n,"BanishAsEffect",t.action)),a=await t.activator.waitSelectEntity(i,"除外するカードを選択。",!1);if(!a)throw new O(t);return(await S.tryBanish("BanishAsEffect",[a],t)).forEach(n=>n.counterHolder.removeAll("GoldSarcophagus")),!0},settle:async()=>!0},gd("回収カウント進行",["stanby"],t=>{t.activator.isTurnPlayer&&t.action.entity.field.getCells("Banished").flatMap(i=>i.cardEntities).filter(i=>i.moveLog.latestRecord.movedBy===t.action.entity).filter(i=>i.moveLog.latestRecord.actionOwner===t.activator).forEach(i=>{i.counterHolder.add("GoldSarcophagus",1,t.action.entity);const a=i.counterHolder.getQty("GoldSarcophagus",t.action.entity);a<3&&t.activator.duel.log.info(`${i.toString()}のターンカウント：${a-1}⇒${a}`)})}),{title:"回収",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["stanby"],executableDuelistTypes:Gt,canExecute:t=>t.activator.isTurnPlayer&&t.action.entity.field.getCells("Banished").flatMap(i=>i.cardEntities).filter(i=>i.moveLog.latestRecord.movedBy===t.action.entity).filter(i=>i.moveLog.latestRecord.actionOwner===t.activator).some(i=>i.counterHolder.getQty("GoldSarcophagus")===2),prepare:C,execute:async t=>{const i=t.action.entity.field.getCells("Banished").flatMap(r=>r.cardEntities).filter(r=>r.moveLog.latestRecord.movedBy===t.action.entity).filter(r=>r.moveLog.latestRecord.actionOwner===t.activator).filter(r=>r.counterHolder.getQty("GoldSarcophagus")===2);if(!i.length)throw new _("想定されない状態",t);let a=i[0];if(i.length>1){const r=await t.activator.waitSelectEntity(i,"回収するカードを選択。",!1);if(!r)throw new O(t);a=r}return await a.addToHand(["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},E]},yield{name:"魔の試着部屋",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],canPayCosts:t=>t.activator.lp>=800,canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getDeckCell().cardEntities.filter(i=>i.kind==="Monster").filter(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Normal")}).filter(i=>(i.lvl??12)<4).map(i=>({monster:i,posList:k,cells:t.activator.getMonsterZones()})),[],!1).length>0,payCosts:(t,i)=>$t(t,i,800),prepare:async()=>({selectedEntities:[]}),execute:async t=>{if(t.activator.getDeckCell().cardEntities.length<4)return!1;const i=await S.excavateManyFromDeck(t.activator,4,["Effect"],t.action.entity,t.activator),a=i.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Normal")}).filter(r=>(r.lvl??12)<4);if(a.length){const r=t.activator.getMonsterZones(),n=a.length>r.length?r.length:a.length;await t.activator.summonMany(t.activator,"SpecialSummon",["Effect","Excavate"],t.action,a.map(s=>({monster:s,cells:r,posList:k})),[],!1,n,s=>s.length===n,!1)}return await S.sendManyToGraveyardForTheSameReason(a.filter(r=>!r.isOnFieldAsMonsterStrictly),["Effect","Excavate"],t.action.entity,t.activator),await S.returnManyToDeckForTheSameReason("Random",i.filter(r=>r.cell.cellType==="Deck"),["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},E]}}const ys=Object.freeze(Object.defineProperty({__proto__:null,default:jd},Symbol.toStringTag,{value:"Module"}));function*zd(){yield{name:"強欲な壺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:20,fixedTags:["Draw"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>1&&e.activator.canDraw&&e.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async e=>(await e.activator.draw(2,e.action.entity,e.activator),!0),settle:async()=>!0},E]},yield{name:"貪欲な壺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","ReturnToDeckFromGraveyard"],priorityForNPC:30,canExecute:e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>t.canBeTargetOfEffect(e)).length>4&&e.activator.canDraw&&e.activator.canAddToHandFromDeck,prepare:async e=>{const t=await e.activator.waitSelectEntities(e.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Monster").filter(i=>i.canBeTargetOfEffect(e)),5,i=>i.length===5,"デッキに戻すモンスターを選択。",!1);if(t)return{selectedEntities:t}},execute:async e=>e.selectedEntities.some(t=>t.wasMovedAtCurrentChain)?!1:(await S.returnManyToDeckForTheSameReason("Random",e.selectedEntities,["Effect"],e.action.entity,e.activator),await e.activator.draw(2,e.action.entity,e.activator),!0),settle:async()=>!0},E]},yield{name:"天使の施し",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],priorityForNPC:30,canExecute:e=>e.activator.getDeckCell().cardEntities.length>2&&e.activator.canDraw&&e.activator.canAddToHandFromDeck&&e.activator.status.canDiscardAsEffect,prepare:async()=>({selectedEntities:[]}),execute:async e=>(await e.activator.draw(3,e.action.entity,e.activator),await e.activator.discard(2,"Effect",()=>!0,e.action.entity,e.activator),!0),settle:async()=>!0},E]},yield{name:"成金ゴブリン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],priorityForNPC:20,canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw&&e.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),e.action.entity.field.duel.clock.incrementProcSeq(),e.activator.getOpponentPlayer().heal(1e3,e.action.entity),!0),settle:async()=>!0},E]},yield{name:"手札抹殺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>=e.activator.getHandCell().cardEntities.filter(t=>t.seq!==e.action.entity.seq).length&&e.activator.canDraw&&e.activator.canAddToHandFromDeck&&e.activator.getOpponentPlayer().canDraw&&e.activator.getOpponentPlayer().canAddToHandFromDeck&&e.action.entity.field.getAllCells().filter(t=>t.cellType==="Hand").flatMap(t=>t.cardEntities).some(t=>t.seq!==e.action.entity.seq),prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=e.activator.getHandCell().cardEntities.length,i=e.activator.getOpponentPlayer().getHandCell().cardEntities.length;return await S.sendManyToGraveyardForTheSameReason(e.action.entity.field.getCells("Hand").flatMap(a=>a.cardEntities),["Effect","Discard"],e.action.entity,e.activator),e.activator.duel.clock.incrementProcSeq(),await S.drawAtSameTime(e.activator,e.action.entity,t,i),!0},settle:async()=>!0},E]},yield{name:"一時休戦",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw&&e.activator.getOpponentPlayer().getDeckCell().cardEntities.length>0&&e.activator.getOpponentPlayer().canDraw,prepare:C,execute:async e=>(await S.drawAtSameTime(e.activator,e.action.entity,1,1),[e.activator,e.activator.getOpponentPlayer()].forEach(t=>t.entity.damageFilterBundle.push(new Rn({title:"ダメージ無効",validateAlive:i=>i.duel.clock.turn-i.isSpawnedAt.turn<2,isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:()=>!0,calcType:"zero_typeA",filter:(i,a,r,n)=>(r.writeInfoLog(`${n.profile.name}は${i.isSpawnedBy}の効果でダメージを受けない。`),{zero_typeA:!0})}))),!0),settle:async()=>!0},E]},yield{name:"打ち出の小槌",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:e=>e.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=e.activator.getHandCell().cardEntities;if(!t.length)return!1;let i=[...t];if(i.length>1&&!await e.activator.waitYesNo("全ての手札を入れ替える？")){const a=await e.activator.waitSelectEntities(t,void 0,r=>r.length>0,"デッキに戻すカードを選択。",!1);if(!a)throw new O(e);i=a}return await S.returnManyToDeckForTheSameReason("Random",i,["Effect"],e.action.entity,e.activator),e.activator.duel.clock.incrementProcSeq(),await e.activator.draw(i.length,e.action.entity,e.activator),!0},settle:async()=>!0},E]}}const vs=Object.freeze(Object.defineProperty({__proto__:null,default:zd},Symbol.toStringTag,{value:"Module"}));function*Vd(){yield{name:"おろかな埋葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.kind==="Monster"),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster");if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送るモンスターを選択",!1);if(!i)throw new O(e);return await i.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},E]},yield{name:"おろかな副葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.kind!=="Monster"),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.kind!=="Monster");if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送る魔法罠を選択",!1);if(!i)throw new O(e);return await i.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},E]},yield{name:"苦渋の選択",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck","SearchFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>4,prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities;if(t.length<5)return!1;const i=await e.activator.waitSelectEntities(t,5,r=>r.length===5,"相手に見せるカードを選択。",!1);if(!i)throw new O(e);const a=await e.activator.getOpponentPlayer().waitSelectEntity(i,"手札に加えさせるカードを選択。",!1);if(!a)throw new O(e,i);return e.activator.writeInfoLog(`${e.activator.getOpponentPlayer().name}は${a.toString()}を選択。`),await a.addToHand(["Effect"],e.action.entity,e.activator),await S.sendManyToGraveyardForTheSameReason(i.filter(r=>r!==a),["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},E]};for(const e of["モンスターゲート","名推理"]){let t={title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck","SendToGraveyardFromDeck","SpecialSummon"],canExecute:i=>i.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").some(a=>{var r;return!((r=a.status.monsterCategories)!=null&&r.includes("SpecialSummon"))}),prepare:C,execute:async i=>{var n,s;if(!i.activator.getDeckCell().cardEntities.length||!i.activator.getAvailableMonsterZones().length)return!1;let a=-1;if(e==="名推理"){const l=await i.activator.getOpponentPlayer().waitSelectNumberFromRange("レベルを選択",1,12,!1);if(l===void 0)throw new O(i);a=l,i.activator.writeInfoLog(`${i.activator.getOpponentPlayer().name}は${a}を選択。`)}const r=[...i.activator.getDeckCell().cardEntities];for(const l of i.activator.getDeckCell().cardEntities){if(await l.excavate(["Effect"],i.action.entity,i.activator),l.kind!=="Monster"){await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator);continue}if((n=l.status.monsterCategories)!=null&&n.includes("SpecialSummon")){await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator);continue}return(s=l.status.monsterCategories)!=null&&s.includes("NormalSummonOnly")?(await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator),i.activator.writeInfoLog(`${l.toString()}は通常召喚可能だが特殊召喚できないため、墓地に送られた。`),!1):l.lvl===a?(await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator),i.activator.writeInfoLog(`${l.toString()}のレベルは${a}のため、墓地に送られた。`),!1):!!await i.activator.summon("SpecialSummon",["Effect","Excavate"],i.action,l,k,i.activator.getAvailableMonsterZones(),[],!1)}return i.activator.writeInfoLog("通常召喚可能なモンスターがめくられなかったため、全てのカードをデッキに戻す。"),await S.returnManyToDeckForTheSameReason("Random",r,["Effect"],i.action.entity,i.activator),!1},settle:async()=>!0};e==="モンスターゲート"&&(t={...t,...fd()}),yield{name:e,actions:[t,E]}}}const ms=Object.freeze(Object.defineProperty({__proto__:null,default:Vd},Symbol.toStringTag,{value:"Module"}));function*Wd(){const e=[{name:"魔法石の採掘",filter:()=>!0,discard:!0},{name:"魔法再生",filter:t=>t.kind==="Spell",discard:!1}];for(const t of e)yield{name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["AddToHandFromGraveyard"],canPayCosts:i=>i.activator.getHandCell().cardEntities.filter(t.filter).length>1,payCosts:async(i,a,r)=>{const n=i.activator.getHandCell().cardEntities.filter(t.filter),s=await i.activator.waitSelectEntities(n,2,l=>l.length===2,"コストとするカードを選択",r);if(s)return t.discard?(await S.discardManyForTheSameReason(s,["Cost"],i.action.entity,i.activator),{discard:s}):(await S.sendManyToGraveyardForTheSameReason(s,["Cost"],i.action.entity,i.activator),{sendToGraveyard:s})},...De(i=>i.activator.getGraveyard().cardEntities.filter(a=>a.kind==="Spell"),{message:"手札に加える魔法カードを選択"}),execute:async i=>{if(!i.selectedEntities.length)throw new _("想定されない状態",i);const a=i.selectedEntities[0];return a.wasMovedAfter(i.isActivatedAt)?!1:(await a.addToHand(["Effect"],i.action.entity,i.activator),!0)},settle:async()=>!0},E]}}const Ss=Object.freeze(Object.defineProperty({__proto__:null,default:Wd},Symbol.toStringTag,{value:"Module"}));function*Qd(){for(const e of[{name:"トゲトゲ神の殺虫剤",type:"Insect"},{name:"戦士抹殺",type:"Warrior"},{name:"酸の嵐",type:"Machine"},{name:"永遠の渇水",type:"Fish"},{name:"神の息吹",type:"Rock"},{name:"魔女狩り",type:"Spellcaster"},{name:"悪魔払い",type:"Fiend"}])yield{name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:t=>t.action.entity.field.getMonstersOnFieldStrictly().some(i=>i.types.includes(e.type)),prepare:async t=>{const i=t.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.types.includes(e.type));return{selectedEntities:[],chainBlockTags:t.action.calcChainBlockTagsForDestroy(t.activator,i)}},execute:async t=>{const i=t.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.types.includes(e.type));return await S.tryDestroy(i,t),!0},settle:async()=>!0},E]};yield*[{name:"増援",filter:e=>e.origin.kind==="Monster"&&e.types.includes("Warrior")&&(e.origin.level??5)<5},{name:"化石調査",filter:e=>e.origin.kind==="Monster"&&e.types.includes("Dinosaur")&&(e.origin.level??6)<6},{name:"Ｅ－エマージェンシーコール",filter:e=>e.origin.kind==="Monster"&&(e.origin.nameTags??[]).includes("Ｅ・ＨＥＲＯ")},{name:"召集の聖刻印",filter:e=>e.origin.kind==="Monster"&&(e.origin.nameTags??[]).includes("聖刻")},{name:"召喚師のスキル",filter:e=>e.origin.kind==="Monster"&&(e.origin.monsterCategories??[]).includes("Normal")&&(e.origin.level??4)>4},{name:"トゥーンのもくじ",filter:e=>(e.origin.nameTags??[]).includes("トゥーン")},{name:"融合賢者",filter:e=>e.origin.name==="融合"},{name:"虹の架け橋",filter:e=>e.origin.kind!=="Monster"&&(e.origin.nameTags??[]).includes("宝玉")},{name:"紫炎の狼煙",filter:e=>e.origin.kind==="Monster"&&(e.origin.nameTags??[]).includes("六武衆")&&(e.origin.level??4)<4},{name:"テラ・フォーミング",filter:e=>e.origin.kind==="Spell"&&e.origin.spellCategory==="Field"},{name:"コール・リゾネーター",filter:e=>e.origin.kind==="Monster"&&(e.origin.nameTags??[]).includes("リゾネーター")}].map(e=>({name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],priorityForNPC:40,canExecute:t=>t.activator.getDeckCell().cardEntities.some(e.filter)&&t.activator.canAddToHandFromDeck,prepare:C,execute:async t=>{const i=t.activator.getDeckCell().cardEntities.filter(e.filter);if(!i.length)return!1;const a=await t.activator.waitSelectEntity(i,"手札に加えるカードを選択",!1);return a?(await a.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},E]})),yield*[{name:"戦士の生還",filter:e=>e.kind==="Monster"&&e.types.includes("Warrior"),qty:1},{name:"ダーク・バースト",filter:e=>e.kind==="Monster"&&e.attr.includes("Dark")&&(e.atk??9999)<=1500,qty:1},{name:"悪夢再び",filter:e=>e.kind==="Monster"&&e.attr.includes("Dark")&&(e.def??9999)===0,qty:2},{name:"サルベージ",filter:e=>e.kind==="Monster"&&e.attr.includes("Water")&&(e.atk??9999)<=1500,qty:2},{name:"バッテリーリサイクル",filter:e=>e.kind==="Monster"&&e.types.includes("Thunder")&&(e.atk??9999)<=1500,qty:2},{name:"闇の量産工場",filter:e=>e.kind==="Monster"&&(e.status.monsterCategories??[]).includes("Normal"),qty:2}].map(e=>({name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,fixedTags:["AddToHandFromGraveyard"],priorityForNPC:40,canExecute:t=>t.activator.getGraveyard().cardEntities.filter(e.filter).length>=e.qty,prepare:C,execute:async t=>{const i=t.activator.getGraveyard().cardEntities.filter(e.filter);if(i.length===0)return!1;const a=await t.activator.waitSelectEntities(i,e.qty,r=>r.length===e.qty,"手札に加えるカードを選択",!1);for(const r of a??[])await r.addToHand(["Effect"],t.action.entity,t.activator);return!0},settle:async()=>!0},E]})),yield*[{name:"トレード・イン",filter:e=>e.kind==="Monster"&&(e.lvl??0)===8},{name:"調和の宝札",filter:e=>e.kind==="Monster"&&(e.origin.monsterCategories??[]).includes("Tuner")&&e.types.includes("Dragon")&&(e.atk??9999)<=1e3},{name:"デステニー・ドロー",filter:e=>e.kind==="Monster"&&(e.origin.nameTags??[]).includes("Ｄ－ＨＥＲＯ")}].map(e=>({name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],priorityForNPC:40,canPayCosts:(...t)=>Ut(...t,e.filter),canExecute:t=>t.activator.getDeckCell().cardEntities.length>1,payCosts:async(...t)=>jt(...t,e.filter),prepare:async()=>({selectedEntities:[]}),execute:async t=>(await t.activator.draw(2,t.action.entity,t.activator),!0),settle:async()=>!0},E]})),yield*[{name:"火の粉",calcHeal:()=>[0,-200]},{name:"雷鳴",calcHeal:()=>[0,-300]},{name:"ファイヤー・ボール",calcHeal:()=>[0,-500]},{name:"火あぶりの刑",calcHeal:()=>[0,-600]},{name:"昼夜の大火事",calcHeal:()=>[0,-800]},{name:"火炎地獄",calcHeal:()=>[-500,-1e3]},{name:"盗人ゴブリン",calcHeal:()=>[500,-500]},{name:"ブルー・ポーション",calcHeal:()=>[400,0]},{name:"レッド・ポーション",calcHeal:()=>[500,0]},{name:"ゴブリンの秘薬",calcHeal:()=>[600,0]},{name:"天使の生き血",calcHeal:()=>[800,0]},{name:"治療の神 ディアン・ケト",calcHeal:()=>[1e3,0]},{name:"恵みの雨",calcHeal:()=>[1e3,1e3]}].map(e=>({name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],prepare:async()=>{const[t,i]=e.calcHeal(),a=[];return t<0&&a.push("DamageToSelf"),i<0&&a.push("DamageToOpponent"),{selectedEntities:[],chainBlockTags:a}},execute:async t=>{const[i,a]=e.calcHeal();return a>0?t.activator.getOpponentPlayer().heal(a,t.action.entity):a<0&&t.activator.getOpponentPlayer().effectDamage(Math.abs(a),t),i>0?t.activator.heal(i,t.action.entity):i<0&&t.activator.effectDamage(Math.abs(i),t),!0},settle:async()=>!0},E]}))}const _s=Object.freeze(Object.defineProperty({__proto__:null,default:Qd},Symbol.toStringTag,{value:"Module"}));function*Xd(){yield{name:"強欲な瓶",actions:[E,{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:e=>e.activator.getDeckCell().cardEntities.length>1&&e.activator.canDraw&&e.activator.canAddToHandFromDeck,prepare:C,execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),!0),settle:async()=>!0}]},yield{name:"戦線復帰",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>t.canBeTargetOfEffect(e)),{posList:["Defense"]}),settle:async()=>!0},E]},yield{name:"サンダー・ブレイク",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],canPayCosts:Ut,payCosts:jt,...De((e,t,i)=>e.action.entity.field.getCardsOnFieldStrictly().filter(a=>a!==e.action.entity).filter(a=>a.canBeTargetOfEffect(e)).filter(a=>{if(!i)return!0;const r=Ui.flatMap(n=>i.costInfo[n]??[]);return r.push(...r.flatMap(n=>n.info.equipEntities)),!r.includes(a)}),{message:"対象とするカードを選択。",do:"Destroy"}),execute:async e=>e.selectedEntities.every(t=>!t.isOnField)?!1:(await S.tryDestroy(e.selectedEntities,e),!0),settle:async()=>!0},E]},yield{name:"ギブ＆テイク",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],hasToTargetCards:!0,fixedTags:["SpecialSummonFromGraveyard"],canExecute:(t,i,a)=>{const r=t.activator.getOpponentPlayer().getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getGraveyard().cardEntities.filter(s=>s.lvl).filter(s=>s.canBeTargetOfEffect(t)).map(s=>({monster:s,posList:["Defense"],cells:r})),[],!1).length?t.activator.getMonstersOnField().filter(s=>s.lvl).filter(s=>{if(!a)return!0;const l=Ui.flatMap(u=>a.costInfo[u]??[]);return l.push(...l.flatMap(u=>u.info.equipEntities)),!l.includes(s)}).some(s=>s.canBeTargetOfEffect(t)):!1},prepare:async(t,i,a)=>{const r=await t.activator.waitSelectEntity(t.activator.getMonstersOnField().filter(l=>l.lvl),"レベルを上げるモンスターを選択。",a);if(!r)return;const n=await pd(t,t.activator.getGraveyard().cardEntities.filter(l=>l.lvl).filter(l=>l.canBeTargetOfEffect(t)),["Defense"]),s=[r,...n.selectedEntities];return t.data={give:n.selectedEntities[0],take:r},{...n,selectedEntities:s}},execute:async t=>{if(!t.data)throw new _("正しくない形でギブ＆テイクの効果処理を実行しようとした。");const{give:i,take:a}=t.data;if(!a.isOnFieldAsMonsterStrictly||!await Jn(t,[i],{cells:t.activator.getOpponentPlayer().getMonsterZones(),posList:["Defense"]}))return!1;const n=i.lvl??0;return a.numericOprsBundle.push(ne.createLingeringAddition("ギブ＆テイク",s=>s.duel.clock.isSameTurn(s.isSpawnedAt),t.action.entity,t.action,"level",(s,l,u)=>u+n)),!0},settle:async()=>!0},E]}}const Cs=Object.freeze(Object.defineProperty({__proto__:null,default:Xd},Symbol.toStringTag,{value:"Module"}));function*Kd(){for(const e of["炸裂装甲","次元幽閉"])yield{name:e,actions:[E,{title:"発動",playType:"CardActivation",spellSpeed:"Quick",isMandatory:!1,executableCells:["SpellAndTrapZone"],executablePeriods:["b1Battle","b2Battle"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,isNoticedForcibly:!0,meetsConditions:(t,i)=>i.some(a=>a.action.playType==="DeclareAttack"),canExecute:t=>{if(t.activator.isTurnPlayer)return!1;const i=t.activator.duel.attackingMonster;return!(!i||!i.canBeTargetOfEffect(t)||!i.isOnFieldAsMonsterStrictly||e==="次元幽閉"&&!t.activator.canTryBanish(i,"BanishAsEffect",t.action))},prepare:async t=>{const i=t.activator.duel.attackingMonster;if(!i)throw new _("想定されない状態",t,i);const a=e==="炸裂装甲"?t.action.calcChainBlockTagsForDestroy(t.activator,[i]):["BanishFromField"];return{selectedEntities:[i],chainBlockTags:a}},execute:async t=>(e==="炸裂装甲"?await S.tryDestroy(t.selectedEntities,t):await S.tryBanish("BanishAsEffect",t.selectedEntities,t),!0),settle:async()=>!0}]}}const Ts=Object.freeze(Object.defineProperty({__proto__:null,default:Kd},Symbol.toStringTag,{value:"Module"}));function*Yd(){yield{name:"ご隠居の猛毒薬",actions:[E,{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],prepare:async(e,t,i)=>{const a=[{seq:0,text:"●自分は１２００ＬＰ回復する。",tags:[]},{seq:1,text:"●相手に８００ダメージを与える。",tags:["DamageToOpponent"]}],r=await e.activator.waitSelectText(a,"使用する効果を選択",i);if(r!==void 0)return{selectedEntities:[],chainBlockTags:r.tags}},execute:async e=>{if(e.data===0)e.activator.heal(1200,e.action.entity);else if(e.data===1)e.activator.getOpponentPlayer().effectDamage(800,e);else throw new _("値が正しくない。",e,e.data);return!0},settle:async()=>!0}]},yield{name:"月の書",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],...De(e=>e.action.entity.field.getMonstersOnFieldStrictly().filter(t=>t.canBeTargetOfEffect(e)).filter(t=>t.canBeSet).filter(t=>t.face==="FaceUp"),{message:"対象とするモンスターを選択。"}),execute:async e=>{const t=e.selectedEntities[0];return!t.isOnFieldAsMonsterStrictly||t.battlePosition==="Set"?!1:t.canBeEffected(e.activator,e.action.entity,e.action)?(await t.setBattlePosition("Set",["Effect"],e.action.entity,e.activator),!0):(e.activator.duel.log.info(`${t.toString()}は${e.action.entity.toString()}の効果を受けない。`),!1)},settle:async()=>!0},E]},yield{name:"突進",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],...De(e=>e.action.entity.field.getMonstersOnFieldStrictly().filter(t=>t.face==="FaceUp").filter(t=>t.canBeTargetOfEffect(e)),{message:"対象とするモンスターを選択。"}),execute:async e=>{const t=e.selectedEntities[0];return!t.isOnFieldAsMonsterStrictly||t.battlePosition==="Set"?!1:t.canBeEffected(e.activator,e.action.entity,e.action)?(t.numericOprsBundle.push(ne.createLingeringAddition("攻撃力上昇",i=>i.duel.clock.isSameTurn(i.isSpawnedAt),e.action.entity,e.action,"attack",(i,a,r)=>r+700)),!0):(e.activator.duel.log.info(`${t.toString()}は${e.action.entity.toString()}の効果を受けない。`),!1)},settle:async()=>!0},E]},yield{name:"手札断殺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:e=>{for(const t of[e.activator,e.activator.getOpponentPlayer()])if(!t.canDraw||t.getHandCell().cardEntities.filter(i=>i.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsEffect",e.action)).filter(i=>i!==e.action.entity).length<2||t.getDeckCell().cardEntities.length<2)return!1;return!0},prepare:C,execute:async e=>{if(e.activator.getHandCell().cardEntities.length<2||e.activator.getOpponentPlayer().getHandCell().cardEntities.length<2)return!1;let t=0;for(const i of[e.activator,e.activator.getOpponentPlayer()]){const a=await i.waitSelectEntities(i.getHandCell().cardEntities,2,n=>n.length===2,"墓地に送るカードを２枚選択。",!1);if(!a)throw new O(e,i);const r=await S.sendManyToGraveyardForTheSameReason(a,["Effect"],e.action.entity,e.activator);t+=r.length}return t?(e.activator.duel.clock.incrementProcSeq(),await S.drawAtSameTime(e.activator,e.action.entity,2,2),!0):!1},settle:async()=>!0},E]},yield{name:"リロード",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["Draw"],hasToTargetCards:!0,canExecute:e=>e.activator.canDraw,prepare:C,execute:async e=>{const t=e.activator.getHandCell().cardEntities;return t.length?(await S.returnManyToDeckForTheSameReason("Random",t,["Effect"],e.action.entity,e.activator),e.activator.duel.clock.incrementProcSeq(),await e.activator.draw(t.length,e.action.entity,e.activator),!0):!1},settle:async()=>!0},E]}}const ws=Object.freeze(Object.defineProperty({__proto__:null,default:Yd},Symbol.toStringTag,{value:"Module"})),Jd=(e,t,i,a,r,n,s)=>{if(!e.lvl||r.some(d=>!d.lvl))return;const l=r.map(d=>d.lvl??0).reduce((d,f)=>d+f,0),u=Zi(...r.map(d=>d.lvl??0));if(l<e.lvl||s==="Equal"&&l!==e.lvl||s==="OrMore"&&l-u>=e.lvl||!n(r))return;const c=[...r.map(d=>({material:d,cell:d.cell}))];if(t.activator.getEnableSummonList(t.activator,"RitualSummon",["Effect","SpecialSummon"],t.action,[{monster:t.action.entity,posList:i,cells:a}],c,!1).length)return c};function*bs(e,...t){const[i,a,r,n,s]=t,l=e.activator.getCells(...i).flatMap(f=>f.cardEntities).filter(f=>{var p;return(p=f.status.monsterCategories)==null?void 0:p.includes("Ritual")}).filter(a);if(!l.length)return;const u=e.activator.getCells(...r).flatMap(f=>f.cardEntities).filter(f=>f.lvl).filter(f=>f.canBeReleased(e.activator,e.action.entity,["RitualMaterial","ReleaseAsEffect"],e.action));if(!u.length)return;const c=e.activator.getMonsterZones(),d=["Attack","Defense"];for(const f of l)for(const p of u.filter(h=>h!==f).getAllOnOffPattern()){const h=Jd(f,e,d,c,p,n,s);h&&(yield{monster:f,materialInfos:h})}}const Id=async(e,...t)=>{var d,f;const i=bs(e,...t).toArray(),a=i.map(p=>p.monster).getDistinct(),r=await e.activator.waitSelectEntity(a,"儀式召喚するモンスターを選択。");if(!r)return!1;const n=i.filter(p=>p.monster===r).map(p=>p.materialInfos),s=n.map(p=>({infos:p,materialSeqList:p.map(h=>h.material.seq).sort()}));let l=n[0].map(p=>p.material);if(n.length>1){const p=n.flatMap(h=>h.map(y=>y.material)).getDistinct();l=await e.activator.waitSelectEntities(p,void 0,h=>{const y=h.map(v=>v.seq).sort();return s.some(v=>y.length===v.materialSeqList.length&&y.every((g,m)=>g===v.materialSeqList[m]))},"リリースするモンスターを選択",!1)??l}const u=l.map(p=>p.seq).sort(),c=(d=s.find(p=>u.length===p.materialSeqList.length&&u.every((h,y)=>h===p.materialSeqList[y])))==null?void 0:d.infos;if(!c)throw new _("想定されない状態",e,l);return await S.releaseManyForTheSameReason(l,["RitualMaterial","Effect","SpecialSummonMaterial"],e.action.entity,e.activator),await e.activator.summon("RitualSummon",["Effect","SpecialSummon"],e.action,r,k,e.activator.getMonsterZones(),c,!1),r.info.isRebornable=!((f=r.origin.monsterCategories)!=null&&f.includes("RegularSpecialSummonOnly")),c.map(p=>p.material).forEach(p=>p.onUsedAsMaterial(e,e.action.entity)),!0},ef=(e,t,i,a,r)=>({canExecute:n=>bs(n,e,t,i,a,r).some(s=>s.materialInfos.length),prepare:async()=>{const n=[];return e.includes("Hand")&&n.push("SpecialSummonFromHand"),e.includes("Graveyard")&&n.push("SpecialSummonFromGraveyard"),e.includes("ExtraDeck")&&n.push("SpecialSummonFromExtraDeck"),e.includes("Banished")&&n.push("SpecialSummonFromBanished"),e.includes("Deck")&&n.push("SpecialSummonFromDeck"),{selectedEntities:[],chainBlockTags:n}},execute:n=>Id(n,e,t,i,a,r),settle:async()=>!0});function*tf(){for(const e of[{spellName:"カオスの儀式",monsterName:"カオス・ソルジャー"},{spellName:"仮面魔獣の儀式",monsterName:"仮面魔獣マスクド・ヘルレイザー"},{spellName:"亀の誓い",monsterName:"クラブ・タートル"},{spellName:"ジャベリンビートルの契約",monsterName:"ジャベリンビートル"},{spellName:"ゼラの儀式",monsterName:"ゼラ"},{spellName:"カオス－黒魔術の儀式",monsterName:"マジシャン・オブ・ブラックカオス"},{spellName:"ガルマソードの誓い",monsterName:"ガルマソード"},{spellName:"ライオンの儀式",monsterName:"スーパー・ウォー・ライオン"},{spellName:"チャクラの復活",monsterName:"チャクラ"},{spellName:"要塞クジラの誓い",monsterName:"要塞クジラ"},{spellName:"ローの祈り",monsterName:"ローガーディアン"},{spellName:"スカルライダーの復活",monsterName:"スカルライダー"},{spellName:"踊りによる誘発",monsterName:"ダンシング・ソルジャー"},{spellName:"悪魔鏡の儀式",monsterName:"デビルズ・ミラー"},{spellName:"ハンバーガーのレシピ",monsterName:"ハングリーバーガー"}])yield{name:e.spellName,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...ef(["Hand"],t=>t.nm===e.monsterName,["Hand","MonsterZone","ExtraMonsterZone"],()=>!0,"OrMore")},E]}}const Es=Object.freeze(Object.defineProperty({__proto__:null,default:tf},Symbol.toStringTag,{value:"Module"}));function*af(){for(const e of["大地の騎士ガイアナイト","スクラップ・デスデーモン"])yield{name:e,actions:[Te()]};yield{name:"ナチュル・ガオドレイク",actions:[Te(e=>e.length===1&&e.every(t=>t.attr.some(i=>i==="Earth")),e=>e.length>0&&e.every(t=>t.attr.some(i=>i==="Earth")))]},yield{name:"マジカル・アンドロイド",actions:[Te(),{title:"回復",isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:e=>e.activator.isTurnPlayer&&e.action.entity.face==="FaceUp",prepare:C,execute:async e=>(e.activator.heal(e.activator.getMonstersOnField().filter(t=>t.face==="FaceUp").filter(t=>t.types.includes("Psychic")).length*600,e.action.entity),!0),settle:async()=>!0}]}}const ks=Object.freeze(Object.defineProperty({__proto__:null,default:af},Symbol.toStringTag,{value:"Module"}));function*rf(){yield{name:"にせアバター",actions:[],continuousEffects:[fi("THE_DEVILS_AVATAR","Monster",e=>[e],e=>["attack","defense"].map(t=>ne.createContinuous("THE_DEVILS_AVATAR",i=>i.isSpawnedBy.isOnFieldStrictly&&i.isSpawnedBy.face==="FaceUp",e,(i,a)=>a.isOnFieldStrictly&&a.face==="FaceUp",t,"calculated","THE_DEVILS_AVATAR",()=>Number.MIN_VALUE)))]},yield{name:"にせドレッド・ルート",actions:[],continuousEffects:[Ri("THE_DEVILS_DREAD-ROOT","Monster",e=>["attack","defense"].map(t=>ne.createContinuous("THE_DEVILS_DREAD-ROOT",i=>i.isSpawnedBy.isOnFieldStrictly&&i.isSpawnedBy.face==="FaceUp",e,(i,a)=>a.isMonster&&a.isOnFieldStrictly&&a.face==="FaceUp"&&a!==i.isSpawnedBy,t,"calculated","THE_DEVILS_DREAD-ROOT",(i,a,r)=>Math.round(r/2))))]}}const Ds=Object.freeze(Object.defineProperty({__proto__:null,default:rf},Symbol.toStringTag,{value:"Module"})),nf=(e,t,i,a,r=2,n=2,s)=>{if(!e.action.entity.origin.rank||a.length<r||a.length>n||a.some(u=>!u.lvl)||a.some(u=>u.lvl!==e.action.entity.rank)||!s(a))return;const l=a.map(u=>({material:u,cell:u.cell,level:u.status.level}));if(e.activator.getEnableSummonList(e.activator,"XyzSummon",["Rule","XyzSummon","SpecialSummon"],e.action,[{monster:e.action.entity,posList:t,cells:i}],l,!1).length)return l};function*sf(e,t=2,i=2,a=r=>r.length>1){const r=e.activator.getMonstersOnField().filter(s=>s.battlePosition!=="Set");if(r.length<t)return;const n=[...e.activator.getMonsterZones(),...e.activator.getAvailableExtraMonsterZones()];yield*r.getAllOnOffPattern().filter(s=>s.length>=t).filter(s=>s.length<=i).map(s=>nf(e,k,n,s,t,i,a)??[]).filter(s=>s.length)}const lf=async(e,t,i)=>{var u;const a=e.action.getEnableMaterialPatterns(e).toArray(),r=a.map(c=>({infos:c,materialSeqList:c.map(d=>d.material.seq).sort()}));let n=a[0].map(c=>c.material);if(a.length>1){const c=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await e.activator.waitSelectEntities(c,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"エクシーズ素材とするモンスターを選択",i);if(!d)return;n=d}const s=n.map(c=>c.seq).sort(),l=(u=r.find(c=>s.length===c.materialSeqList.length&&s.every((d,f)=>d===c.materialSeqList[f])))==null?void 0:u.infos;if(!l)throw new _("想定されない状態",e,n);return await S.convertManyToXyzMaterials(l.map(c=>c.material),["XyzMaterial","Rule","Cost"],e.action.entity,e.activator),{summonMaterialInfos:l}},of=(e=2,t=2,i=a=>a.length>1)=>({title:"エクシーズ召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:a=>sf(a,e,t,i),canPayCosts:a=>a.action.getEnableMaterialPatterns(a).some(r=>r.length),canExecute:a=>!a.ignoreCosts||a.activator.getAvailableExtraMonsterZones().length+a.activator.getAvailableMonsterZones().length>0,payCosts:lf,prepare:a=>lt(a,"XyzSummon",["Rule","SpecialSummon","XyzSummon"],["Attack","Defense"]),execute:ot,settle:async()=>!0});function*cf(){yield*[{name:"ジェムナイト・パール",qty:2},{name:"覚醒の勇士 ガガギゴ",qty:3}].map(e=>({name:e.name,actions:[of(e.qty,e.qty)]}))}const xs=Object.freeze(Object.defineProperty({__proto__:null,default:cf},Symbol.toStringTag,{value:"Module"}));function*uf(){yield{name:"シューティング・ライザー・ドラゴン",actions:[Te(),{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["SynchroSummon"]},fixedTags:["SendToGraveyardFromDeck","IfSpecialSummonSucceed"],isOnlyNTimesPerTurn:1,canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>(t.lvl??12)<(e.action.entity.lvl??0)),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(r=>(r.lvl??12)<(e.action.entity.lvl??0));if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送るモンスターを選択",!1);if(!i)throw new _("想定されない状況",e);await i.sendToGraveyard(["Effect"],e.action.entity,e.activator);const a=i.lvl??0;return e.action.entity.numericOprsBundle.push(ne.createLingeringAddition("レベル減少",()=>!0,e.action.entity,e.action,"level",(r,n,s)=>s-a)),!0},settle:async()=>!0},us({title:"②シンクロ召喚",isOnlyNTimesPerChain:1})]}}const As=Object.freeze(Object.defineProperty({__proto__:null,default:uf},Symbol.toStringTag,{value:"Module"})),df=(e,t,i,a,r,n)=>{const s=e.fusionMaterialInfos.filter(c=>c.type!=="Overmuch");if(!s.length||!r.length||s.length!==r.length||!n(t,e,r)||!e.validateFusionMaterials(r))return;const l=s.map(c=>{const d=[];return rt(c)?d.push(...r.filter(f=>c.cardName===f.nm||f.status.fusionSubstitute)):d.push(...r.filter(c.filter)),{require:c,materials:d}});if(l.some(c=>!c.materials.length)||l.flatMap(c=>c.materials).getDistinct().length<r.length)return;let u=[[]];for(const c of l)u=[...u.flatMap(d=>c.materials.map(f=>{if(d.some(h=>h.material===f))return[...d];const p={material:f,cell:f.cell};return rt(c.require)&&(p.name=c.require.cardName),[...d,p]}))];return u=u.filter(c=>c.length===r.length).filter(c=>c.filter(d=>d.name&&d.material.nm!==d.name).length<2),u.find(c=>t.activator.getEnableSummonList(t.activator,"FusionSummon",["Effect","SpecialSummon"],t.action,[{monster:t.action.entity,posList:i,cells:a}],c,!1).length)};function*Ps(e,...t){const[i,a,r,n,s]=t,l=e.activator.getCells(...i).flatMap(f=>f.cardEntities).filter(f=>{var p;return(p=f.status.monsterCategories)==null?void 0:p.includes("Fusion")}).filter(f=>a(e,f));if(!l.length)return;const u=e.activator.getCells(...r).flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>f.canBeEffected(e.activator,e.action.entity,e.action));if(s!=null&&s.requisitionFrom&&u.push(...e.activator.getOpponentPlayer().getCells(...s.requisitionFrom).flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>f.canBeEffected(e.activator,e.action.entity,e.action))),!u.length)return;const c=[...e.activator.getMonsterZones(),...e.activator.duel.field.getCells("ExtraMonsterZone")],d=["Attack","Defense"];for(const f of l){const p=f.fusionMaterialInfos.filter(h=>h.type!=="Overmuch");if(p.length&&!(u.every(h=>!h.status.fusionSubstitute)&&p.filter(rt).some(h=>u.every(y=>y.nm!==h.cardName)))&&!p.filter(ap).some(h=>u.every(y=>!h.filter(y))))for(const h of u.filter(y=>y!==f).getAllOnOffPattern().filter(y=>y.length===p.length)){const y=df(f,e,d,c,h,n);y&&(yield{monster:f,materialInfos:y},console.log(f,y))}}}const ff=async(e,...t)=>{var y;const i=Ps(e,...t).toArray(),a=i.map(v=>v.monster).getDistinct(),r=await e.activator.waitSelectEntity(a,"融合召喚するモンスターを選択。");if(!r)return!1;const n=r.fusionMaterialInfos.filter(rp),s=i.filter(v=>v.monster===r).map(v=>v.materialInfos),l=s.map(v=>({infos:v,requiredSeqList:v.map(g=>g.material.seq)}));let u=s[0].map(v=>v.material);if(s.length>1||n.length){const v=s.flatMap(g=>g.map(m=>m.material)).getDistinct();u=await e.activator.waitSelectEntities(v,void 0,g=>l.some(m=>m.requiredSeqList.every(T=>g.map(D=>D.seq).includes(T))&&g.filter(T=>!m.requiredSeqList.includes(T.seq)).every(T=>n.some(D=>D.filter(T)))),"融合素材とするモンスターを選択",!1)??u}const c=l.find(v=>v.requiredSeqList.every(g=>u.map(m=>m.seq).includes(g))&&u.filter(g=>!v.requiredSeqList.includes(g.seq)).every(g=>n.some(m=>m.filter(g))));if(!c)throw new _("想定されない状態",e,u);const d=c.infos;d.push(...u.filter(v=>!c.requiredSeqList.includes(v.seq)).map(v=>({material:v,cell:v.cell})));const[,,,,f]=t,p={...Me.reduce((v,g)=>{const m={...v};return m[g]=g==="Graveyard"?{to:"Banished"}:{to:"Graveyard"},m},{}),...f.materialDestMapper},h=Object.groupBy(u,v=>v.cell.cellType);for(const v of Ln(h)){const g=p[v].to,m=p[v].position??cc[g],T=uc[g];h[v]&&await S.bringManyToSameCellForTheSameReason(g,m,h[v],T,"Vertical",["FusionMaterial","Effect","SpecialSummonMaterial"],e.action.entity,e.activator)}return await e.activator.summon("FusionSummon",["Effect","SpecialSummon"],e.action,r,k,[...e.activator.getMonsterZones(),...e.activator.duel.field.getCells("ExtraMonsterZone")],d,!1),r.info.isRebornable=!((y=r.origin.monsterCategories)!=null&&y.includes("RegularSpecialSummonOnly")),d.map(v=>v.material).forEach(v=>v.onUsedAsMaterial(e,e.action.entity)),!0},hi=(e,t,i,a,r={})=>({fixedTags:["SpecialSummonFromExtraDeck"],canExecute:n=>Ps(n,e,t,i,a,r).some(s=>s.materialInfos.length),prepare:C,execute:n=>ff(n,e,t,i,a,r),settle:async()=>!0});function*pf(){for(const e of["心眼の女神","沼地の魔獣王","イリュージョン・シープ","破壊神 ヴァサーゴ"])yield{name:e,actions:[],continuousEffects:[wa]};yield{name:"沼地の魔神王",actions:[{title:"融合サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],canPayCosts:cd,canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.nm==="融合")&&e.activator.canAddToHandFromDeck,getDests:e=>[e.activator.getGraveyard()],payCosts:ud,prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.nm==="融合");if(!t.length)return!1;const i=await e.activator.waitSelectEntity(t,"手札に加えるカードを選択",!1);return i?(await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}],continuousEffects:[wa]},yield{name:"パラサイト・フュージョナー",actions:[{title:"融合",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["SpecialSummon"]},...hi(["ExtraDeck"],()=>!0,["MonsterZone","ExtraMonsterZone"],(e,t,i)=>i.includes(e.action.entity)),settle:async()=>!0}],summonFilter:(e,t,i,a,r,n,s,l,u,c)=>{const d={posList:u,cells:c},f={posList:[],cells:[]};if(!r.includes("FusionSummon"))return d;const p=l.find(h=>h.material===e.isSpawnedBy);return p?p.name&&p.name!==e.isSpawnedBy.nm?d:f:d},continuousEffects:[wa]}}const Ms=Object.freeze(Object.defineProperty({__proto__:null,default:pf},Symbol.toStringTag,{value:"Module"}));function*gf(){yield{name:"魔導サイエンティスト",actions:[{title:"特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromExtraDeck"],canPayCosts:e=>e.activator.lp>=1e3,canExecute:e=>{const t=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getExtraDeck().cardEntities.filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Fusion")}).filter(a=>a.lvl&&a.lvl<7).map(a=>({monster:a,posList:k,cells:t})),[],!1).length>0},payCosts:(e,t)=>$t(e,t,1e3),prepare:C,execute:async e=>{const t=e.activator.getMonsterZones(),i=await e.activator.summonOne(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getExtraDeck().cardEntities.filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Fusion")}).filter(a=>a.lvl&&a.lvl<7).map(a=>({monster:a,posList:k,cells:t})),[],!1,!1);return i?(i.procFilterBundle.push(Tt.createLingering("直接攻撃不可",()=>!0,e.action.entity,e.action,(a,r)=>r.face==="FaceUp"&&r.isOnFieldAsMonsterStrictly,["BattleTarget"],(a,r,n,s,l)=>a!==n?!0:l.every(u=>u.entityType!=="Duelist"))),i.counterHolder.setCurfewFlg(e.action.entity),!0):!1},settle:async()=>!0},{title:"自発帰還",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,canExecute:e=>e.action.entity.field.getMonstersOnFieldStrictly().some(t=>t.counterHolder.getCurfewFlg(e.action.entity)),prepare:C,execute:async e=>{const t=e.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.counterHolder.getCurfewFlg(e.action.entity));if(!t.length)throw new _("想定されない状態",e);let i=t[0];if(t.length>1){const a=await e.activator.waitSelectEntity(t,"帰還させるカードを選択。",!1);if(!a)throw new O(e);i=a}return await i.returnToDeck("Bottom",["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0}]}}const Fs=Object.freeze(Object.defineProperty({__proto__:null,default:gf},Symbol.toStringTag,{value:"Module"}));function*hf(){for(const e of[{name:"マンジュ・ゴッド",kinds:["Monster","Spell"]},{name:"センジュ・ゴッド",kinds:["Monster"]},{name:"ソニックバード",kinds:["Spell"]}])yield{name:e.name,actions:[{title:"①儀式サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["NormalSummon","FlipSummon"]),canExecute:t=>t.activator.canAddToHandFromDeck&&t.activator.getDeckCell().cardEntities.filter(i=>e.kinds.includes(i.kind)).some(i=>{var a;return i.status.spellCategory==="Ritual"||((a=i.status.monsterCategories)==null?void 0:a.includes("Ritual"))}),prepare:C,execute:async t=>{if(!t.activator.canAddToHandFromDeck)return!1;const i=t.activator.getDeckCell().cardEntities.filter(r=>e.kinds.includes(r.kind)).filter(r=>{var n;return r.status.spellCategory==="Ritual"||((n=r.status.monsterCategories)==null?void 0:n.includes("Ritual"))});if(!i.length)return!1;const a=await t.activator.waitSelectEntity(i,"手札に加えるカードを選択",!1);if(!a)throw new O(t,i);return await a.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]}}const Os=Object.freeze(Object.defineProperty({__proto__:null,default:hf},Symbol.toStringTag,{value:"Module"}));function*yf(){yield{name:"儀式の準備",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck","ReturnToHandFromGraveyard"],canExecute:e=>e.activator.getDeckCell().cardEntities.filter(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Ritual")}).some(t=>t.lvl&&t.lvl<8)&&e.activator.canAddToHandFromDeck,prepare:C,execute:async e=>{if(!e.activator.canAddToHandFromDeck)return!1;const t=e.activator.getDeckCell().cardEntities.filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Ritual")}).filter(n=>n.lvl&&n.lvl<8);if(!t.length)return!1;const i=await e.activator.waitSelectEntity(t,"手札に加えるカードを選択",!1);if(!i)return!1;if(await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!e.activator.canAddToHandFromGraveyard)return!0;const a=e.activator.getGraveyard().cardEntities.filter(n=>n.status.spellCategory==="Ritual");if(a.length===1&&!await e.activator.waitYesNo("儀式カードをサルベージする？"))return!0;const r=await e.activator.waitSelectEntity(a,"手札に加えるカードを選択",!0);return r&&(e.activator.duel.clock.incrementProcSeq(),await r.addToHand(["Effect"],e.action.entity,e.activator)),!0},settle:async()=>!0},E]},yield{name:"儀式の下準備",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck","ReturnToHandFromGraveyard"],canExecute:e=>{if(!e.activator.canAddToHandFromDeck)return!1;const t=e.activator.getDeckCell().cardEntities.filter(a=>a.status.spellCategory==="Ritual").flatMap(a=>a.status.textTags??[]),i=["Deck"];return e.activator.canAddToHandFromGraveyard&&i.push("Graveyard"),e.activator.getCells(...i).flatMap(a=>a.cardEntities).filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Ritual")}).some(a=>t.includes(a.nm))},prepare:C,execute:async e=>{if(!e.activator.canAddToHandFromDeck)return!1;let t=e.activator.getDeckCell().cardEntities.filter(l=>l.status.spellCategory==="Ritual").flatMap(l=>l.status.textTags??[]);if(!t.length)return!1;const i=["Deck"];if(e.activator.canAddToHandFromGraveyard&&i.push("Graveyard"),t=e.activator.getCells(...i).flatMap(l=>l.cardEntities).filter(l=>{var u;return(u=l.status.monsterCategories)==null?void 0:u.includes("Ritual")}).filter(l=>t.includes(l.nm)).map(l=>l.nm),!t.length)return!1;const a=e.activator.getDeckCell().cardEntities.filter(l=>l.status.spellCategory==="Ritual").filter(l=>l.status.textTags&&l.status.textTags.union(t).length);if(!a.length)return!1;const r=await e.activator.waitSelectEntity(a,"手札に加えるカードを選択",!1);if(!r)throw new O(e);const n=e.activator.getCells(...i).flatMap(l=>l.cardEntities).filter(l=>{var u;return(u=l.status.monsterCategories)==null?void 0:u.includes("Ritual")}).filter(l=>{var u;return(u=r.status.textTags)==null?void 0:u.includes(l.nm)});if(!n.length)throw console.error(r.status.textTags),new _("想定されない状態",e,r,r.status.textTags);const s=await e.activator.waitSelectEntity(n,"手札に加えるカードを選択",!1);if(!s)throw new O(e,a);return await S.addManyToHand([r,s],["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},E]}}const Ns=Object.freeze(Object.defineProperty({__proto__:null,default:yf},Symbol.toStringTag,{value:"Module"}));function*vf(){yield{name:"折れ竹光",actions:[Ft(),E]},yield{name:"妖刀竹光",actions:[Ft(),E,{title:"②直接攻撃付与",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,...De(e=>e.activator.getSpellTrapsOnField().filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("竹光")}).filter(t=>t!==e.action.entity).filter(t=>t.status.spellCategory==="Equip"),{message:"手札に戻すカードを選択。",tags:["BounceToHand"]}),execute:async e=>{const t=e.action.entity.info.equipedBy;return t?(await S.returnManyToHandForTheSameReason(e.selectedEntities,["Effect"],e.action.entity,e.activator),t.statusOperatorBundle.push(new fe({title:"直接攻撃",validateAlive:i=>i.duel.clock.isSameTurn(i.isSpawnedAt),isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:(i,a)=>a.isOnFieldAsMonsterStrictly&&a.face==="FaceUp",statusCalculator:()=>({canDirectAttack:!0})})),!0):!1},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain&&e.action.entity.wasMovedFrom.cellType!=="Banished",canExecute:e=>e.activator.canAddToHandFromDeck&&e.activator.getDeckCell().cardEntities.filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("竹光")}).some(t=>t.status.name!=="妖刀竹光"),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("竹光")}).filter(a=>a.status.name!=="妖刀竹光");if(!t.length)return!1;const i=await e.activator.waitSelectEntity(t,"手札に加えるカードを選択。",!1);if(!i)throw new O(e);return await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]},yield{name:"真刀竹光",actions:[Ft(),E,{title:"②相手モンスター破壊",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["b1DAfterDmgCalc","b2DAfterDmgCalc"],executableDuelistTypes:["Controller"],canExecute:e=>{const t=e.action.entity.info.equipedBy;return!(!t||!t.info.battleLog.filter(i=>e.activator.duel.clock.isPreviousStage(i.timestamp)).some(i=>i.enemy.entityType==="Duelist")||!e.activator.getOpponentPlayer().getMonstersOnField().length||!e.activator.getOpponentPlayer().lifeLog.filter(i=>e.activator.duel.clock.isPreviousStage(i.clock)).some(i=>i.entity===t))},prepare:async e=>({selectedEntities:[],chainBlockTags:e.action.calcChainBlockTagsForDestroy(e.activator,e.activator.getOpponentPlayer().getMonstersOnField()),prepared:void 0}),execute:async e=>(await S.tryDestroy(e.activator.getOpponentPlayer().getMonstersOnField(),e)).length>0,settle:async()=>!0},{title:"③竹光入替",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:e=>e.action.entity.info.equipedBy?sd(e):!1,canExecute:e=>!!(e.action.entity.info.equipedBy&&e.activator.getDeckCell().cardEntities.filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("竹光")}).filter(t=>t.status.name!=="真刀竹光").some(t=>t.status.spellCategory==="Equip"))&&e.activator.duel.field.getMonstersOnFieldStrictly().some(t=>t.canBeTargetOfEffect(e)),payCosts:ld,prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(l=>{var u;return(u=l.status.nameTags)==null?void 0:u.includes("竹光")}).filter(l=>l.status.name!=="真刀竹光").filter(l=>l.status.spellCategory==="Equip");if(!t.length)return!1;const i=e.activator.getAvailableSpellTrapZones();if(!i.length)return!1;const a=e.activator.duel.field.getMonstersOnFieldStrictly().filter(l=>l.canBeTargetOfEffect(e));if(!a.length)return!1;const r=await e.activator.waitSelectEntity(t,"装備するカードを選択。",!1);if(!r)throw new O("竹光選択",e);const n=await e.activator.duel.view.waitSelectDestination(e.activator,r,i,"装備カードを置く場所を選択。","装備",!1);if(!n)throw new O("配置場所選択",e);await r.putDirectly(n,"Spell",["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle();const s=await e.activator.waitSelectEntity(a,"装備する対象を選択。",!1);if(!s)throw new O("装備対象選択",e);return r.info.equipedBy=s,r.info.effectTargets[e.action.seq]=[s],s.info.equipEntities.push(r),!0},settle:async()=>!0}]}}const Bs=Object.freeze(Object.defineProperty({__proto__:null,default:vf},Symbol.toStringTag,{value:"Module"}));function*mf(){yield{name:"黄金色の竹光",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:20,fixedTags:["Draw"],meetsConditions:e=>e.activator.getSpellTrapsOnField().filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("竹光")}).filter(t=>t.face==="FaceUp").some(t=>t.status.spellCategory==="Equip"),canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw,prepare:C,execute:async e=>(await e.activator.draw(2,e.action.entity,e.activator),!0),settle:async()=>!0},E]}}const Ls=Object.freeze(Object.defineProperty({__proto__:null,default:mf},Symbol.toStringTag,{value:"Module"}));function*Sf(){yield{name:"ＢＦ－疾風のゲイル",actions:[{title:"①特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:e=>e.activator.getMonstersOnField().filter(t=>(t.status.nameTags??[]).includes("ＢＦ")).some(t=>t.nm!==e.action.entity.origin.name)&&ve(e,k,[],["Rule"]),getDests:e=>Ot(e,k,[],["Rule"]),prepare:e=>lt(e,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ot,settle:async()=>!0},{title:"②攻守半減",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,...De(e=>e.activator.getOpponentPlayer().getMonstersOnField().filter(t=>t.face==="FaceUp").filter(t=>t.canBeTargetOfEffect(e)),{message:"対象モンスターを選択。"}),execute:async e=>{const t=e.selectedEntities.filter(i=>i.isOnFieldAsMonsterStrictly).filter(i=>i.face==="FaceUp").find(i=>i.canBeEffected(e.activator,e.action.entity,e.action));return t?(["attack","defense"].map(i=>ne.createLingeringFixation("②攻守半減",()=>!0,e.action.entity,e.action,i,(a,r,n)=>Math.round(n/2))).forEach(i=>t.numericOprsBundle.push(i)),!0):!1},settle:async()=>!0}]}}const qs=Object.freeze(Object.defineProperty({__proto__:null,default:Sf},Symbol.toStringTag,{value:"Module"}));function*_f(){yield{name:"水晶機巧－ハリファイバー",actions:[or(e=>e.length===2&&e.some(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Tuner")})),{title:"①リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["LinkSummon"]),canExecute:e=>{const t=[e.activator.getHandCell(),e.activator.getDeckCell()].flatMap(r=>r.cardEntities).filter(r=>(r.lvl??12)<4).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")}),i=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,cells:i,posList:["Defense"]})),[],!1).length>0},prepare:C,execute:async e=>{const t=[e.activator.getHandCell(),e.activator.getDeckCell()].flatMap(r=>r.cardEntities).filter(r=>(r.lvl??12)<4).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")}),i=e.activator.getMonsterZones(),a=await e.activator.summonOne(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,cells:i,posList:["Defense"]})),[],!1,!1);if(!a)throw new O(e);return a.statusOperatorBundle.push(new fe({title:"効果発動不可",validateAlive:r=>r.duel.clock.isSameTurn(r.isSpawnedAt),isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:(r,n)=>r.duel.clock.isSameTurn(r.isSpawnedAt)&&n.isOnFieldAsMonsterStrictly&&n.face==="FaceUp",statusCalculator:()=>({canActivateEffect:!1})})),!0},settle:async()=>!0},{title:"②シンクロ召喚",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerChain:1,canPayCosts:gi,meetsConditions:e=>!e.activator.isTurnPlayer,canExecute:e=>{const t=[...e.activator.getMonsterZones(),...e.activator.duel.field.getCells("ExtraMonsterZone")],i=e.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Synchro")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});return e.activator.getEnableSummonList(e.activator,"SynchroSummon",["SpecialSummon","Effect"],e.action,i.map(r=>({monster:r,cells:t,posList:k})),[{material:e.action.entity,cell:e.action.entity.cell}],!1).length>0},payCosts:da,prepare:C,execute:async e=>{const t=[...e.activator.getMonsterZones(),...e.activator.duel.field.getCells("ExtraMonsterZone")],i=e.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Synchro")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});return!!await e.activator.summonOne(e.activator,"SynchroSummon",["SpecialSummon","Effect"],e.action,i.map(r=>({monster:r,cells:t,posList:k})),[],!1,!1)},settle:async()=>!0}]}}const Rs=Object.freeze(Object.defineProperty({__proto__:null,default:_f},Symbol.toStringTag,{value:"Module"}));function*Cf(){yield{name:"Ｄ－ＨＥＲＯ ディアボリックガイ",actions:[{title:"①リクルート",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromDeck"],priorityForNPC:10,canPayCosts:gi,canExecute:e=>{const t=e.activator.getDeckCell().cardEntities.find(r=>r.nm==="Ｄ－ＨＥＲＯ ディアボリックガイ");if(!t)return!1;const i=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,[{monster:t,posList:k,cells:i}],[],!1).length>0},payCosts:da,prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.find(i=>i.nm==="Ｄ－ＨＥＲＯ ディアボリックガイ");return t?Jn(e,[t]):!1},settle:async()=>!0}]},yield{name:"Ｄ－ＨＥＲＯ ダイヤモンドガイ",actions:[{title:"魔法効果予約",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,canExecute:e=>e.action.entity.face==="FaceUp"&&e.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async e=>{const t=await S.excavateFromDeck(e.activator,["Effect"],e.action.entity,e.activator);if(!t)return!1;if(t.kind!=="Spell"||t.status.spellCategory!=="Normal")return e.activator.duel.view.requireUpdate(),await Gi(500),e.activator.writeInfoLog(`${t.toString()}は通常魔法ではないため、デッキボトムに戻った。`),await t.returnToDeck("Bottom",["Effect"],e.action.entity,e.activator),!1;await t.sendToGraveyard(["Effect"],e.action.entity,e.activator);const i=t.actions.filter(n=>n.playType==="CardActivation").find(n=>!n.needsToPayRegularCosts);if(!i)return e.activator.writeInfoLog(`${t.toString()}は${e.action.entity.toString()}の効果では発動できない。`),!0;const a=e.activator.duel.clock.getClone(),r={...i.definition};return r.title+=`(${e.action.entity.toString()})`,r.playType="IgnitionEffect",r.canExecute=(n,s)=>n.activator.duel.clock.turn>a.turn+2||n.action.entity.wasMovedAfter(a)?"RemoveMe":n.activator.duel.clock.turn<a.turn+2?!1:!i.definition.canExecute||i.definition.canExecute(n,s),r.executableCells=["Graveyard"],r.meetsConditions=void 0,r.canPayCosts=void 0,r.payCosts=void 0,r.settle=async()=>!0,r.isOnlyNTimesPerTurn=1,t.actions.push(mt.createNew(t,r)),!0},settle:async()=>!0}]}}const Hs=Object.freeze(Object.defineProperty({__proto__:null,default:Cf},Symbol.toStringTag,{value:"Module"}));function*Tf(){yield{name:"Ｅ・ＨＥＲＯ プリズマー",actions:[{title:"リフレクト・チェンジ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,needsToPayRegularCost:!0,canPayCosts:e=>{const t=e.activator.getExtraDeck().cardEntities.flatMap(i=>i.fusionMaterialInfos).filter(rt).map(i=>i.cardName).getDistinct();return e.activator.getDeckCell().cardEntities.filter(i=>t.includes(i.nm)).some(i=>i.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action))},canExecute:e=>e.action.entity.face==="FaceUp",payCosts:async(e,t,i)=>{const a=e.activator.getExtraDeck().cardEntities.flatMap(u=>u.fusionMaterialInfos).filter(rt).map(u=>u.cardName).getDistinct(),r=e.activator.getDeckCell().cardEntities.filter(u=>a.includes(u.nm)).filter(u=>u.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action));if(r.length===0)throw new _("想定されない状態",e);const n=await e.activator.waitSelectEntity(r,"墓地に送るモンスターを選択",i);if(!n){if(!i)throw new O(e);return}const s=e.activator.getExtraDeck().cardEntities.filter(u=>u.fusionMaterialInfos.filter(rt).some(c=>c.cardName===n.nm)),l=await e.activator.waitSelectEntity(s,"公開するモンスターを選択",i);if(!l)throw new _("想定されない状態",e);return e.activator.writeInfoLog(`公開：${l.toString()}`),await n.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),{sendToGraveyard:[n]}},prepare:C,execute:async e=>{const t=e.costInfo.sendToGraveyard;if(!t||!t.length)throw new _("コスト情報が取得できない",e);const i=t[0];return e.action.entity.statusOperatorBundle.push(new fe({title:e.action.title,validateAlive:a=>a.duel.clock.isSameTurn(a.isSpawnedAt),isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:(a,r)=>r.isOnFieldAsMonsterStrictly&&r.face==="FaceUp",statusCalculator:()=>({name:i.origin.name})})),!0},settle:async()=>!0}]}}const Zs=Object.freeze(Object.defineProperty({__proto__:null,default:Tf},Symbol.toStringTag,{value:"Module"}));function*wf(){yield{name:"封印されしエクゾディア",actions:[{title:"封印開放",isMandatory:!0,playType:"Exodia",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:ue,executableDuelistTypes:["Controller"],canExecute:e=>e.activator.getHandCell().cardEntities.filter(i=>{var a;return(a=i.origin.nameTags)==null?void 0:a.includes("封印されし")}).map(i=>i.origin.name).getDistinct().length===5,prepare:async e=>(await S.sendManyToGraveyardForTheSameReason(e.activator.duel.field.getCardsOnFieldStrictly(),["Rule"],e.action.entity,e.activator),{selectedEntities:[],chainBlockTags:[],nextChainBlockFilter:()=>!1}),execute:async e=>{const t=e.activator.getOpponentPlayer().getHandCell().cardEntities.filter(a=>{var r;return(r=a.origin.nameTags)==null?void 0:r.includes("封印されし")}).map(a=>a.origin.name).getDistinct().length===5,i=[{name:"封印されし者の左足",column:4},{name:"封印されし者の右足",column:2},{name:"封印されし者の左腕",column:5},{name:"封印されし者の右腕",column:1},{name:"封印されしエクゾディア",column:3}];for(const a of i){const r=[e.activator.getHandCell().cardEntities.find(n=>n.origin.name===a.name),e.activator.getOpponentPlayer().getHandCell().cardEntities.find(n=>n.origin.name===a.name)].filter(n=>n!==void 0);if(!r.length)throw new _("想定されない状態",e.activator.getHandCell().cardEntities,a.name);await R.moveMany(r.map(n=>({entity:n,to:n.controller.getMonsterZones().find(s=>s.column===(n.controller.seat==="Above"?6-a.column:a.column))??n.controller.getFieldZone(),kind:"Monster",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:["Rule"],movedBy:void 0,actionOwner:void 0,chooser:void 0})))}throw t?new re(void 0,`お互いが、${e.action.entity.toString()}の特殊勝利条件を同時に満たした。`):new re(e.activator,`${e.activator.name}が${e.action.entity.toString()}の特殊勝利条件を満たした。`)},settle:async()=>!0}]}}const Gs=Object.freeze(Object.defineProperty({__proto__:null,default:wf},Symbol.toStringTag,{value:"Module"}));function*bf(){{const e=i=>{const a="selectedEntities"in i?i.selectedEntities:i.action.entity.field.getCells("Graveyard").flatMap(n=>n.cardEntities).filter(n=>n.isMonster).filter(n=>n.canBeTargetOfEffect(i));if(a.length<2)return;let r=[i.activator,i.activator.getOpponentPlayer()].map(n=>i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,a.map(s=>({monster:s,cells:n.getMonsterZones(),posList:k})),[],!1));if(!r.some(n=>!n.length)){if(r.every(n=>n.length===1)){if(r.flat().map(n=>n.monster.seq).getDistinct().length===1)return}else if(r.some(n=>n.length===1)){const n=r.filter(s=>s.length===1).flat().map(s=>s.monster);r=r.map(s=>s.length<2?s:s.filter(l=>!n.includes(l.monster)))}return r}},t=i=>i.activator.duel.field.getCells(...j).filter(a=>a.row===3||a.column===3).filter(a=>a.cardEntities.length).map(a=>a.cardEntities[0]).filter(a=>a.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action));yield{name:"真炎竜アルビオン",fusionMaterialInfos:[{type:"Name",cardName:"アルバスの落胤"},{type:"Filter",filter:i=>i.attr.includes("Light")&&i.types.includes("Spellcaster")}],actions:[{title:"②蘇生",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:me,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canExecute:i=>!i.activator.isTurnPlayer&&!!e(i),prepare:async(i,a,r)=>{const n=e(i);if(!n)throw new _("想定されない状態");return{selectedEntities:await i.activator.waitSelectEntities(n.flat().map(l=>l.monster).getDistinct(),2,l=>l.length==2&&n.every(u=>u.map(c=>c.monster).some(c=>l.includes(c))),"蘇生するモンスターを選択。",r)}},execute:async i=>{if(i.selectedEntities.some(r=>r.wasMovedAfter(i.isActivatedAt)))return!1;const a=e(i);return a?(await i.activator.summonEachFields(i.activator,"SpecialSummon",["Effect"],i.action,a.flat(),[],!1,1,r=>r.length===1,!1),!0):!1},settle:async()=>!0},{title:"③自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canPayCosts:i=>t(i).length===4,canExecute:i=>ve(i,k,t(i).map(a=>({material:a,cell:a.cell,isAsEffectCost:!0})),["Effect"]),payCosts:async i=>{const a=t(i);return await S.releaseManyForTheSameReason(a,["Release","Cost"],i.action.entity,i.activator),{release:a}},prepare:C,execute:Pe,settle:async()=>!0}],continuousEffects:[nr("①対象耐性","Monster",i=>[i],i=>[Tt.createContinuous("①対象耐性",()=>!0,i,()=>!0,["EffectTarget"],(a,r)=>a.controller===r)])],summonFilter:(...i)=>{const[a,,,,r,,,n]=i,s={posList:[],cells:[]};return r.includes("FusionSummon")?n.some(l=>l.material===a.isSpawnedBy)?s:Ga(...i):Ga(...i)}}}}const $s=Object.freeze(Object.defineProperty({__proto__:null,default:bf},Symbol.toStringTag,{value:"Module"}));function*Ef(){yield{name:"アルバスの落胤",actions:[{title:"融合",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon","SpecialSummon"]},canPayCosts:Ut,payCosts:jt,...hi(["ExtraDeck"],()=>!0,["MonsterZone"],(e,t,i)=>i.includes(e.action.entity)&&i.every(a=>a===e.action.entity||a.controller!==e.activator),{requisitionFrom:j}),settle:async()=>!0}]}}const Us=Object.freeze(Object.defineProperty({__proto__:null,default:Ef},Symbol.toStringTag,{value:"Module"})),ba={},kf=e=>(ba[e]||(ba[e]={title:`${e}自己セット`,isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,isNoticedForcibly:!0,meetsConditions:t=>{var a;const i=t.action.entity.moveLog.latestRecord;return!(!i.movedAs.includes("Cost")||((a=i.movedBy)==null?void 0:a.nm)!=="アルバスの落胤"||!t.activator.duel.clock.isSameTurn(i.movedAt))},canExecute:t=>t.activator.getAvailableSpellTrapZones().length?t.activator.canSet:!1,prepare:C,execute:async t=>{if(t.action.entity.wasMovedAfter(t.isActivatedAt))return!1;const i=t.activator.getAvailableSpellTrapZones();if(!i.length||!t.activator.canSet)return!1;const a=await t.activator.duel.view.waitSelectDestination(t.activator,t.action.entity,i,"セットする場所を選択。","セット",!1);if(!a)throw new O("配置場所選択",t);return await t.action.entity.setAsSpellTrap(a,t.action.entity.origin.kind,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0}),ba[e]);function*Df(){yield{name:"白の烙印",actions:[{title:"①発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],()=>!0,["Hand","MonsterZone","ExtraMonsterZone","Graveyard"],(e,t,i)=>i.flatMap(a=>a.types??[]).includes("Dragon")&&(i.map(a=>a.nm).includes("アルバスの落胤")||!i.map(a=>a.cell.cellType).includes("Graveyard")))},kf("②"),E]}}const js=Object.freeze(Object.defineProperty({__proto__:null,default:Df},Symbol.toStringTag,{value:"Module"}));function*xf(){{const e=i=>!!(i.share||i.takeAll),t=(i,a,r)=>{var d;const n=r||i.activator.duel.field.getCells("Graveyard","Banished").flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>{var p;return!((p=f.status.monsterCategories)!=null&&p.includes("Fusion"))}).filter(f=>f.canBeTargetOfEffect(i));if(n.length<2)return;const s=!!((d=a.release)!=null&&d.flatMap(f=>f.fusionMaterialInfos).filter(rt).map(f=>f.cardName).includes("アルバスの落胤")),l=Ui.flatMap(f=>a[f]??[]).map(f=>({material:f,isAsEffectCost:!0,cell:f.cell})),u={};if(s){const f=i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,n.map(p=>({monster:p,cells:i.activator.getMonsterZones(),posList:["Defense"]})),l,!1);f.length>1&&f.flatMap(p=>p.cells).getDistinct().length>1&&(u.takeAll=f)}const c=[i.activator,i.activator.getOpponentPlayer()].map(f=>i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,n.map(p=>({monster:p,cells:f.getMonsterZones(),posList:k})),l,!1));if(!c.some(f=>!f.length))if(c.every(f=>f.length===1))c.flat().map(f=>f.monster.seq).getDistinct().length!==1&&(u.share=c);else if(c.some(f=>f.length===1)){const f=c.filter(p=>p.length===1).flat().map(p=>p.monster);u.share=c.map(p=>p.length<2?p:p.filter(h=>!f.includes(h.monster)))}else u.share=c;return e(u)?u:void 0};yield{name:"分かつ烙印",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canPayCosts:(...i)=>Kn(...i,(a,r,n)=>{var s;return!!((s=n.status.monsterCategories)!=null&&s.includes("Fusion"))}),canExecute:(i,a,r)=>r?!!t(i,r.costInfo):i.activator.getMonstersOnField().filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Fusion")}).filter(n=>n.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action)).some(n=>t(i,{release:[n]})),payCosts:async(i,a,r)=>{const n=await i.activator.waitSelectEntity(i.activator.getMonstersOnField().filter(s=>{var l;return(l=s.status.monsterCategories)==null?void 0:l.includes("Fusion")}).filter(s=>s.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action)).filter(s=>t(i,{release:[s]})),"リリースするモンスターを選択。",r);if(n)return await n.release(["Cost"],i.action.entity,i.activator),{release:[n]}},prepare:async(i,a,r)=>{const n=t(i,i.costInfo);if(!n)throw new _("想定されない状態");const s=[];return n.share&&s.push(...n.share.flat().map(u=>u.monster)),n.takeAll&&s.push(...n.takeAll.map(u=>u.monster)),{selectedEntities:await i.activator.waitSelectEntities(s.getDistinct(),2,u=>{if(u.length!==2)return!1;if(n.share&&n.share.every(c=>c.map(d=>d.monster).some(d=>u.includes(d))))return!0;if(n.takeAll){const c=n.takeAll;if(u.every(d=>c.map(f=>f.monster).includes(d)))return!0}return!1},"蘇生するモンスターを選択。",r)}},execute:async(i,a)=>{if(i.selectedEntities.some(s=>s.wasMovedAfter(i.isActivatedAt)))return!1;const r=t(i,i.costInfo,i.selectedEntities);if(!r)return!1;let n=!!r.takeAll;if(r.share&&r.takeAll&&(n=await i.activator.waitYesNo("自分の場に両方のモンスターを特殊召喚する？")),n)return Yn(i,a,{posList:["Defense"],allOrNothing:!0});if(!r.share)throw new _("想定されない状態");return await i.activator.summonEachFields(i.activator,"SpecialSummon",["Effect"],i.action,r.share.flat(),Ui.flatMap(s=>i.costInfo[s]??[]).map(s=>({material:s,isAsEffectCost:!0,cell:s.cell})),!1,1,s=>s.length===1,!1),!0},settle:async()=>!0},E]}}}const zs=Object.freeze(Object.defineProperty({__proto__:null,default:xf},Symbol.toStringTag,{value:"Module"}));function*Af(){yield{name:"ファイアウォール・ドラゴン・シンギュラリティ",actions:[or(e=>e.length>2),{title:"①バウンス＆自己強化",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,hasToTargetCards:!0,fixedTags:["BounceToHand"],canExecute:e=>[...e.activator.getGraveyard().cardEntities,...e.activator.getMonstersOnField()].flatMap(r=>r.status.monsterCategories??[]).getDistinct().union(["Ritual","Fusion","Synchro","Xyz"]).length<1?!1:[...e.activator.getOpponentPlayer().getGraveyard().cardEntities,...e.activator.getOpponentPlayer().getEntiteisOnField()].filter(r=>r.canBeTargetOfEffect(e)).length>0,prepare:async(e,t,i)=>{const r=[...e.activator.getGraveyard().cardEntities,...e.activator.getMonstersOnField()].flatMap(u=>u.status.monsterCategories??[]).getDistinct().union(["Ritual","Fusion","Synchro","Xyz"]).length;if(r<1)return;const n=[...e.activator.getOpponentPlayer().getGraveyard().cardEntities,...e.activator.getOpponentPlayer().getEntiteisOnField()].filter(u=>u.canBeTargetOfEffect(e));if(n.length<1)return;const s=n.length===1?1:void 0,l=await e.activator.waitSelectEntities(n,s,u=>u.length>0&&u.length<=r,"手札に戻すカードを選択。",i);if(l)return{selectedEntities:l}},execute:async e=>{const t=e.selectedEntities.filter(a=>a.isOnFieldStrictly||a.cell.cellType==="Graveyard").filter(a=>a.canBeEffected(e.activator,e.action.entity,e.action));await S.returnManyToHandForTheSameReason(t,["Effect"],e.action.entity,e.activator);const i=t.filter(a=>a.cell.cellType==="Hand"||a.cell.cellType==="ExtraDeck").length;return e.action.entity.numericOprsBundle.push(ne.createLingeringAddition(e.action.title,a=>a.isSpawnedBy.isEffective,e.action.entity,e.action,"attack",(a,r,n)=>n+500*i)),!0},settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:ue,executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:e=>{const t=e.action.entity.moveLog.latestRecord.movedAt,i=e.action.duel.field.moveLog.getPriviousChainLog().filter(a=>a.entity.cell.cellType==="Graveyard"||a.movedAs.includes("Battle")&&a.movedAs.includes("Destroy")).filter(a=>a.movedAt.totalProcSeq>t.totalProcSeq).map(a=>a.entity.wasMovedFrom).toArray();return e.action.entity.linkArrowDests.union(i).length>0},...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>t.types.includes("Cyberse")).filter(t=>t.canBeTargetOfEffect(e))),settle:async()=>!0}]}}const Vs=Object.freeze(Object.defineProperty({__proto__:null,default:Af},Symbol.toStringTag,{value:"Module"}));function*Pf(){yield{name:"融合",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],()=>!0,["Hand","MonsterZone","ExtraMonsterZone"],()=>!0)},E]};for(const e of[{name:"簡易融合",lvlUpperBound:5,filter:()=>!0},{name:"簡素融合",lvlUpperBound:6,filter:t=>{var i;return!((i=t.status.monsterCategories)!=null&&i.includes("Effect"))}}])yield{name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummonFromExtraDeck"],canPayCosts:t=>t.activator.lp>=1e3,canExecute:t=>{const i=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Fusion")}).filter(r=>r.lvl&&r.lvl<=e.lvlUpperBound).filter(e.filter).map(r=>({monster:r,posList:k,cells:i})),[],!1).length>0},payCosts:(t,i)=>$t(t,i,1e3),prepare:C,execute:async t=>{var r;const i=t.activator.getMonsterZones(),a=await t.activator.summonOne(t.activator,"FusionSummon",["Effect"],t.action,t.activator.getExtraDeck().cardEntities.filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Fusion")}).filter(n=>n.lvl&&n.lvl<=e.lvlUpperBound).filter(e.filter).map(n=>({monster:n,posList:k,cells:i})),[],!1,!1);return a?(a.statusOperatorBundle.push(new fe({title:"攻撃不可",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:(n,s)=>s.face==="FaceUp"&&s.isOnFieldAsMonsterStrictly,statusCalculator:()=>({canAttack:!1})})),a.counterHolder.setSelfDestructionFlg(t.action.entity),a.info.isRebornable=!((r=a.origin.monsterCategories)!=null&&r.includes("RegularSpecialSummonOnly")),!0):!1},settle:async()=>!0},E,{title:"自壊",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,canExecute:t=>t.action.entity.field.getMonstersOnFieldStrictly().some(i=>i.counterHolder.getSelfDestructionFlg(t.action.entity)),prepare:C,execute:async t=>{const i=t.action.entity.field.getMonstersOnFieldStrictly().filter(r=>r.counterHolder.getSelfDestructionFlg(t.action.entity));if(!i.length)throw new _("想定されない状態",t);let a=i[0];if(i.length>1){const r=await t.activator.waitSelectEntity(i,"自壊させるカードを選択。",!1);if(!r)throw new O(t);a=r}return await S.tryDestroy([a],t),!0},settle:async()=>!0}]}}const Ws=Object.freeze(Object.defineProperty({__proto__:null,default:Pf},Symbol.toStringTag,{value:"Module"}));function*Mf(){yield*["イグナイト・イーグル","イグナイト・マグナム","イグナイト・ドラグノフ","イグナイト・マスケット","イグナイト・デリンジャー","イグナイト・ライオット","イグナイト・ウージー","イグナイト・キャリバー"].map(e=>({name:e,actions:[st,{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyMultiple","DestroyMultipleOnField","DestroySpellTrapOnField","DestroySpellTrapsOnField"],meetsConditions:t=>{var a;const i=t.activator.getPendulumScaleMonsters().find(r=>r!==t.action.entity);return!(!i||!((a=i.status.nameTags)!=null&&a.includes("イグナイト")))},canExecute:t=>t.activator.getDeckCell().cardEntities.some(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("イグナイト")}),prepare:async t=>({selectedEntities:[],chainBlockTags:["SearchFromDeck",...t.action.calcChainBlockTagsForDestroy(t.activator,t.activator.getPendulumScaleMonsters())],prepared:void 0}),execute:async t=>{if(!(await S.tryDestroy(t.activator.getPendulumScaleMonsters(),t)).length)return!1;const a=t.activator.getDeckCell().cardEntities.filter(n=>{var s;return(s=n.status.nameTags)==null?void 0:s.includes("イグナイト")});if(!a.length)return!1;const r=await t.activator.waitSelectEntity(a,"手札に加えるカードを選択。",!1);return r?(await r.addToHand(["Effect"],t.action.entity,t.activator),!0):!1},settle:async()=>!0}]}))}const Qs=Object.freeze(Object.defineProperty({__proto__:null,default:Mf},Symbol.toStringTag,{value:"Module"}));function*Ff(){{const e=t=>t.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Trap").filter(i=>i.status.trapCategory==="Normal").filter(i=>t.activator.canTryBanish(i,"BanishAsCost",t.action)).filter(i=>i.canBeBanished("BanishAsCost",t.activator,t.action.entity,t.action)).flatMap(i=>i.actions).filter(i=>i.playType==="CardActivation").filter(i=>!i.needsToPayRegularCosts).filter(i=>i.validate(t.activator,[],["IgnoreRegularCosts","CopyEffectOnly"],{executeBy:t.action.entity,costInfo:{banish:[t.action.entity]}}));yield{name:"ジャンク・コレクター",actions:[{title:"罠コピー",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],needsToPayRegularCost:!0,canPayCosts:t=>gi(t)&&e(t).length>0,payCosts:async(t,i,a)=>{const r=e(t).map(l=>l.entity),n=await t.activator.waitSelectEntity(r,"コピーする罠を選択。",a);if(!n)return;const s=[t.action.entity,n];return await S.banishManyForTheSameReason(s,["Cost"],t.action.entity,t.activator),{banish:s}},prepare:async(t,i)=>{var s;const a=(s=t.costInfo.banish)==null?void 0:s.find(l=>l!==t.action.entity);if(!a)throw new _("正規のコストを支払わずにジャンク・コレクターの効果処理を行おうとした。",t,t.costInfo);const r=a.actions.find(l=>l.playType==="CardActivation");if(!r)throw new _("カードの効果の発動を持たないカードをジャンク・コレクターでコピーしようとした。",t,t.costInfo,a);const n={...await r.prepare(t.activator,void 0,void 0,i,!1,!0)};return n.appendix=[`コピー対象：${a.toString()}`,...n.appendix??[]],n},execute:async(t,i)=>{var n;const a=(n=t.costInfo.banish)==null?void 0:n.find(s=>s!==t.action.entity);if(!a)throw new _("想定されない状況",t,t.costInfo);const r=a.actions.find(s=>s.playType==="CardActivation");if(!r)throw new _("想定されない状況",t,t.costInfo,a);return await r.execute(t,i,{indirectly:!0})},settle:async()=>!0}]}}}const Xs=Object.freeze(Object.defineProperty({__proto__:null,default:Ff},Symbol.toStringTag,{value:"Module"}));function*Of(){yield{name:"ソーラー・エクスチェンジ",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","SendToGraveyardFromDeck","DiscordAsCost"],priorityForNPC:40,canPayCosts:(...e)=>Ut(...e,t=>{var i;return t.kind==="Monster"&&!!((i=t.status.nameTags)!=null&&i.includes("ライトロード"))}),canExecute:e=>e.activator.getDeckCell().cardEntities.length>3,payCosts:(...e)=>jt(...e,t=>{var i;return t.kind==="Monster"&&!!((i=t.status.nameTags)!=null&&i.includes("ライトロード"))}),prepare:async()=>({selectedEntities:[]}),execute:async e=>{await e.activator.draw(2,e.action.entity,e.activator),e.activator.duel.clock.incrementProcSeq();const t=e.activator.getDeckCell().cardEntities.slice(0,2);return await S.sendManyToGraveyardForTheSameReason(t,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},E]},yield{name:"光の援軍",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],priorityForNPC:40,canPayCosts:e=>e.activator.getDeckCell().cardEntities.length>3,canExecute:e=>e.activator.getDeckCell().cardEntities.filter(t=>t.kind==="Monster").filter(t=>(t.lvl??13)<5).some(t=>t.status.nameTags&&t.status.nameTags.includes("ライトロード")),payCosts:async e=>{const t=e.activator.getDeckCell().cardEntities.slice(0,3);return await S.sendManyToGraveyardForTheSameReason(t,["Cost"],e.action.entity,e.activator),{sendToGraveyard:t}},prepare:async()=>({selectedEntities:[]}),execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>(a.lvl??13)<5).filter(a=>a.status.nameTags&&a.status.nameTags.includes("ライトロード"));if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"手札に加えるモンスターを選択",!1);if(!i)throw new O(e);return await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},E]}}const Ks=Object.freeze(Object.defineProperty({__proto__:null,default:Of},Symbol.toStringTag,{value:"Module"})),zi=(e,t)=>({title:`${e}墓地送り(${t})`,isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:i=>i.activator.isTurnPlayer,prepare:C,execute:async i=>{const a=i.activator.getDeckCell().cardEntities.slice(0,t);return await S.sendManyToGraveyardForTheSameReason(a,["Effect"],i.action.entity,i.activator),!0},settle:async()=>!0}),Nf=(e,t)=>({title:`${e}墓地送り(${t})`,isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:i=>i.activator.duel.chainBlockLog.records.filter(a=>{var r;return(r=a.chainBlockInfo.action.entity.status.nameTags)==null?void 0:r.includes("ライトロード")}).filter(a=>a.chainBlockInfo.action.entity.kind==="Monster").filter(a=>a.chainBlockInfo.action.entity!==i.action.entity).filter(a=>a.chainBlockInfo.action.isWithChainBlock).filter(a=>i.activator.duel.clock.isPreviousChain(a.clock)).filter(a=>a.clock.totalProcSeq>i.action.entity.moveLog.latestRecord.movedAt.totalProcSeq).filter(a=>!a.chainBlockInfo.isNegatedActivationBy).some(a=>a.chainBlockInfo.activator===i.activator),prepare:C,execute:async i=>{const a=i.activator.getDeckCell().cardEntities.slice(0,t);return await S.sendManyToGraveyardForTheSameReason(a,["Effect"],i.action.entity,i.activator),!0},settle:async()=>!0});function*Bf(){yield{name:"ライトロード・サモナー ルミナス",actions:[{title:"①蘇生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromGraveyard","DiscordAsCost"],canPayCosts:Ut,payCosts:jt,...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>(t.lvl??12)<5).filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")})),settle:async()=>!0},zi("②",3)]},yield{name:"トワイライトロード・シャーマン ルミナス",actions:[{title:"①蘇生帰還",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromGraveyard","DiscordAsCost"],...od(e=>e.activator.getCells("Hand","Graveyard").flatMap(t=>t.cardEntities).filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")}).filter(t=>t.kind==="Monster")),...He(e=>e.activator.getBanished().cardEntities.filter(t=>t.kind==="Monster").filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")})),settle:async()=>!0},Nf("②",3)]},yield{name:"ライトロード・メイデン ミネルバ",actions:[{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon"]},fixedTags:["SearchFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.filter(t=>t.attr.includes("Light")).filter(t=>t.types.includes("Dragon")).some(t=>t.lvl&&t.lvl<=e.activator.getGraveyard().cardEntities.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("ライトロード")}).filter(i=>i.kind).map(i=>i.nm).getDistinct().length),prepare:C,execute:async e=>{if(!e.activator.canAddToHandFromDeck)return!1;const t=e.activator.getDeckCell().cardEntities.filter(a=>a.attr.includes("Light")).filter(a=>a.types.includes("Dragon")).filter(a=>a.lvl&&a.lvl<=e.activator.getGraveyard().cardEntities.filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("ライトロード")}).filter(r=>r.kind).map(r=>r.nm).getDistinct().length),i=await e.activator.waitSelectEntity(t,"手札に加えるモンスターを選択",!1);return i?(await i.addToHand(["Effect"],e.action.entity,e.activator),!0):!1},settle:async()=>!0},{title:"②墓地送り",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck","Hand"]},fixedTags:["SendToGraveyardFromDeck"],prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities[0];return t?(await t.sendToGraveyard(["Effect"],e.action.entity,e.activator),!0):!1},settle:async()=>!0},zi("③",2)]}}const Ys=Object.freeze(Object.defineProperty({__proto__:null,default:Bf},Symbol.toStringTag,{value:"Module"}));function*Lf(){yield{name:"ライトロード・アサシン ライデン",actions:[{title:"①墓地送り＆自己強化",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canExecute:e=>e.activator.getDeckCell().cardEntities.length>1,prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.slice(0,2);await S.sendManyToGraveyardForTheSameReason(t,["Effect"],e.action.entity,e.activator);const i=t.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).length;return i&&e.action.entity.numericOprsBundle.push(ne.createLingeringAddition(e.action.title,a=>a.isSpawnedBy.isEffective&&a.duel.clock.turn-a.isSpawnedAt.turn<2,e.action.entity,e.action,"attack",(a,r,n)=>n+200*i)),!0},settle:async()=>!0},zi("②",2)]},yield{name:"ライトロード・ビースト ウォルフ",actions:[{title:"①自己再生",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck"]},fixedTags:["SpecialSummonFromGraveyard"],canExecute:e=>ve(e,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}]},yield{name:"ライトロード・アーチャー フェリス",actions:[{title:"①自己再生",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck"],needsByEffect:!0,causerFilter:(e,t)=>t.kind==="Monster"},fixedTags:["SpecialSummonFromGraveyard"],canExecute:e=>ve(e,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0},{title:"②モンスター破壊＆墓地送り",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyMonsterOnField","DestroyOnOpponentField","DestroyOnField"],canPayCosts:fa,canExecute:e=>e.activator.getDeckCell().cardEntities.length>2,payCosts:pa,...De(e=>e.activator.getOpponentPlayer().getMonstersOnField().filter(t=>t.canBeTargetOfEffect(e)),{do:"Destroy"}),execute:async e=>{if(e.selectedEntities.every(a=>!a.isOnField)||!await S.tryDestroy(e.selectedEntities,e))return!1;e.activator.duel.clock.incrementProcSeq();const i=e.activator.getDeckCell().cardEntities.slice(0,3);return await S.sendManyToGraveyardForTheSameReason(i,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0}]},yield{name:"光道の龍",actions:[{title:"①自己特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand","SpecialSummon"],isOnlyNTimesPerTurn:1,canExecute:e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").some(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")}),prepare:C,execute:Pe,settle:async()=>!0},{title:"②墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,triggerPattern:{triggerType:"Arrival",arrivalReasons:["SpecialSummon"]},fixedTags:["SendToGraveyardFromDeck","IfSpecialSummonSucceed"],canExecute:e=>e.activator.getDeckCell().cardEntities.filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")}).some(t=>t.nm!=="光道の龍"),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).filter(a=>a.nm!=="光道の龍");if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"墓地に送るカードを選択",!1);if(!i)throw new O(e);return await i.sendToGraveyard(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure"},isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(t=>t.atk===3e3&&t.def===2600),prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.atk===3e3&&a.def===2600),i=await e.activator.waitSelectEntity(t,"手札に加えるモンスターを選択",!1);return i?(await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]},yield{name:"ライトロード・デーモン ヴァイス",actions:[{title:"①自己特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand"],isOnlyNTimesPerTurn:1,canPayCosts:e=>e.activator.getHandCell().cardEntities.length>1,canExecute:e=>e.activator.getDeckCell().cardEntities.length>1,payCosts:async(e,t,i)=>{const a=e.activator.getHandCell().cardEntities.filter(n=>n!==e.action.entity),r=await e.activator.waitSelectEntity(a,"デッキトップに戻すカードを一枚選択。",i);if(!r)throw new O(e);return await r.returnToDeck("Top",["Cost"],e.action.entity,e.activator),{returnToDeck:[r]}},prepare:C,execute:async e=>{if(!await Pe(e))return!1;e.activator.duel.clock.incrementProcSeq();const t=e.activator.getDeckCell().cardEntities.slice(0,2);return await S.sendManyToGraveyardForTheSameReason(t,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,triggerPattern:{triggerType:"Departure",from:["Deck"]},fixedTags:["SpecialSummonFromGraveyard"],...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>t.kind==="Monster").filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("ライトロード")}).filter(t=>t.nm!=="ライトロード・デーモン ヴァイス")),settle:async()=>!0}]},yield{name:"ライトロード・マジシャン ライラ",actions:[{title:"③魔法罠破壊",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyOnField","DestroySpellTrapOnField"],...De(e=>e.activator.getOpponentPlayer().getSpellTrapsOnField().filter(t=>t.canBeTargetOfEffect(e)),{message:"破壊する対象を選択。",do:"Destroy",canExecute:e=>e.action.entity.battlePosition==="Attack"}),execute:async e=>(e.action.entity.battlePosition==="Attack"&&(await S.tryDestroy(e.selectedEntities,e),await e.action.entity.setBattlePosition("Defense",["Effect"],e.action.entity,e.activator)),e.action.entity.statusOperatorBundle.push(new fe({title:"表示形式変更不可",validateAlive:t=>t.duel.clock.turn-t.isSpawnedAt.turn<3,isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:()=>!0,statusCalculator:()=>({canBattlePositionChange:!1})})),!0),settle:async()=>!0},zi("②",3)]}}const Js=Object.freeze(Object.defineProperty({__proto__:null,default:Lf},Symbol.toStringTag,{value:"Module"}));function*qf(){for(const e of["メタルフォーゼ・ゴルドライバー","メタルフォーゼ・シルバード","メタルフォーゼ・スティエレン","メタルフォーゼ・ヴォルフレイム"])yield{name:e,actions:[st,{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["Destroy"],...De(t=>{let i=t.activator.getEntiteisOnField().filter(a=>a.face==="FaceUp").filter(a=>a.canBeTargetOfEffect(t)).filter(a=>a!==t.action.entity);return t.activator.getAvailableSpellTrapZones.length||(i=i.filter(a=>a.cell.cellType==="SpellAndTrapZone")),i},{message:"破壊するカードを選択。",do:"Destroy",canExecute:t=>t.activator.canSet&&t.activator.getDeckCell().cardEntities.filter(i=>i.kind==="Spell"||i.kind==="Trap").some(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("メタルフォーゼ")})}),execute:async t=>{if(!(await S.tryDestroy(t.selectedEntities,t)).length||!t.activator.canSet)return!1;const a=t.activator.getAvailableSpellTrapZones();if(!a.length)return!1;const r=t.activator.getDeckCell().cardEntities.filter(l=>l.kind==="Spell"||l.kind==="Trap").filter(l=>{var u;return(u=l.status.nameTags)==null?void 0:u.includes("メタルフォーゼ")});if(!r.length)return!1;const n=await t.activator.waitSelectEntity(r,"セットするカードを選択。",!1);if(!n)return!1;const s=await t.activator.duel.view.waitSelectDestination(t.activator,n,a,"セットする先を選択","セット",!1);if(!s)throw new O("セット先選択",t);return await n.setAsSpellTrap(s,n.kind,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0}]}}const Is=Object.freeze(Object.defineProperty({__proto__:null,default:qf},Symbol.toStringTag,{value:"Module"}));function*Rf(){yield{name:"錬装融合",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],(e,t)=>{var i;return!!((i=t.status.nameTags)!=null&&i.includes("メタルフォーゼ"))},["Hand","MonsterZone","ExtraMonsterZone"],()=>!0)},{title:"②ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw,prepare:async e=>(await e.action.entity.returnToDeck("Random",["Effect"],e.action.entity,e.activator),{selectedEntities:[],chainBlockTags:["Draw"]}),execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),!0),settle:async()=>!0},E]}}const el=Object.freeze(Object.defineProperty({__proto__:null,default:Rf},Symbol.toStringTag,{value:"Module"}));function*Hf(){yield{name:"ダーク・リゾネーター",actions:[],substituteEffects:[Md(1)]},yield{name:"レッド・リゾネーター",actions:[{title:"①特殊召喚",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand","IfNormarlSummonSucceed","SpecialSummon"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["NormalSummon"]),canExecute:e=>{const t=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getHandCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>(a.lvl??12)<5).map(a=>({monster:a,posList:k,cells:t})),[],!1).length>0},prepare:C,execute:async e=>{const t=e.activator.getMonsterZones(),i=e.activator.getHandCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>(r.lvl??12)<5).map(r=>({monster:r,posList:k,cells:t}));return!!await e.activator.summonOne(e.activator,"SpecialSummon",["Effect"],e.action,i,[],!1,!1)},settle:async()=>!0},{title:"②回復",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["SpecialSummon"]),...De(e=>e.activator.getMonstersOnField().filter(t=>t.canBeTargetOfEffect(e)).filter(t=>(t.atk??0)>0).filter(t=>t.info.summonKinds.includes("SpecialSummon")),{message:"対象モンスターを選択。"}),execute:async e=>{const t=e.activator.lp;return e.selectedEntities.filter(i=>i.isOnFieldAsMonsterStrictly).forEach(i=>e.activator.heal(i.atk??0,e.action.entity)),e.activator.lp!==t},settle:async()=>!0}]}}const tl=Object.freeze(Object.defineProperty({__proto__:null,default:Hf},Symbol.toStringTag,{value:"Module"})),$r=(e,t)=>{const i=t?`魔力充填可能(${t})`:"魔力充填可能";return ri(i,e,a=>[a],a=>[new fe({title:i,validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:a,actionAttr:{},isApplicableTo:(r,n)=>r.isSpawnedBy===n,statusCalculator:(r,n,s)=>(s.maxCounterQty.SpellCounter=t??Number.MAX_VALUE,{maxCounterQty:s.maxCounterQty})})])},Ea={},Zf=(e,t=1)=>(Ea[t]||(Ea[t]={title:`魔力回収(${t})`,isMandatory:!0,playType:"AfterChainBlock",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:ue,executableDuelistTypes:["Controller"],canExecute:i=>!!(i.targetChainBlock&&i.targetChainBlock.action.playType==="CardActivation"&&i.targetChainBlock.action.entity.kind==="Spell"&&i.action.entity.isEffective&&i.action.entity.face==="FaceUp"&&i.action.entity.counterHolder.getQty("SpellCounter")<(i.action.entity.status.maxCounterQty.SpellCounter??0)&&i.action.entity.hadArrivedToFieldAt().totalProcSeq<=i.targetChainBlock.isActivatedAt.totalProcSeq),prepare:C,execute:async i=>i.action.entity.face==="FaceDown"||!i.action.entity.isOnFieldAsMonsterStrictly||!i.action.entity.isEffective?!1:(i.action.entity.counterHolder.add("SpellCounter",t,i.action.entity),!0),settle:async()=>!0}),{...Ea[t],title:`${e}魔力回収(${t})`}),$a=(e,t,i)=>e.action.entity.counterHolder.getQty("SpellCounter")>=i,Ua=(e,t,i,a)=>{const r=a[0];return e.action.entity.counterHolder.remove("SpellCounter",r),{counter:r}};function*Gf(){yield{name:"魔導戦士 ブレイカー",actions:[{title:"①魔力充填",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["IfNormarlSummonSucceed"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["NormalSummon"]),prepare:C,execute:async e=>e.action.entity.face==="FaceDown"?!1:(e.action.entity.counterHolder.setQty("SpellCounter",1,e.action.entity),!0),settle:async()=>!0},{title:"③マナブレイク",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyOnField","DestroySpellTrapOnField"],canPayCosts:(e,t)=>$a(e,t,1),payCosts:async(e,t,i)=>Ua(e,t,i,[1]),...De(e=>e.activator.duel.field.getSpellTrapsOnFieldStrictly().filter(t=>t.canBeTargetOfEffect(e)),{message:"破壊する対象を選択。",do:"Destroy"}),execute:async e=>e.selectedEntities.every(t=>!t.isOnFieldAsSpellTrapStrictly)?!1:(await S.tryDestroy(e.selectedEntities,e),!0),settle:async()=>!0}],continuousEffects:[$r("Monster",1),fi("②攻撃力上昇","Monster",e=>[e],e=>[ne.createContinuous("②攻撃力上昇",()=>!0,e,()=>!0,"attack","wip","Addition",(t,i,a)=>t.isEffective?a+t.counterHolder.getQty("SpellCounter")*300:a)])]},yield{name:"王立魔法図書館",actions:[{...Zf("①",1)},{title:"②ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:(e,t)=>$a(e,t,3),canExecute:e=>e.activator.getDeckCell().cardEntities.length>0,payCosts:async(e,t,i)=>Ua(e,t,i,[3]),prepare:C,execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),!0),settle:async()=>!0}],continuousEffects:[$r("Monster",3)]}}const il=Object.freeze(Object.defineProperty({__proto__:null,canPaySpellCounters:$a,default:Gf,paySpellCounters:Ua},Symbol.toStringTag,{value:"Module"}));function*$f(){yield{name:"スターダスト・ドラゴン",actions:[Te(),{title:"①ヴィクテム・サンクチュアリ",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:ue,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:fa,canExecute:e=>!!(e.targetChainBlock&&e.targetChainBlock.action.isWithChainBlock&&e.targetChainBlock.chainBlockTags.includes("DestroyOnField")),payCosts:pa,prepare:async e=>{if(!e.targetChainBlock)throw new _("想定されない状態",e);return{selectedEntities:[],chainBlockTags:e.action.calcChainBlockTagsForDestroy(e.activator,[e.targetChainBlock.action.entity]),prepared:void 0}},execute:async(e,t)=>{const i=t[e.index-1];return i.isNegatedActivationBy=e.action,await S.tryDestroy([i.action.entity],e),!0},settle:async()=>!0},{title:"②自己再生",playType:"IgnitionEffect",isMandatory:!1,spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],canExecute:e=>{const t=e.action.entity.moveLog.latestRecord;if(t.movedBy!==e.action.entity||!e.activator.duel.clock.isSameTurn(t.movedAt)||!t.movedAs.includes("Cost"))return!1;const i=e.activator.duel,a=e.action.entity.actionLogRecords.filter(r=>i.clock.isSameTurn(r.clock)).map(r=>r.chainBlockInfo).findLast(r=>r.action.title==="①ヴィクテム・サンクチュアリ");return!a||a.state!=="done"?!1:ve(e,k,[],["Effect"])},prepare:C,execute:Pe,settle:async()=>!0}]},yield{name:"閃珖竜 スターダスト",actions:[Te(),{title:"波動音壁",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,...De(e=>e.activator.getEntiteisOnField().filter(t=>t.face==="FaceUp").filter(t=>t.canBeTargetOfEffect(e))),execute:async e=>(e.selectedEntities.filter(t=>t.isOnFieldStrictly).filter(t=>t.face==="FaceUp").filter(t=>t.canBeEffected(e.activator,e.action.entity,e.action)).forEach(t=>{t.counterHolder.add("SonicBarrier",1,e.action.entity)}),!0),settle:async()=>!0}],substituteEffects:[{title:"波動音壁（適用）",playType:"LingeringEffect",isMandatory:!0,executableCells:Me,executablePeriods:ue,executableDuelistTypes:["Controller"],isApplicableTo:(e,t,i)=>i.filter(a=>a.counterHolder.getQty("SonicBarrier",e.entity)>0),substitute:async(e,t,i)=>{const a=i.filter(r=>r.counterHolder.getQty("SonicBarrier",e.entity)>0);return a.forEach(r=>{r.counterHolder.removeAll("SonicBarrier",e.entity),e.entity.controller.writeInfoLog(`波動音壁により${r.toString()}は１ターンに１度だけ戦闘効果では破壊されない。`)}),a}}]},yield{name:"真閃珖竜 スターダスト・クロニクル",actions:[Te(e=>e.length===1&&e.every(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")}),e=>e.length>0&&e.every(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")})),{title:"波動護魂",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,canPayCosts:e=>Qn(e,e.activator.getGraveyard().cardEntities.filter(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")})),payCosts:e=>Xn(e,e.activator.getGraveyard().cardEntities.filter(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")}),t=>t.length===1,1),prepare:C,execute:async e=>(e.action.entity.procFilterBundle.push(Tt.createLingering(e.action.title,t=>t.duel.clock.isSameTurn(t.isSpawnedAt),e.action.entity,e.action,()=>!0,["Effect"],()=>!1)),!0),settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain&&e.action.entity.moveLog.latestRecord.actionOwner!==e.activator&&(e.action.entity.wasMovedFrom.owner===e.activator||e.action.entity.wasMovedFrom.cellType==="ExtraMonsterZone"),...He(e=>e.activator.getBanished().cardEntities.filter(t=>t.kind==="Monster").filter(t=>t.face==="FaceUp").filter(t=>t.types.includes("Dragon")).filter(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")}).filter(t=>t.canBeTargetOfEffect(e))),settle:async()=>!0}]},yield{name:"聖珖神竜 スターダスト・シフル",actions:[Te(e=>e.length===1&&e.every(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")}),e=>e.length>1&&e.every(t=>{var i;return(i=t.status.monsterCategories)==null?void 0:i.includes("Synchro")})),{title:"②珖波動反撃",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["Hand"],executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,negatePreviousBlock:!0,fixedTags:["NegateCardEffect","DestroyOnField"],canExecute:e=>!!(e.targetChainBlock&&e.targetChainBlock.action.entity.isMonster&&e.targetChainBlock.action.isWithChainBlock&&e.activator!==e.targetChainBlock.activator),prepare:C,execute:async e=>{if(!e.targetChainBlock)return!1;const t=e.targetChainBlock;t.isNegatedEffectBy=e.action;const i=await e.activator.waitSelectEntity(e.action.duel.field.getCardsOnFieldStrictly(),"破壊するカードを選択。",!1);return(await S.tryDestroy(i?[i]:[],e)).length>0},settle:async()=>!0},{title:"③蘇生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],priorityForNPC:10,fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:gi,payCosts:da,...He(e=>e.activator.getGraveyard().cardEntities.filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("スターダスト")}).filter(t=>(t.lvl??12)<9)),settle:async()=>!0}],substituteEffects:[{title:"波動聖句",playType:"ContinuousEffect",isMandatory:!0,executableCells:["MonsterZone"],executablePeriods:ue,executableDuelistTypes:["Controller"],isApplicableTo:(e,t,i)=>i.filter(a=>a.controller===e.entity.controller).filter(a=>a.counterHolder.getQty("SonicVerse",e.entity)===0),substitute:async(e,t,i)=>{if(!e.entity.isEffective)return[];const a=i.filter(r=>r.controller===e.entity.controller).filter(r=>r.counterHolder.getQty("SonicVerse",e.entity)===0);return a.forEach(r=>{r.counterHolder.add("SonicVerse",1,e.entity),e.entity.controller.writeInfoLog(`${e.entity.toString()}の効果により${r.toString()}は１ターンに１度だけ破壊されない。`)}),a}}]}}const al=Object.freeze(Object.defineProperty({__proto__:null,default:$f},Symbol.toStringTag,{value:"Module"}));function*Uf(){yield{name:"調律",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck","SendToGraveyardFromDeck"],priorityForNPC:40,canExecute:e=>{const t=e.activator.getDeckCell().cardEntities;return t.length<2?!1:t.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("シンクロン")}).some(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Tuner")})},prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities;if(t.length<2)return!1;const i=t.filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("シンクロン")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});if(i.length===0)return!1;const a=await e.activator.waitSelectEntity(i,"手札に加えるモンスターを選択",!1);if(!a)throw new O(e);return await a.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),e.activator.duel.clock.incrementProcSeq(),await e.activator.getDeckCell().cardEntities[0].sendToGraveyard(["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},E]}}const rl=Object.freeze(Object.defineProperty({__proto__:null,default:Uf},Symbol.toStringTag,{value:"Module"}));function*jf(){yield{name:"フォーミュラ・シンクロン",actions:[Te(),{title:"①ドロー",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],fixedTags:["Draw","IfSpecialSummonSucceed"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["SynchroSummon"],k,!0),canExecute:e=>e.activator.canDraw&&e.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),!0),settle:async()=>!0},us({title:"②シンクロ召喚",isOnlyNTimesPerChain:1})]}}const nl=Object.freeze(Object.defineProperty({__proto__:null,default:jf},Symbol.toStringTag,{value:"Module"}));function*zf(){yield{name:"トゥーン・ワールド",actions:[{...st,canPayCosts:e=>e.activator.lp>=1e3,payCosts:(e,t)=>$t(e,t,1e3)},E]}}const sl=Object.freeze(Object.defineProperty({__proto__:null,default:zf},Symbol.toStringTag,{value:"Module"}));function*Vf(){yield{name:"無の煉獄",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],meetsConditions:e=>e.activator.getHandCell().cardEntities.length>2,canExecute:e=>e.activator.canDraw&&e.activator.status.canDiscardAsEffect&&e.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async e=>(await e.activator.draw(1,e.action.entity,e.activator),e.activator.entity.counterHolder.add("IntoTheVoid",1,e.action.entity),!0),settle:async()=>!0},{title:"手札抹殺",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,meetsConditions:e=>e.activator.entity.counterHolder.getQty("IntoTheVoid",e.action.entity)>0,prepare:C,execute:async e=>(await S.discardManyForTheSameReason(e.activator.getHandCell().cardEntities,["Effect"],e.action.entity,e.activator),e.activator.entity.counterHolder.remove("IntoTheVoid",1,e.action.entity),!0),settle:async()=>!0},E]}}const ll=Object.freeze(Object.defineProperty({__proto__:null,default:Vf},Symbol.toStringTag,{value:"Module"}));function*Wf(){yield{name:"星杯の妖精リース",actions:[{title:"①サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["NormalSummon","SpecialSummon"]),canExecute:e=>e.activator.canAddToHandFromDeck&&e.activator.getDeckCell().cardEntities.filter(t=>t.kind==="Monster").some(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("星杯")}),prepare:async e=>{const t=e.action.entity.hasBeenArrivalNow(["NormalSummon"])?["IfNormarlSummonSucceed"]:["IfSpecialSummonSucceed"];return{selectedEntities:[],chainBlockTags:t}},execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("星杯")});if(t.length===0)return!1;const i=await e.activator.waitSelectEntity(t,"手札に加えるモンスターを選択",!1);if(!i)throw new _("想定されない状態",e);return await i.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"②自己サルベージ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canPayCosts:e=>[...e.activator.getMonstersOnField(),...e.activator.getHandCell().cardEntities.filter(t=>t.kind==="Monster")].some(t=>t.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action)),payCosts:async e=>{const t=[...e.activator.getMonstersOnField(),...e.activator.getHandCell().cardEntities.filter(a=>a.kind==="Monster")].filter(a=>a.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action)),i=await e.activator.waitSelectEntity(t,"墓地に送るモンスターを選択。",!0);if(i)return await i.sendToGraveyard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[i]}},fixedTags:["SearchFromDeck"],prepare:C,execute:async e=>e.action.entity.wasMovedAfter(e.isActivatedAt)?!1:(await e.action.entity.addToHand(["Effect"],e.action.entity,e.activator),!0),settle:async()=>!0}]},yield{name:"星遺物－『星杯』",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],canPayCosts:fa,canExecute:e=>e.activator.duel.field.moveLog.getPriviousChainLog().filter(t=>t.movedAs.includes("SpecialSummon")).map(t=>t.entity).some(t=>t.wasMovedFrom.cellType==="ExtraDeck"),payCosts:pa,prepare:C,execute:async e=>{const t=e.activator.duel.field.moveLog.getPriviousChainLog().filter(i=>i.movedAs.includes("SpecialSummon")).map(i=>i.entity).filter(i=>i.wasMovedFrom.cellType==="ExtraDeck").filter(i=>i.isOnFieldAsMonsterStrictly).filter(i=>i.canBeEffected(e.activator,e.action.entity,e.action)).toArray();return await S.sendManyToGraveyardForTheSameReason(t,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},{title:"②リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Hand","Graveyard","Banished"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain&&e.action.entity.info.summonKinds.includes("NormalSummon")&&e.action.entity.moveLog.previousPlaceRecord.face==="FaceUp",canExecute:e=>{const t=e.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("星杯")}).filter(r=>r.nm!=="星遺物－『星杯』"),i=e.activator.getMonsterZones(),a=e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,cells:i,posList:k})),[],!1);return a.length>1&&a.flatMap(r=>r.cells).getDistinct().length>1},prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("星杯")}).filter(r=>r.nm!=="星遺物－『星杯』"),i=e.activator.getMonsterZones();return(await e.activator.summonMany(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,cells:i,posList:k})),[],!1,2,r=>r.length==2,!1)??[]).length?(e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:gi,meetsConditions:e=>!e.action.entity.wasMovedAtCurrentTurn,canExecute:e=>e.activator.canAddToHandFromDeck&&e.activator.getDeckCell().cardEntities.filter(t=>{var i;return(i=t.status.nameTags)==null?void 0:i.includes("星遺物")}).length>0,payCosts:da,fixedTags:["SearchFromDeck"],prepare:C,execute:async e=>{const t=await e.activator.waitSelectEntity(e.activator.getDeckCell().cardEntities.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("星遺物")}),"手札に加えるカードを選択",!1);return t?(await t.addToHand(["Effect"],e.action.entity,e.activator),!0):!1},settle:async()=>!0}]}}const ol=Object.freeze(Object.defineProperty({__proto__:null,default:Wf},Symbol.toStringTag,{value:"Module"}));function*Qf(){yield{name:"ドットスケーパー",actions:[{title:"①自己再生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,actionGroupName:"ドットスケーパー",fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain&&e.action.entity.wasMovedFrom.cellType!=="Banished",canExecute:e=>ve(e,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0},{title:"②自己帰還",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,actionGroupName:"ドットスケーパー",fixedTags:["SpecialSummonFromBanished"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain,canExecute:e=>ve(e,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}]}}const cl=Object.freeze(Object.defineProperty({__proto__:null,default:Qf},Symbol.toStringTag,{value:"Module"}));function*Xf(){yield{name:"ゼラの天使",actions:[Te(),{title:"②自己帰還",isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:["stanby"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromBanished"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousTurn,canExecute:e=>ve(e,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}],continuousEffects:[fi("②攻撃力上昇","Monster",e=>[e],e=>[ne.createContinuous("①攻撃力上昇",()=>!0,e,()=>!0,"attack","wip","Addition",(t,i,a)=>t.isEffective?a+t.controller.getOpponentPlayer().getBanished().cardEntities.length*100:a)])]}}const ul=Object.freeze(Object.defineProperty({__proto__:null,default:Xf},Symbol.toStringTag,{value:"Module"}));function*Kf(){yield{name:"死霊騎士デスカリバー・ナイト",actions:[{title:"①モンスター効果無効",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Quick",executableCells:j,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],negatePreviousBlock:!0,canPayCosts:fa,canExecute:e=>!!(e.targetChainBlock&&e.targetChainBlock.action.entity.isMonster&&e.targetChainBlock.action.isWithChainBlock),payCosts:pa,prepare:async(e,t)=>{const i=e.targetChainBlock,a=t[e.index-1];return i!==a?{selectedEntities:[]}:{selectedEntities:[],chainBlockTags:["NegateCardEffect",...e.action.calcChainBlockTagsForDestroy(e.activator,[i.action.entity])],prepared:void 0}},execute:async(e,t)=>{const i=t.find(r=>r.action.entity.isMonster&&r.action.isWithChainBlock),a=t[e.index-1];return a!==i?!1:(a.isNegatedActivationBy=e.action,await S.tryDestroy([a.action.entity],e),!0)},settle:async()=>!0}]},yield{name:"Ｇ・コザッキー",actions:[{title:"自滅ダメージ",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:ca,executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:me},meetsConditions:e=>e.action.entity.moveLog.previousPlaceRecord.face==="FaceUp",prepare:async e=>e.action.entity.moveLog.previousPlaceRecord.cell.owner!==e.action.entity.controller?{chainBlockTags:["DamageToOpponent"]}:{chainBlockTags:["DamageToSelf"]},execute:async e=>(e.chainBlockTags.includes("DamageToOpponent")?e.activator.getOpponentPlayer():e.activator).effectDamage(e.action.entity.origin.attack??0,e).length>0,settle:async()=>!0}],immediatelyActions:[{title:"自壊",executableCells:["MonsterZone"],executablePeriods:ue.filter(e=>e!=="b1DBeforeDmgCalc"&&e!=="b2DBeforeDmgCalc"&&e!=="b1DDmgCalc"&&e!=="b2DDmgCalc"),executableFaces:["FaceUp"],execute:async e=>{e.entity.field.getCardsOnFieldStrictly().some(t=>t.nm==="コザッキー")||e.entity.isEffective&&e.entity.isOnFieldAsMonsterStrictly&&(e.entity.controller.writeInfoLog(`コザッキーがフィールド上に存在しないため、${e.entity.toString()}は破壊される。`),S.tryMarkForDestroy([e.entity],{activator:e.entity.controller,action:e,selectedEntities:[]}),e.entity.info.isDying=!0,e.entity.info.causeOfDeath=["Effect","Destroy"])}}]}}const dl=Object.freeze(Object.defineProperty({__proto__:null,default:Kf},Symbol.toStringTag,{value:"Module"}));function*Yf(){yield{name:"召喚僧サモンプリースト",actions:[{title:"①表示形式変更",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...H],executableDuelistTypes:["Controller"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["NormalSummon","FlipSummon"]),fixedTags:["IfNormarlSummonSucceed"],prepare:C,execute:async e=>e.action.entity.battlePosition!=="Attack"||!e.action.entity.isOnFieldAsMonsterStrictly?!1:(await e.action.entity.setBattlePosition("Defense",["Effect"],e.action.entity,e.activator),!0),settle:async()=>!0},{title:"③リクルート",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromDeck"],canPayCosts:e=>e.activator.status.canDiscardAsCost?e.activator.getHandCell().cardEntities.some(t=>t.kind==="Spell"):!1,canExecute:e=>{const t=e.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>r.lvl===4),i=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,posList:k,cells:i})),[],!1).length>0},payCosts:async(e,t,i)=>{const a=e.activator.getHandCell().cardEntities.filter(n=>n.kind==="Spell"),r=await e.activator.waitSelectEntity(a,"手札コストを選択",i);if(!r&&!i)throw new O(e);if(r)return await r.discard(["Cost"],e.action.entity,e.activator),{discard:[r]}},prepare:C,execute:async e=>{const t=e.activator.getDeckCell().cardEntities.filter(r=>r.lvl===4),i=e.activator.getMonsterZones(),a=await e.activator.summonOne(e.activator,"SpecialSummon",["Effect"],e.action,t.map(r=>({monster:r,posList:k,cells:i})),[],!1,!1);return!a||(a.statusOperatorBundle.push(new fe({title:"攻撃不可",validateAlive:r=>r.duel.clock.isSameTurn(r.isSpawnedAt),isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:()=>!0,statusCalculator:()=>({canAttack:!1})})),!a)?!1:(e.activator.getDeckCell().shuffle(),!0)},settle:async()=>!0}],continuousEffects:[nr("②リリース不可","Monster",e=>[e],e=>[Tt.createContinuous("②リリース不可",()=>!0,e,()=>!0,["AdvanceSummonRelease","ReleaseAsEffect","ReleaseAsCost"],()=>!1)])]}}const fl=Object.freeze(Object.defineProperty({__proto__:null,default:Yf},Symbol.toStringTag,{value:"Module"}));function*Jf(){yield{name:"アンカモフライト",actions:[st,{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,meetsConditions:e=>e.activator.getExtraDeck().cardEntities.every(t=>t.nm==="アンカモフライト"),canExecute:e=>e.action.entity.face==="FaceUp"&&ve(e,k,[],["Rule"]),getDests:e=>Ot(e,k,[],["Rule"]),prepare:e=>lt(e,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ot,settle:async()=>!0},{title:"①ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],priorityForNPC:20,isOnlyNTimesPerTurn:1,fixedTags:["DestroySpellTrapOnField","Draw"],meetsConditions:e=>e.activator.getExtraDeck().cardEntities.every(t=>t.nm==="アンカモフライト"),canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async e=>(await S.tryDestroy([e.action.entity],e)).length?(e.action.entity.field.duel.clock.incrementProcSeq(),await e.activator.draw(1,e.action.entity,e.activator),!0):!1,settle:async()=>!0}],summonFilter:(e,t,i,a,r,n,s,l,u,c)=>{const d={posList:u,cells:c},f={posList:[],cells:[]};return s!==t||n.entity===t?d:f},continuousEffects:[ri("除外予定","Monster",e=>[e],e=>[new fe({title:"除外予定",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:(t,i)=>i.isOnFieldAsMonsterStrictly&&i.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})])]}}const pl=Object.freeze(Object.defineProperty({__proto__:null,default:Jf},Symbol.toStringTag,{value:"Module"}));function*If(){yield{name:"エキセントリック・ボーイ",actions:[],summonFilter:(e,t,i,a,r,n,s,l,u,c)=>{const d={posList:u,cells:c},f={posList:[],cells:[]};if(!r.includes("SynchroSummon"))return d;const p=l.find(h=>h.material===e.isSpawnedBy);return p?!p.cell.isMonsterZoneLikeCell||l.length!==2?f:l.filter(h=>h!==p).every(h=>h.cell.cellType==="Hand")?d:f:d},defaultStatus:{allowHandSynchro:!0},onUsedAsMaterial:(e,t,i)=>{i.info.summonKinds.includes("SynchroSummon")&&(t.action.entity.statusOperatorBundle.push(new fe({title:"除外予定",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:e,actionAttr:t.action,isApplicableTo:(a,r)=>r.isOnFieldAsMonsterStrictly&&r.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})),i.info.isEffectiveIn=i.info.isEffectiveIn.filter(a=>a!=="ExtraMonsterZone").filter(a=>a!=="MonsterZone"))}}}const gl=Object.freeze(Object.defineProperty({__proto__:null,default:If},Symbol.toStringTag,{value:"Module"})),ep={title:"ペンデュラム召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,canExecute:e=>{const t=e.activator.getPendulumScales();if(!t||t.upperBound-t.lowerBound<2)return!1;const i=[...e.activator.getHandCell().cardEntities.filter(n=>n.kind==="Monster"),...e.activator.getExtraDeck().cardEntities.filter(n=>n.face==="FaceUp")].filter(n=>n.kind==="Monster").filter(n=>n.lvl&&n.lvl>t.lowerBound).filter(n=>n.lvl&&n.lvl<t.upperBound);if(!i.length)return!1;const a=[...e.activator.getMonsterZones(),...e.activator.getAvailableMonsterZones()];return e.activator.getEnableSummonList(e.activator,"PendulumSummon",["Rule"],e.action,i.map(n=>({monster:n,cells:a,posList:k})),[],!1).length>0},prepare:async e=>{const t=e.activator.getPendulumScales();if(!t||t.upperBound-t.lowerBound<2)return;const i=[...e.activator.getHandCell().cardEntities.filter(r=>r.kind==="Monster"),...e.activator.getExtraDeck().cardEntities.filter(r=>r.face==="FaceUp")].filter(r=>r.kind==="Monster").filter(r=>r.lvl&&r.lvl>t.lowerBound).filter(r=>r.lvl&&r.lvl<t.upperBound);if(!i.length)return;const a=[...e.activator.getMonsterZones(),...e.activator.getAvailableExtraMonsterZones()];return await e.activator.summonMany(e.activator,"PendulumSummon",["Rule"],e.action,i.map(r=>({monster:r,posList:k,cells:a})),[],!1,void 0,r=>r.length>0,!1),C()},execute:async e=>{for(const t of e.activator.getPendingMonstersOnField())await t.determine();return!0},settle:async()=>!0},tp={title:"強制勝利",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,canExecute:e=>e.activator.duel.clock.turn>1,prepare:async e=>(await S.sendManyToGraveyardForTheSameReason(e.activator.duel.field.getCardsOnFieldStrictly(),["Rule"],e.action.entity,e.activator),{selectedEntities:[],nextChainBlockFilter:()=>!1}),execute:async e=>{const t=[{name:"封印されし者の左足",column:4},{name:"封印されし者の右足",column:2},{name:"封印されし者の左腕",column:5},{name:"封印されし者の右腕",column:1},{name:"封印されしエクゾディア",column:3}];for(const i of t){const a=[e.activator.duel.field.getAllCardEntities().filter(r=>r.owner===e.activator).find(r=>r.origin.name===i.name),e.activator.getOpponentPlayer().getHandCell().cardEntities.find(r=>r.origin.name===i.name)].filter(r=>r!==void 0);if(!a.length)throw new _("想定されない状態",e.activator.getHandCell().cardEntities,i.name);await R.moveMany(a.map(r=>({entity:r,to:r.controller.getMonsterZones().find(n=>n.column===(r.controller.seat==="Above"?6-i.column:i.column))??r.controller.getFieldZone(),kind:"Monster",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:["Rule"],movedBy:void 0,actionOwner:void 0,chooser:void 0})))}throw new re(e.activator,`${e.activator.getOpponentPlayer().name}がワンターンキルに失敗した。`)},settle:async()=>!0},ip=e=>{const t=[ep];return e.profile.npcType==="FtkChallenge"&&t.push(tp),{name:e.profile.name,actions:t,staticInfo:{name:e.profile.name,kind:"Monster",wikiEncodedName:"%A5%D7%A5%EC%A5%A4%A5%E4%A1%BC"}}},rt=e=>e.type==="Name",ap=e=>e.type==="Filter",rp=e=>e.type==="Overmuch";function*np(){const e={...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousSpell.ts":es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousTrap.ts":ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_CounterTrap.ts":is,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell.ts":as,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell_Preset.ts":rs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell.ts":ns,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell_Preset.ts":ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FusionMonster.ts":ls,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_LinkMonster.ts":ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster.ts":fs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Catapult.ts":ps,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_DirectAttacker.ts":gs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Recruiter.ts":hs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell.ts":ys,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Draw.ts":vs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Mill.ts":ms,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Salvage.ts":Ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_Preset.ts":_s,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap.ts":Cs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap_UponAttackDeclaration.ts":Ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_QuickPlaySpell.ts":ws,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_RitualSpell.ts":Es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_SynchroMonster.ts":ks,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_TestMonster.ts":Ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_XyzMonster.ts":xs}),...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/character_yusei/CardProcDefinitions_Yusei_SyncroTunerMonster.ts":As,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSubstitude_Monster.ts":Ms,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSupport_Monster.ts":Fs,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_Monster.ts":Os,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_NormalSpell.ts":Ns,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_EquipSpell.ts":Bs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_NormalSpell.ts":Ls,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_Blackwing_Monster.ts":qs,"/src/ygo_entity_proc/card_proc_definitions/tag_c/CardProcDefinitions_Crystron_LinkMonster.ts":Rs,"/src/ygo_entity_proc/card_proc_definitions/tag_d/CardProcDefinitions_DestinyHero_Monster.ts":Hs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_ElementalHero_Monster.ts":Zs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_Exodia_Monster.ts":Gs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_FusionMonster.ts":$s,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_Monster.ts":Us,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalSpell.ts":js,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalTrap.ts":zs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Firewall_LinkMonster.ts":Vs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Fusion_NormalSpell.ts":Ws,"/src/ygo_entity_proc/card_proc_definitions/tag_i/CardProcDefinitions_Igknight_Monster.ts":Qs,"/src/ygo_entity_proc/card_proc_definitions/tag_j/CardProcDefinitions_Junk_Monster.ts":Xs,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_NormalSpell.ts":Ks,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv3_Monster.ts":Ys,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv4_Monster.ts":Js,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_Monster.ts":Is,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_NormalSpell.ts":el,"/src/ygo_entity_proc/card_proc_definitions/tag_r/CardProcDefinitions_Resonator_Monster.ts":tl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_SpellCounter_Monster.ts":il,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Stardust_Monster.ts":al,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_NormalSpell.ts":rl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_SyncroMonster.ts":nl,"/src/ygo_entity_proc/card_proc_definitions/tag_t/CardProcDefinitions_Toon_ContinuousSpell.ts":sl,"/src/ygo_entity_proc/card_proc_definitions/tag_v/CardProcDefinitions_Void_NormalSpell.ts":ll,"/src/ygo_entity_proc/card_proc_definitions/tag_w/CardProcDefinitions_WorldChalice_Monster.ts":ol,"/src/ygo_entity_proc/card_proc_definitions/type_Cyberse/CardProcDefinitions_Earth_Cyberse_lvl1_Monster.ts":cl,"/src/ygo_entity_proc/card_proc_definitions/type_Fairy/CardProcDefinitions_Light_Fairy_lvl8_SyncroMonster.ts":ul,"/src/ygo_entity_proc/card_proc_definitions/type_Fiend/CardProcDefinitions_Dark_Fiend_lvl4_Monster.ts":dl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Dark_Spellcaster_lvl4_Monster.ts":fl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Light_Spellcaster_lvl5_PendulumMonster.ts":pl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Wind_Spellcaster_lvl3_Monster.ts":gl})};for(const t of Object.keys(e))e[t].default&&(yield*e[t].default())}function*sp(...e){var a,r;const t={...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousSpell.ts":es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousTrap.ts":ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_CounterTrap.ts":is,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell.ts":as,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell_Preset.ts":rs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell.ts":ns,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell_Preset.ts":ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FusionMonster.ts":ls,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_LinkMonster.ts":ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster.ts":fs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Catapult.ts":ps,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_DirectAttacker.ts":gs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Recruiter.ts":hs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell.ts":ys,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Draw.ts":vs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Mill.ts":ms,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Salvage.ts":Ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_Preset.ts":_s,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap.ts":Cs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap_UponAttackDeclaration.ts":Ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_QuickPlaySpell.ts":ws,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_RitualSpell.ts":Es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_SynchroMonster.ts":ks,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_TestMonster.ts":Ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_XyzMonster.ts":xs}),...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/character_yusei/CardProcDefinitions_Yusei_SyncroTunerMonster.ts":As,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSubstitude_Monster.ts":Ms,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSupport_Monster.ts":Fs,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_Monster.ts":Os,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_NormalSpell.ts":Ns,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_EquipSpell.ts":Bs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_NormalSpell.ts":Ls,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_Blackwing_Monster.ts":qs,"/src/ygo_entity_proc/card_proc_definitions/tag_c/CardProcDefinitions_Crystron_LinkMonster.ts":Rs,"/src/ygo_entity_proc/card_proc_definitions/tag_d/CardProcDefinitions_DestinyHero_Monster.ts":Hs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_ElementalHero_Monster.ts":Zs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_Exodia_Monster.ts":Gs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_FusionMonster.ts":$s,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_Monster.ts":Us,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalSpell.ts":js,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalTrap.ts":zs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Firewall_LinkMonster.ts":Vs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Fusion_NormalSpell.ts":Ws,"/src/ygo_entity_proc/card_proc_definitions/tag_i/CardProcDefinitions_Igknight_Monster.ts":Qs,"/src/ygo_entity_proc/card_proc_definitions/tag_j/CardProcDefinitions_Junk_Monster.ts":Xs,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_NormalSpell.ts":Ks,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv3_Monster.ts":Ys,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv4_Monster.ts":Js,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_Monster.ts":Is,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_NormalSpell.ts":el,"/src/ygo_entity_proc/card_proc_definitions/tag_r/CardProcDefinitions_Resonator_Monster.ts":tl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_SpellCounter_Monster.ts":il,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Stardust_Monster.ts":al,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_NormalSpell.ts":rl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_SyncroMonster.ts":nl,"/src/ygo_entity_proc/card_proc_definitions/tag_t/CardProcDefinitions_Toon_ContinuousSpell.ts":sl,"/src/ygo_entity_proc/card_proc_definitions/tag_v/CardProcDefinitions_Void_NormalSpell.ts":ll,"/src/ygo_entity_proc/card_proc_definitions/tag_w/CardProcDefinitions_WorldChalice_Monster.ts":ol,"/src/ygo_entity_proc/card_proc_definitions/type_Cyberse/CardProcDefinitions_Earth_Cyberse_lvl1_Monster.ts":cl,"/src/ygo_entity_proc/card_proc_definitions/type_Fairy/CardProcDefinitions_Light_Fairy_lvl8_SyncroMonster.ts":ul,"/src/ygo_entity_proc/card_proc_definitions/type_Fiend/CardProcDefinitions_Dark_Fiend_lvl4_Monster.ts":dl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Dark_Spellcaster_lvl4_Monster.ts":fl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Light_Spellcaster_lvl5_PendulumMonster.ts":pl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Wind_Spellcaster_lvl3_Monster.ts":gl})},i=[];for(const n of Object.values(t))if(n.default){for(const s of n.default())if(e.includes(s.name)){const l={...Je[s.name]};let u=s.summonFilter;l.kind==="Monster"&&l.monsterCategories&&!s.summonFilter&&l.monsterCategories.union(xn).length&&(u=Ga),s.fusionMaterialInfos&&s.fusionMaterialInfos.some(d=>d.type==="Name")&&(l.textTags=[...l.textTags??[],...s.fusionMaterialInfos.filter(rt).map(d=>d.cardName)]);const c={...s,summonFilter:u,staticInfo:l};(a=l.monsterCategories)!=null&&a.includes("Link")?c.actions=[...cs,...c.actions]:(r=l.monsterCategories)!=null&&r.includes("SpecialSummon")?c.actions=[...ji,...c.actions]:c.actions=[...Zr,...s.actions],c.actions.filter(d=>d.fixedTags&&d.fixedTags.some(f=>f.startsWith("SpecialSummon"))&&!d.fixedTags.includes("SpecialSummon")).forEach(d=>{var f;return(f=d.fixedTags)==null?void 0:f.push("SpecialSummon")}),yield c,i.push(s.name)}}yield*e.filter(n=>!i.includes(n)).map(n=>Je[n]).filter(n=>n).filter(n=>n.kind==="Monster").filter(n=>{var s;return!((s=n.monsterCategories)!=null&&s.includes("Effect"))}).filter(n=>{var s;return!((s=n.monsterCategories)!=null&&s.includes("Pendulum"))}).map(n=>{var s;return i.push(n.name),{name:n.name,actions:(s=n.monsterCategories)!=null&&s.includes("SpecialSummon")?ji:Zr,staticInfo:n}}),i.length!==e.length&&console.log(e.filter(n=>!i.includes(n)))}const lp=e=>({...ip(e),staticInfo:{name:e.profile.name,kind:"Monster",wikiEncodedName:"%A5%D7%A5%EC%A5%A4%A5%E4%A1%BC"}}),op=new Set,ja=wl;let hl=0,yl=0;for(const e of np()){if(op.has(e.name))throw new Error(`カード定義重複${e.name}`);ja[e.name]&&(ja[e.name].isImplemented=!0,hl++)}const Je=Object.values(ja).reduce((e,t)=>{var i;return t.kind==="Monster"&&t.monsterCategories&&!((i=t.monsterCategories)!=null&&i.includes("Effect"))&&!t.monsterCategories.includes("Pendulum")&&(t.isImplemented=!0,yl++),t.isForTest&&t.isImplemented,e[t.name]=t,e},{}),Qp=hl,Xp=yl,za=[{id:-1,name:"サンプルデッキ１",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","ジャンク・フォアード","ジャンク・フォアード","チューン・ウォリアー","チューン・ウォリアー","ガード・オブ・フレムベル","ガード・オブ・フレムベル","守護竜ユスティア","守護竜ユスティア","エンジェル・トランペッター","エンジェル・トランペッター","ジェムナイト・サフィア","ジェムナイト・サフィア","魂虎","魂虎","暗黒界の番兵 レンジ","暗黒界の番兵 レンジ","バトルフットボーラー","バトルフットボーラー","球騎士の三人娘","球騎士の三人娘","エンジェル・トランペッター","エンジェル・トランペッター","Ｇ戦隊 シャインブラック","Ｇ戦隊 シャインブラック","しゃりの軍貫","しゃりの軍貫","ジョングルグールの幻術師","ジョングルグールの幻術師","ゾンビーノ","ゾンビーノ","メガロスマッシャーＸ","メガロスマッシャーＸ","ライドロン","ライドロン","機界騎士アヴラム","機界騎士アヴラム","幻のグリフォン","幻のグリフォン","幻殻竜","幻殻竜","アレキサンドライドラゴン","アレキサンドライドラゴン","ジェネティック・ワーウルフ","ジェネティック・ワーウルフ","サイバー・ドラゴン","フロストザウルス","フロストザウルス","フロストザウルス","青眼の白龍","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-2,name:"サンプルデッキ２",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","グローアップ・バルブ","ガード・オブ・フレムベル","伝説の白石","伝説の白石","伝説の白石","守護竜ユスティア","ギャラクシーサーペント","ジェネクス・コントローラー","Ｅ・ＨＥＲＯ フェザーマン","Ｅ・ＨＥＲＯ バーストレディ","チューン・ウォリアー","Ｅ・ＨＥＲＯ クレイマン","Ｅ・ＨＥＲＯ スパークマン","しゃりの軍貫","ジョングルグールの幻術師","ゾンビーノ","ジェネティック・ワーウルフ","ライトロード・ビースト ウォルフ","サイバー・ドラゴン","サイバー・ドラゴン","サイバー・ドラゴン","ラブラドライドラゴン","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","フロストザウルス","Ｅ・ＨＥＲＯ ネオス","青眼の白龍","青眼の白龍","青眼の白龍","Ｅ－エマージェンシーコール","おろかな埋葬","トレード・イン","トレード・イン","トレード・イン","闇の量産工場","強欲な壺","強欲な壺","強欲な壺","死者蘇生","死者蘇生","死者蘇生","召喚師のスキル","召喚師のスキル","召喚師のスキル","成金ゴブリン","成金ゴブリン","成金ゴブリン","戦士の生還","増援","調和の宝札","調和の宝札","調和の宝札","天使の施し","天使の施し","天使の施し","貪欲な壺","貪欲な壺","貪欲な壺","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-3,name:"サンプルデッキ３",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","グローアップ・バルブ","ガード・オブ・フレムベル","伝説の白石","伝説の白石","伝説の白石","守護竜ユスティア","ギャラクシーサーペント","ジェネクス・コントローラー","Ｅ・ＨＥＲＯ フェザーマン","Ｅ・ＨＥＲＯ バーストレディ","チューン・ウォリアー","Ｅ・ＨＥＲＯ クレイマン","Ｅ・ＨＥＲＯ スパークマン","しゃりの軍貫","ジョングルグールの幻術師","ゾンビーノ","ジェネティック・ワーウルフ","ライトロード・ビースト ウォルフ","サイバー・ドラゴン","サイバー・ドラゴン","サイバー・ドラゴン","ラブラドライドラゴン","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","フロストザウルス","Ｅ・ＨＥＲＯ ネオス","青眼の白龍","青眼の白龍","青眼の白龍","Ｅ－エマージェンシーコール","おろかな埋葬","トレード・イン","トレード・イン","トレード・イン","闇の量産工場","強欲な壺","強欲な壺","強欲な壺","死者蘇生","死者蘇生","死者蘇生","召喚師のスキル","召喚師のスキル","召喚師のスキル","成金ゴブリン","成金ゴブリン","成金ゴブリン","戦士の生還","増援","調和の宝札","調和の宝札","調和の宝札","天使の施し","天使の施し","天使の施し","貪欲な壺","貪欲な壺","貪欲な壺","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-9007199254740991,name:"FtkChallenge",deckType:"NPC",description:"FtkChallenge",cardNames:["封印されし者の右足","封印されし者の右腕","封印されし者の左足","封印されし者の左腕","封印されしエクゾディア","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン"]},{id:-1e3,name:"図書館エクゾプリセット",deckType:"Preset",description:"プリセット",cardNames:["封印されし者の右足","封印されし者の右腕","封印されし者の左足","封印されし者の左腕","封印されしエクゾディア","王立魔法図書館","王立魔法図書館","王立魔法図書館","召喚僧サモンプリースト","召喚僧サモンプリースト","召喚僧サモンプリースト","アンカモフライト","ダーク・バースト","チキンレース","チキンレース","チキンレース","テラ・フォーミング","トゥーン・ワールド","トゥーンのもくじ","トゥーンのもくじ","トゥーンのもくじ","一時休戦","黄金色の竹光","黄金色の竹光","黄金色の竹光","手札断殺","手札断殺","手札断殺","真刀竹光","成金ゴブリン","成金ゴブリン","成金ゴブリン","打ち出の小槌","打ち出の小槌","無の煉獄","無の煉獄","無の煉獄","妖刀竹光","妖刀竹光","妖刀竹光"]}],cp=e=>{if(!mc(e))return!1;const t=e;return qn(t.id)&&typeof t.name=="string"&&typeof t.description=="string"&&typeof t.lastUsedAt=="string"&&Array.isArray(t.cardNames)&&t.cardNames.every(i=>typeof i=="string")},M=class M{constructor(t,i){o(this,"id");o(this,"name");o(this,"deckType");o(this,"description");o(this,"lastUsedAt");o(this,"cardNames");o(this,"getIllegalCardNames",()=>Array.from(new Set(this.cardNames.filter(t=>!Object.keys(Je).includes(t)))));o(this,"getDisableCardNames",()=>Array.from(new Set(this.cardNames.filter(t=>!Object.keys(Je).includes(t)))));o(this,"createCardInfos",()=>{const t=this.getIllegalCardNames();if(t.length>0)throw new Error(`存在しないカード名からデッキを生成しようとした。${t}`);return this.cardNames.map(i=>Je==null?void 0:Je[i]).filter(i=>i)});o(this,"copy",async()=>M.createNewDeck(this.name,this.description,this.cardNames));o(this,"updateTimestamp",async()=>{await M.tblHeader.update(this.id,t=>({...t,lastUsedAt:new Date}))});o(this,"saveDeckInfo",async t=>{const i=t??this;await M.tblHeader.update(this.id,n=>({...n,name:i.name,description:i.description,deckType:"User",lastUsedAt:new Date}));const a=(await M.tblDetail.getAll()).filter(n=>n.deckId===this.id);await M.tblDetail.delete(a.map(n=>n.id));const r=await M.tblDetail.insertMany(i.cardNames.map((n,s)=>({deckId:this.id,seq:s,name:n,description:""})));return new M(await M.tblHeader.get(this.id),r)});o(this,"delete",async()=>{await M.remove(this.id)});this.id=t.id,this.name=t.name,this.deckType=t.deckType,this.description=t.description,this.lastUsedAt=t.lastUsedAt,this.cardNames=i.filter(a=>a.deckId===this.id).map(a=>a.name)}};o(M,"toJson",t=>{const i=t.map(a=>{const{id:r,name:n,description:s,lastUsedAt:l,cardNames:u}=a;return{id:r,name:n,description:s,lastUsedAt:l,cardNames:u}});return i.forEach(a=>{a.cardNames=a.cardNames.map(r=>Je[r]).sort(Mn).map(r=>r.name)}),JSON.stringify(i,null,2)}),o(M,"createfromJson",async t=>{let i;try{const r=await t.text();i=JSON.parse(r)}catch(r){throw console.error(r),new Error(`${t.name}は正しいJSONファイル形式ではない。`)}if(!Array.isArray(i))throw new Error(`${t.name}は正しいデッキ情報の形式ではない。`);if(!i.length)throw new Error(`${t.name}にデッキ情報が含まれていない。`);const a=i.filter(cp).map(r=>({...r,deckType:"User",id:Number(r.id),lastUsedAt:new Date(r.lastUsedAt)}));if(i.length!==a.length)throw new Error(`${t.name}のデッキ情報${i.length}件のうち、${i.length-a.length}件が正しいデッキ情報の形式ではなかった。`);return a}),o(M,"convertToObjectURL",t=>{const i=M.toJson(t),a=new Blob([i],{type:"text/plain"});return window.URL.createObjectURL(a)}),o(M,"idb"),o(M,"tblHeader"),o(M,"tblDetail"),o(M,"getAllDeckInfo",async t=>{if(t&&(M.idb=t),!M.idb)throw new Error("illegal argument: idb is undefined.");M.tblHeader||(M.tblHeader=new up(M.idb)),M.tblDetail||(M.tblDetail=new dp(M.idb));const i=await M.tblHeader.getAll(),a=await M.tblDetail.getAll();return i.length?i.map(r=>new M(r,a)):[await M.prepareSampleDeck()]}),o(M,"createNewDeck",async(t,i,a,r)=>{const n=await M.tblHeader.insert({name:t,description:i,deckType:"User",lastUsedAt:r??new Date}),s=await M.tblDetail.insertMany(a.map((l,u)=>({deckId:n.id,seq:u,name:l,description:""})));return new M(n,s)}),o(M,"prepareSampleDeck",async()=>{const t=za.find(i=>i.deckType==="Preset")??za.slice(-1)[0];return await M.createNewDeck(t.name,t.description,t.cardNames)}),o(M,"remove",async t=>{await M.tblHeader.delete([t]);const i=(await M.tblDetail.getAll()).filter(a=>a.deckId===t);await M.tblDetail.delete(i.map(a=>a.id))});let Ur=M;class up extends ar{constructor(i){super(i,"TblDeckHeader");o(this,"_prepareInitialRecords",()=>[])}}class dp extends ar{constructor(i){super(i,"TblDeckDetail");o(this,"_prepareInitialRecords",()=>[])}}const Kp=za.map(e=>({...e,lastUsedAt:new Date})).filter(e=>e.id<0);export{Sp as $,wp as A,ti as B,ge as C,jn as D,$p as E,vp as F,Ln as G,hp as H,Ap as I,Gi as J,Je as K,qp as L,nc as M,rc as N,tc as O,ec as P,ic as Q,ac as R,_ as S,Ic as T,Wp as U,kp as V,Vp as W,Za as X,Tp as Y,Up as Z,Pp as _,Y as a,Li as a0,Mn as a1,Np as a2,Op as a3,Fp as a4,Gp as a5,sr as a6,Dp as a7,Ur as a8,$u as a9,ru as aa,qa as ab,Yo as ac,Zp as ad,Hp as ae,Rp as af,Lp as ag,Bp as ah,yp as ai,xp as aj,bp as ak,Xp as al,Qp as am,Ep as an,Mp as ao,Lr as ap,qr as aq,Kp as ar,_a as as,zp as at,_p as au,Cp as av,jp as aw,mp as ax,Ve as b,K as c,oa as d,L as e,X as f,P as g,te as h,Zt as i,at as j,ae as k,Uo as l,Ai as m,wr as n,ft as o,ct as p,F as q,Ht as r,oe as s,G as t,ut as u,gp as v,yt as w,Ne as x,Q as y,ii as z};
