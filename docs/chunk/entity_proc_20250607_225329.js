var bl=Object.defineProperty;var pr=(t,e)=>(e=Symbol[t])?e:Symbol.for("Symbol."+t),gr=t=>{throw TypeError(t)};var kl=(t,e,i)=>e in t?bl(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var o=(t,e,i)=>kl(t,typeof e!="symbol"?e+"":e,i);var hr=(t,e,i)=>{if(e!=null){typeof e!="object"&&typeof e!="function"&&gr("Object expected");var a,r;i&&(a=e[pr("asyncDispose")]),a===void 0&&(a=e[pr("dispose")],i&&(r=a)),typeof a!="function"&&gr("Object not disposable"),r&&(a=function(){try{r.call(this)}catch(n){return Promise.reject(n)}}),t.push([i,a,e])}else i&&t.push([i]);return e},yr=(t,e,i)=>{var a=typeof SuppressedError=="function"?SuppressedError:function(s,l,c,u){return u=Error(c),u.name="SuppressedError",u.error=s,u.suppressed=l,u},r=s=>e=i?new a(s,e,"An error was suppressed during disposal"):(i=!0,s),n=s=>{for(;s=t.pop();)try{var l=s[1]&&s[1].call(s[2]);if(s[0])return Promise.resolve(l).then(n,c=>(r(c),n()))}catch(c){r(c)}if(i)throw e};return n()};import{j as Dl}from"./json_20250607_225329.js";const ka=!1;var Va=Array.isArray,xl=Array.prototype.indexOf,Wa=Array.from,Al=Object.defineProperty,At=Object.getOwnPropertyDescriptor,Xr=Object.getOwnPropertyDescriptors,Pl=Object.prototype,Ml=Array.prototype,Qa=Object.getPrototypeOf;function Fl(t){return typeof t=="function"}const Wt=()=>{};function Ol(t){return typeof(t==null?void 0:t.then)=="function"}function Nl(t){return t()}function Da(t){for(var e=0;e<t.length;e++)t[e]()}const Ee=2,Kr=4,Ji=8,Ii=16,Xe=32,si=64,ki=128,we=256,Di=512,fe=1024,Ke=2048,Bt=4096,We=8192,ea=16384,Yr=32768,ta=65536,Jr=1<<17,Bl=1<<19,Ir=1<<20,Qe=Symbol("$state"),Ll=Symbol("legacy props"),ql=Symbol("");function en(t){return t===this.v}function Rl(t,e){return t!=t?e==e:t!==e||t!==null&&typeof t=="object"||typeof t=="function"}function Xa(t){return!Rl(t,this.v)}function Hl(t){throw new Error("https://svelte.dev/e/effect_in_teardown")}function Zl(){throw new Error("https://svelte.dev/e/effect_in_unowned_derived")}function Gl(t){throw new Error("https://svelte.dev/e/effect_orphan")}function $l(){throw new Error("https://svelte.dev/e/effect_update_depth_exceeded")}function Ul(t){throw new Error("https://svelte.dev/e/props_invalid_value")}function jl(){throw new Error("https://svelte.dev/e/state_descriptors_fixed")}function zl(){throw new Error("https://svelte.dev/e/state_prototype_fixed")}function Vl(){throw new Error("https://svelte.dev/e/state_unsafe_local_read")}function Wl(){throw new Error("https://svelte.dev/e/state_unsafe_mutation")}let li=!1,Ql=!1;function Xl(){li=!0}const Ka=1,Ya=2,tn=4,Kl=8,Yl=16,Jl=1,Il=2,eo=4,to=8,io=16,ao=1,ro=2,no=4,so=1,lo=2,se=Symbol();let W=null;function xi(t){W=t}function ut(t,e=!1,i){W={p:W,c:null,e:null,m:!1,s:t,x:null,l:null},li&&!e&&(W.l={s:null,u:null,r1:[],r2:ue(!1)})}function dt(t){const e=W;if(e!==null){const s=e.e;if(s!==null){var i=Z,a=$;e.e=null;try{for(var r=0;r<s.length;r++){var n=s[r];ke(n.effect),be(n.reaction),Rt(n.fn)}}finally{ke(i),be(a)}}W=e.p,e.m=!0}return{}}function Lt(){return!li||W!==null&&W.l===null}function ue(t,e){var i={f:0,v:t,reactions:null,equals:en,rv:0,wv:0};return i}function oo(t){return an(ue(t))}function Yt(t,e=!1){var a;const i=ue(t);return e||(i.equals=Xa),li&&W!==null&&W.l!==null&&((a=W.l).s??(a.s=[])).push(i),i}function Ai(t,e=!1){return an(Yt(t,e))}function an(t){return $!==null&&!Be&&$.f&Ee&&(Le===null?_o([t]):Le.push(t)),t}function Tp(t,e){return Y(t,qe(()=>P(t))),e}function Y(t,e){return $!==null&&!Be&&Lt()&&$.f&(Ee|Ii)&&(Le===null||!Le.includes(t))&&Wl(),it(t,e)}function it(t,e){return t.equals(e)||(t.v,t.v=e,t.wv=Cn(),rn(t,Ke),Lt()&&Z!==null&&Z.f&fe&&!(Z.f&(Xe|si))&&(ze===null?Co([t]):ze.push(t))),e}function rn(t,e){var i=t.reactions;if(i!==null)for(var a=Lt(),r=i.length,n=0;n<r;n++){var s=i[n],l=s.f;l&Ke||!a&&s===Z||(Re(s,e),l&(fe|we)&&(l&Ee?rn(s,Bt):sa(s)))}}let nn=!1;function Ie(t,e=null,i){if(typeof t!="object"||t===null||Qe in t)return t;const a=Qa(t);if(a!==Pl&&a!==Ml)return t;var r=new Map,n=Va(t),s=ue(0);n&&r.set("length",ue(t.length));var l;return new Proxy(t,{defineProperty(c,u,d){(!("value"in d)||d.configurable===!1||d.enumerable===!1||d.writable===!1)&&jl();var f=r.get(u);return f===void 0?(f=ue(d.value),r.set(u,f)):Y(f,Ie(d.value,l)),!0},deleteProperty(c,u){var d=r.get(u);if(d===void 0)u in c&&r.set(u,ue(se));else{if(n&&typeof u=="string"){var f=r.get("length"),p=Number(u);Number.isInteger(p)&&p<f.v&&Y(f,p)}Y(d,se),vr(s)}return!0},get(c,u,d){var y;if(u===Qe)return t;var f=r.get(u),p=u in c;if(f===void 0&&(!p||(y=At(c,u))!=null&&y.writable)&&(f=ue(Ie(p?c[u]:se,l)),r.set(u,f)),f!==void 0){var h=P(f);return h===se?void 0:h}return Reflect.get(c,u,d)},getOwnPropertyDescriptor(c,u){var d=Reflect.getOwnPropertyDescriptor(c,u);if(d&&"value"in d){var f=r.get(u);f&&(d.value=P(f))}else if(d===void 0){var p=r.get(u),h=p==null?void 0:p.v;if(p!==void 0&&h!==se)return{enumerable:!0,configurable:!0,value:h,writable:!0}}return d},has(c,u){var h;if(u===Qe)return!0;var d=r.get(u),f=d!==void 0&&d.v!==se||Reflect.has(c,u);if(d!==void 0||Z!==null&&(!f||(h=At(c,u))!=null&&h.writable)){d===void 0&&(d=ue(f?Ie(c[u],l):se),r.set(u,d));var p=P(d);if(p===se)return!1}return f},set(c,u,d,f){var D;var p=r.get(u),h=u in c;if(n&&u==="length")for(var y=d;y<p.v;y+=1){var v=r.get(y+"");v!==void 0?Y(v,se):y in c&&(v=ue(se),r.set(y+"",v))}p===void 0?(!h||(D=At(c,u))!=null&&D.writable)&&(p=ue(void 0),Y(p,Ie(d,l)),r.set(u,p)):(h=p.v!==se,Y(p,Ie(d,l)));var g=Reflect.getOwnPropertyDescriptor(c,u);if(g!=null&&g.set&&g.set.call(f,d),!h){if(n&&typeof u=="string"){var m=r.get("length"),T=Number(u);Number.isInteger(T)&&T>=m.v&&Y(m,T+1)}vr(s)}return!0},ownKeys(c){P(s);var u=Reflect.ownKeys(c).filter(p=>{var h=r.get(p);return h===void 0||h.v!==se});for(var[d,f]of r)f.v!==se&&!(d in c)&&u.push(d);return u},setPrototypeOf(){zl()}})}function vr(t,e=1){Y(t,t.v+e)}function mr(t){return t!==null&&typeof t=="object"&&Qe in t?t[Qe]:t}function sn(t,e){return Object.is(mr(t),mr(e))}var Sr,ln,on,cn;function co(){if(Sr===void 0){Sr=window,ln=/Firefox/.test(navigator.userAgent);var t=Element.prototype,e=Node.prototype;on=At(e,"firstChild").get,cn=At(e,"nextSibling").get,t.__click=void 0,t.__className="",t.__attributes=null,t.__styles=null,t.__e=void 0,Text.prototype.__t=void 0}}function ia(t=""){return document.createTextNode(t)}function Pi(t){return on.call(t)}function aa(t){return cn.call(t)}function L(t,e){return Pi(t)}function Ne(t,e){{var i=Pi(t);return i instanceof Comment&&i.data===""?aa(i):i}}function Q(t,e=1,i=!1){let a=t;for(;e--;)a=aa(a);return a}function uo(t){t.textContent=""}function Jt(t){var e=Ee|Ke,i=$!==null&&$.f&Ee?$:null;return Z===null||i!==null&&i.f&we?e|=we:Z.f|=Ir,{ctx:W,deps:null,effects:null,equals:en,f:e,fn:t,reactions:null,rv:0,v:null,wv:0,parent:i??Z}}function at(t){const e=Jt(t);return e.equals=Xa,e}function un(t){var e=t.effects;if(e!==null){t.effects=null;for(var i=0;i<e.length;i+=1)nt(e[i])}}function fo(t){for(var e=t.parent;e!==null;){if(!(e.f&Ee))return e;e=e.parent}return null}function po(t){var e,i=Z;ke(fo(t));try{un(t),e=wn(t)}finally{ke(i)}return e}function dn(t){var e=po(t),i=(tt||t.f&we)&&t.deps!==null?Bt:fe;Re(t,i),t.equals(e)||(t.v=e,t.wv=Cn())}function fn(t){Z===null&&$===null&&Gl(),$!==null&&$.f&we&&Z===null&&Zl(),er&&Hl()}function go(t,e){var i=e.last;i===null?e.last=e.first=t:(i.next=t,t.prev=i,e.last=t)}function qt(t,e,i,a=!0){var r=(t&si)!==0,n=Z,s={ctx:W,deps:null,nodes_start:null,nodes_end:null,f:t|Ke,first:null,fn:e,last:null,next:null,parent:r?null:n,prev:null,teardown:null,transitions:null,wv:0};if(i){var l=Pt;try{Cr(!0),tr(s),s.f|=Yr}catch(d){throw nt(s),d}finally{Cr(l)}}else e!==null&&sa(s);var c=i&&s.deps===null&&s.first===null&&s.nodes_start===null&&s.teardown===null&&(s.f&(Ir|ki))===0;if(!c&&!r&&a&&(n!==null&&go(s,n),$!==null&&$.f&Ee)){var u=$;(u.effects??(u.effects=[])).push(s)}return s}function Ja(t){const e=qt(Ji,null,!1);return Re(e,fe),e.teardown=t,e}function _r(t){fn();var e=Z!==null&&(Z.f&Xe)!==0&&W!==null&&!W.m;if(e){var i=W;(i.e??(i.e=[])).push({fn:t,effect:Z,reaction:$})}else{var a=Rt(t);return a}}function ho(t){return fn(),Ht(t)}function yo(t){const e=qt(si,t,!0);return(i={})=>new Promise(a=>{i.outro?mt(e,()=>{nt(e),a(void 0)}):(nt(e),a(void 0))})}function Rt(t){return qt(Kr,t,!1)}function Ht(t){return qt(Ji,t,!0)}function te(t,e=[],i=Jt){const a=e.map(i);return ra(()=>t(...a.map(P)))}function ra(t,e=0){return qt(Ji|Ii|e,t,!0)}function _t(t,e=!0){return qt(Ji|Xe,t,!0,e)}function pn(t){var e=t.teardown;if(e!==null){const i=er,a=$;Tr(!0),be(null);try{e.call(null)}finally{Tr(i),be(a)}}}function gn(t,e=!1){var i=t.first;for(t.first=t.last=null;i!==null;){var a=i.next;nt(i,e),i=a}}function vo(t){for(var e=t.first;e!==null;){var i=e.next;e.f&Xe||nt(e),e=i}}function nt(t,e=!0){var i=!1;if((e||t.f&Bl)&&t.nodes_start!==null){for(var a=t.nodes_start,r=t.nodes_end;a!==null;){var n=a===r?null:aa(a);a.remove(),a=n}i=!0}gn(t,e&&!i),Oi(t,0),Re(t,ea);var s=t.transitions;if(s!==null)for(const c of s)c.stop();pn(t);var l=t.parent;l!==null&&l.first!==null&&hn(t),t.next=t.prev=t.teardown=t.ctx=t.deps=t.fn=t.nodes_start=t.nodes_end=null}function hn(t){var e=t.parent,i=t.prev,a=t.next;i!==null&&(i.next=a),a!==null&&(a.prev=i),e!==null&&(e.first===t&&(e.first=a),e.last===t&&(e.last=i))}function mt(t,e){var i=[];Ia(t,i,!0),yn(i,()=>{nt(t),e&&e()})}function yn(t,e){var i=t.length;if(i>0){var a=()=>--i||e();for(var r of t)r.out(a)}else e()}function Ia(t,e,i){if(!(t.f&We)){if(t.f^=We,t.transitions!==null)for(const s of t.transitions)(s.is_global||i)&&e.push(s);for(var a=t.first;a!==null;){var r=a.next,n=(a.f&ta)!==0||(a.f&Xe)!==0;Ia(a,e,n?i:!1),a=r}}}function Nt(t){vn(t,!0)}function vn(t,e){if(t.f&We){t.f^=We,t.f&fe||(t.f^=fe),oi(t)&&(Re(t,Ke),sa(t));for(var i=t.first;i!==null;){var a=i.next,r=(i.f&ta)!==0||(i.f&Xe)!==0;vn(i,r?e:!1),i=a}if(t.transitions!==null)for(const n of t.transitions)(n.is_global||e)&&n.in()}}let Mi=!1,xa=[];function mn(){Mi=!1;const t=xa.slice();xa=[],Da(t)}function Ct(t){Mi||(Mi=!0,queueMicrotask(mn)),xa.push(t)}function mo(){Mi&&mn()}const Sn=0,So=1;let wi=!1,Ei=Sn,It=!1,ei=null,Pt=!1,er=!1;function Cr(t){Pt=t}function Tr(t){er=t}let yt=[],Mt=0;let $=null,Be=!1;function be(t){$=t}let Z=null;function ke(t){Z=t}let Le=null;function _o(t){Le=t}let de=null,ve=0,ze=null;function Co(t){ze=t}let _n=1,Fi=0,tt=!1,et=null;function Cn(){return++_n}function oi(t){var f;var e=t.f;if(e&Ke)return!0;if(e&Bt){var i=t.deps,a=(e&we)!==0;if(i!==null){var r,n,s=(e&Di)!==0,l=a&&Z!==null&&!tt,c=i.length;if(s||l){var u=t,d=u.parent;for(r=0;r<c;r++)n=i[r],(s||!((f=n==null?void 0:n.reactions)!=null&&f.includes(u)))&&(n.reactions??(n.reactions=[])).push(u);s&&(u.f^=Di),l&&d!==null&&!(d.f&we)&&(u.f^=we)}for(r=0;r<c;r++)if(n=i[r],oi(n)&&dn(n),n.wv>t.wv)return!0}(!a||Z!==null&&!tt)&&Re(t,fe)}return!1}function To(t,e){for(var i=e;i!==null;){if(i.f&ki)try{i.fn(t);return}catch{i.f^=ki}i=i.parent}throw wi=!1,t}function wo(t){return(t.f&ea)===0&&(t.parent===null||(t.parent.f&ki)===0)}function na(t,e,i,a){if(wi){if(i===null&&(wi=!1),wo(e))throw t;return}i!==null&&(wi=!0);{To(t,e);return}}function Tn(t,e,i=!0){var a=t.reactions;if(a!==null)for(var r=0;r<a.length;r++){var n=a[r];n.f&Ee?Tn(n,e,!1):e===n&&(i?Re(n,Ke):n.f&fe&&Re(n,Bt),sa(n))}}function wn(t){var h;var e=de,i=ve,a=ze,r=$,n=tt,s=Le,l=W,c=Be,u=t.f;de=null,ve=0,ze=null,$=u&(Xe|si)?null:t,tt=(u&we)!==0&&(!Pt||r===null||c),Le=null,xi(t.ctx),Be=!1,Fi++;try{var d=(0,t.fn)(),f=t.deps;if(de!==null){var p;if(Oi(t,ve),f!==null&&ve>0)for(f.length=ve+de.length,p=0;p<de.length;p++)f[ve+p]=de[p];else t.deps=f=de;if(!tt)for(p=ve;p<f.length;p++)((h=f[p]).reactions??(h.reactions=[])).push(t)}else f!==null&&ve<f.length&&(Oi(t,ve),f.length=ve);if(Lt()&&ze!==null&&!Be&&f!==null&&!(t.f&(Ee|Bt|Ke)))for(p=0;p<ze.length;p++)Tn(ze[p],t);return r!==null&&Fi++,d}finally{de=e,ve=i,ze=a,$=r,tt=n,Le=s,xi(l),Be=c}}function Eo(t,e){let i=e.reactions;if(i!==null){var a=xl.call(i,t);if(a!==-1){var r=i.length-1;r===0?i=e.reactions=null:(i[a]=i[r],i.pop())}}i===null&&e.f&Ee&&(de===null||!de.includes(e))&&(Re(e,Bt),e.f&(we|Di)||(e.f^=Di),un(e),Oi(e,0))}function Oi(t,e){var i=t.deps;if(i!==null)for(var a=e;a<i.length;a++)Eo(t,i[a])}function tr(t){var e=t.f;if(!(e&ea)){Re(t,fe);var i=Z,a=W;Z=t;try{e&Ii?vo(t):gn(t),pn(t);var r=wn(t);t.teardown=typeof r=="function"?r:null,t.wv=_n;var n=t.deps,s;ka&&Ql&&t.f&Ke}catch(l){na(l,t,i,a||t.ctx)}finally{Z=i}}}function En(){if(Mt>1e3){Mt=0;try{$l()}catch(t){if(ei!==null)na(t,ei,null);else throw t}}Mt++}function bn(t){var e=t.length;if(e!==0){En();var i=Pt;Pt=!0;try{for(var a=0;a<e;a++){var r=t[a];r.f&fe||(r.f^=fe);var n=Do(r);bo(n)}}finally{Pt=i}}}function bo(t){var e=t.length;if(e!==0)for(var i=0;i<e;i++){var a=t[i];if(!(a.f&(ea|We)))try{oi(a)&&(tr(a),a.deps===null&&a.first===null&&a.nodes_start===null&&(a.teardown===null?hn(a):a.fn=null))}catch(r){na(r,a,null,a.ctx)}}}function ko(){if(It=!1,Mt>1001)return;const t=yt;yt=[],bn(t),It||(Mt=0,ei=null)}function sa(t){Ei===Sn&&(It||(It=!0,queueMicrotask(ko))),ei=t;for(var e=t;e.parent!==null;){e=e.parent;var i=e.f;if(i&(si|Xe)){if(!(i&fe))return;e.f^=fe}}yt.push(e)}function Do(t){var e=[],i=t.first;e:for(;i!==null;){var a=i.f,r=(a&Xe)!==0,n=r&&(a&fe)!==0,s=i.next;if(!n&&!(a&We)){if(a&Kr)e.push(i);else if(r)i.f^=fe;else{var l=$;try{$=i,oi(i)&&tr(i)}catch(d){na(d,i,null,i.ctx)}finally{$=l}}var c=i.first;if(c!==null){i=c;continue}}if(s===null){let d=i.parent;for(;d!==null;){if(t===d)break e;var u=d.next;if(u!==null){i=u;continue e}d=d.parent}}i=s}return e}function ir(t){var e=Ei,i=yt;try{En();const r=[];Ei=So,yt=r,It=!1,bn(i);var a=t==null?void 0:t();return mo(),(yt.length>0||r.length>0)&&ir(),Mt=0,ei=null,a}finally{Ei=e,yt=i}}async function wp(){await Promise.resolve(),ir()}function P(t){var e=t.f,i=(e&Ee)!==0;if(et!==null&&et.add(t),$!==null&&!Be){Le!==null&&Le.includes(t)&&Vl();var a=$.deps;t.rv<Fi&&(t.rv=Fi,de===null&&a!==null&&a[ve]===t?ve++:de===null?de=[t]:(!tt||!de.includes(t))&&de.push(t))}else if(i&&t.deps===null&&t.effects===null){var r=t,n=r.parent;n!==null&&!(n.f&we)&&(r.f^=we)}return i&&(r=t,oi(r)&&dn(r)),t.v}function xo(t){var e=et;et=new Set;var i=et,a;try{if(qe(t),e!==null)for(a of et)e.add(a)}finally{et=e}return i}function Ep(t){var e=xo(()=>qe(t));for(var i of e)if(i.f&Jr)for(const a of i.deps||[])a.f&Ee||it(a,a.v);else it(i,i.v)}function qe(t){var e=Be;try{return Be=!0,t()}finally{Be=e}}const Ao=-7169;function Re(t,e){t.f=t.f&Ao|e}function Po(t){if(!(typeof t!="object"||!t||t instanceof EventTarget)){if(Qe in t)Aa(t);else if(!Array.isArray(t))for(let e in t){const i=t[e];typeof i=="object"&&i&&Qe in i&&Aa(i)}}}function Aa(t,e=new Set){if(typeof t=="object"&&t!==null&&!(t instanceof EventTarget)&&!e.has(t)){e.add(t),t instanceof Date&&t.getTime();for(let a in t)try{Aa(t[a],e)}catch{}const i=Qa(t);if(i!==Object.prototype&&i!==Array.prototype&&i!==Map.prototype&&i!==Set.prototype&&i!==Date.prototype){const a=Xr(i);for(let r in a){const n=a[r].get;if(n)try{n.call(t)}catch{}}}}}const Mo=["touchstart","touchmove"];function Fo(t){return Mo.includes(t)}let wr=!1;function Oo(){wr||(wr=!0,document.addEventListener("reset",t=>{Promise.resolve().then(()=>{var e;if(!t.defaultPrevented)for(const i of t.target.elements)(e=i.__on_r)==null||e.call(i)})},{capture:!0}))}function No(t,e,i,a=!0){a&&i();for(var r of e)t.addEventListener(r,i);Ja(()=>{for(var n of e)t.removeEventListener(n,i)})}function la(t){var e=$,i=Z;be(null),ke(null);try{return t()}finally{be(e),ke(i)}}function ci(t,e,i,a=i){t.addEventListener(e,()=>la(i));const r=t.__on_r;r?t.__on_r=()=>{r(),a(!0)}:t.__on_r=()=>a(!0),Oo()}const kn=new Set,Pa=new Set;function Bo(t,e,i,a={}){function r(n){if(a.capture||Qt.call(e,n),!n.cancelBubble)return la(()=>i==null?void 0:i.call(this,n))}return t.startsWith("pointer")||t.startsWith("touch")||t==="wheel"?Ct(()=>{e.addEventListener(t,r,a)}):e.addEventListener(t,r,a),r}function pt(t,e,i,a,r){var n={capture:a,passive:r},s=Bo(t,e,i,n);(e===document.body||e===window||e===document)&&Ja(()=>{e.removeEventListener(t,s,n)})}function oa(t){for(var e=0;e<t.length;e++)kn.add(t[e]);for(var i of Pa)i(t)}function Qt(t){var T;var e=this,i=e.ownerDocument,a=t.type,r=((T=t.composedPath)==null?void 0:T.call(t))||[],n=r[0]||t.target,s=0,l=t.__root;if(l){var c=r.indexOf(l);if(c!==-1&&(e===document||e===window)){t.__root=e;return}var u=r.indexOf(e);if(u===-1)return;c<=u&&(s=c)}if(n=r[s]||t.target,n!==e){Al(t,"currentTarget",{configurable:!0,get(){return n||i}});var d=$,f=Z;be(null),ke(null);try{for(var p,h=[];n!==null;){var y=n.assignedSlot||n.parentNode||n.host||null;try{var v=n["__"+a];if(v!==void 0&&!n.disabled)if(Va(v)){var[g,...m]=v;g.apply(n,[t,...m])}else v.call(n,t)}catch(D){p?h.push(D):p=D}if(t.cancelBubble||y===e||y===null)break;n=y}if(p){for(let D of h)queueMicrotask(()=>{throw D});throw p}}finally{t.__root=e,delete t.currentTarget,be(d),ke(f)}}}function Lo(t){var e=document.createElement("template");return e.innerHTML=t,e.content}function Ni(t,e){var i=Z;i.nodes_start===null&&(i.nodes_start=t,i.nodes_end=e)}function G(t,e){var i=(e&so)!==0,a=(e&lo)!==0,r,n=!t.startsWith("<!>");return()=>{r===void 0&&(r=Lo(n?t:"<!>"+t),i||(r=Pi(r)));var s=a||ln?document.importNode(r,!0):r.cloneNode(!0);if(i){var l=Pi(s),c=s.lastChild;Ni(l,c)}else Ni(s,s);return s}}function bp(t=""){{var e=ia(t+"");return Ni(e,e),e}}function vt(){var t=document.createDocumentFragment(),e=document.createComment(""),i=ia();return t.append(e,i),Ni(e,i),t}function O(t,e){t!==null&&t.before(e)}let Ma=!0;function ge(t,e){var i=e==null?"":typeof e=="object"?e+"":e;i!==(t.__t??(t.__t=t.nodeValue))&&(t.__t=i,t.nodeValue=i+"")}function kp(t,e){return qo(t,e)}const bt=new Map;function qo(t,{target:e,anchor:i,props:a={},events:r,context:n,intro:s=!0}){co();var l=new Set,c=f=>{for(var p=0;p<f.length;p++){var h=f[p];if(!l.has(h)){l.add(h);var y=Fo(h);e.addEventListener(h,Qt,{passive:y});var v=bt.get(h);v===void 0?(document.addEventListener(h,Qt,{passive:y}),bt.set(h,1)):bt.set(h,v+1)}}};c(Wa(kn)),Pa.add(c);var u=void 0,d=yo(()=>{var f=i??e.appendChild(ia());return _t(()=>{if(n){ut({});var p=W;p.c=n}r&&(a.$$events=r),Ma=s,u=t(f,a)||{},Ma=!0,n&&dt()}),()=>{var y;for(var p of l){e.removeEventListener(p,Qt);var h=bt.get(p);--h===0?(document.removeEventListener(p,Qt),bt.delete(p)):bt.set(p,h)}Pa.delete(c),f!==i&&((y=f.parentNode)==null||y.removeChild(f))}});return Ro.set(u,d),u}let Ro=new WeakMap;const ga=0,Si=1,ha=2;function Dp(t,e,i,a,r){var n=t,s=Lt(),l=W,c=se,u,d,f,p=(s?ue:Yt)(void 0),h=(s?ue:Yt)(void 0),y=!1;function v(m,T){y=!0,T&&(ke(g),be(g),xi(l));try{m===ga&&i&&(u?Nt(u):u=_t(()=>i(n))),m===Si&&a&&(d?Nt(d):d=_t(()=>a(n,p))),m!==ga&&u&&mt(u,()=>u=null),m!==Si&&d&&mt(d,()=>d=null),m!==ha&&f&&mt(f,()=>f=null)}finally{T&&(xi(null),be(null),ke(null),ir())}}var g=ra(()=>{if(c!==(c=e())){if(Ol(c)){var m=c;y=!1,m.then(T=>{m===c&&(it(p,T),v(Si,!0))},T=>{if(m===c)throw it(h,T),v(ha,!0),h.v}),Ct(()=>{y||v(ga,!0)})}else it(p,c),v(Si,!1);return()=>c=se}})}function X(t,e,i=!1){var a=t,r=null,n=null,s=se,l=i?ta:0,c=!1;const u=(f,p=!0)=>{c=!0,d(p,f)},d=(f,p)=>{s!==(s=f)&&(s?(r?Nt(r):p&&(r=_t(()=>p(a))),n&&mt(n,()=>{n=null})):(n?Nt(n):p&&(n=_t(()=>p(a))),r&&mt(r,()=>{r=null})))};ra(()=>{c=!1,e(u),c||d(null,null)},l)}let bi=null;function ti(t,e){return e}function Ho(t,e,i,a){for(var r=[],n=e.length,s=0;s<n;s++)Ia(e[s].e,r,!0);var l=n>0&&r.length===0&&i!==null;if(l){var c=i.parentNode;uo(c),c.append(i),a.clear(),Ye(t,e[0].prev,e[n-1].next)}yn(r,()=>{for(var u=0;u<n;u++){var d=e[u];l||(a.delete(d.k),Ye(t,d.prev,d.next)),nt(d.e,!l)}})}function ii(t,e,i,a,r,n=null){var s=t,l={flags:e,items:new Map,first:null},c=(e&tn)!==0;if(c){var u=t;s=u.appendChild(ia())}var d=null,f=!1,p=at(()=>{var h=i();return Va(h)?h:h==null?[]:Wa(h)});ra(()=>{var h=P(p),y=h.length;f&&y===0||(f=y===0,Zo(h,l,s,r,e,a,i),n!==null&&(y===0?d?Nt(d):d=_t(()=>n(s)):d!==null&&mt(d,()=>{d=null})),P(p))})}function Zo(t,e,i,a,r,n,s){var xe,_e,zt,yi;var l=(r&Kl)!==0,c=(r&(Ka|Ya))!==0,u=t.length,d=e.items,f=e.first,p=f,h,y=null,v,g=[],m=[],T,D,w,A;if(l)for(A=0;A<u;A+=1)T=t[A],D=n(T,A),w=d.get(D),w!==void 0&&((xe=w.a)==null||xe.measure(),(v??(v=new Set)).add(w));for(A=0;A<u;A+=1){if(T=t[A],D=n(T,A),w=d.get(D),w===void 0){var J=p?p.e.nodes_start:i;y=$o(J,e,y,y===null?e.first:y.next,T,D,A,a,r,s),d.set(D,y),g=[],m=[],p=y.next;continue}if(c&&Go(w,T,A,r),w.e.f&We&&(Nt(w.e),l&&((_e=w.a)==null||_e.unfix(),(v??(v=new Set)).delete(w))),w!==p){if(h!==void 0&&h.has(w)){if(g.length<m.length){var pe=m[0],q;y=pe.prev;var N=g[0],E=g[g.length-1];for(q=0;q<g.length;q+=1)Er(g[q],pe,i);for(q=0;q<m.length;q+=1)h.delete(m[q]);Ye(e,N.prev,E.next),Ye(e,y,N),Ye(e,E,pe),p=pe,y=E,A-=1,g=[],m=[]}else h.delete(w),Er(w,p,i),Ye(e,w.prev,w.next),Ye(e,w,y===null?e.first:y.next),Ye(e,y,w),y=w;continue}for(g=[],m=[];p!==null&&p.k!==D;)p.e.f&We||(h??(h=new Set)).add(p),m.push(p),p=p.next;if(p===null)continue;w=p}g.push(w),y=w,p=w.next}if(p!==null||h!==void 0){for(var ie=h===void 0?[]:Wa(h);p!==null;)p.e.f&We||ie.push(p),p=p.next;var I=ie.length;if(I>0){var ye=r&tn&&u===0?i:null;if(l){for(A=0;A<I;A+=1)(zt=ie[A].a)==null||zt.measure();for(A=0;A<I;A+=1)(yi=ie[A].a)==null||yi.fix()}Ho(e,ie,ye,d)}}l&&Ct(()=>{var vi;if(v!==void 0)for(w of v)(vi=w.a)==null||vi.apply()}),Z.first=e.first&&e.first.e,Z.last=y&&y.e}function Go(t,e,i,a){a&Ka&&it(t.v,e),a&Ya?it(t.i,i):t.i=i}function $o(t,e,i,a,r,n,s,l,c,u){var d=bi,f=(c&Ka)!==0,p=(c&Yl)===0,h=f?p?Yt(r):ue(r):r,y=c&Ya?ue(s):s,v={i:y,v:h,k:n,a:null,e:null,prev:i,next:a};bi=v;try{return v.e=_t(()=>l(t,h,y,u),nn),v.e.prev=i&&i.e,v.e.next=a&&a.e,i===null?e.first=v:(i.next=v,i.e.next=v.e),a!==null&&(a.prev=v,a.e.prev=v.e),v}finally{bi=d}}function Er(t,e,i){for(var a=t.next?t.next.e.nodes_start:i,r=e?e.e.nodes_start:i,n=t.e.nodes_start;n!==a;){var s=aa(n);r.before(n),n=s}}function Ye(t,e,i){e===null?t.first=i:(e.next=i,e.e.next=i&&i.e),i!==null&&(i.prev=e,i.e.prev=e&&e.e)}function Fa(t,e,i,a,r){var l;var n=(l=e.$$slots)==null?void 0:l[i],s=!1;n===!0&&(n=e[i==="default"?"children":i],s=!0),n===void 0||n(t,s?()=>a:a)}function Dn(t){var e,i,a="";if(typeof t=="string"||typeof t=="number")a+=t;else if(typeof t=="object")if(Array.isArray(t)){var r=t.length;for(e=0;e<r;e++)t[e]&&(i=Dn(t[e]))&&(a&&(a+=" "),a+=i)}else for(i in t)t[i]&&(a&&(a+=" "),a+=i);return a}function Uo(){for(var t,e,i=0,a="",r=arguments.length;i<r;i++)(t=arguments[i])&&(e=Dn(t))&&(a&&(a+=" "),a+=e);return a}function gt(t){return typeof t=="object"?Uo(t):t??""}function xp(t,e){var i=t.__attributes??(t.__attributes={});i.value===(i.value=e??void 0)||t.value===e&&(e!==0||t.nodeName!=="PROGRESS")||(t.value=e??"")}function Ap(t,e){var i=t.__attributes??(t.__attributes={});i.checked!==(i.checked=e??void 0)&&(t.checked=e)}function br(t,e,i,a){var r=t.__attributes??(t.__attributes={});r[e]!==(r[e]=i)&&(e==="style"&&"__styles"in t&&(t.__styles={}),e==="loading"&&(t[ql]=i),i==null?t.removeAttribute(e):typeof i!="string"&&jo(t).includes(e)?t[e]=i:t.setAttribute(e,i))}var kr=new Map;function jo(t){var e=kr.get(t.nodeName);if(e)return e;kr.set(t.nodeName,e=[]);for(var i,a=t,r=Element.prototype;r!==a;){i=Xr(a);for(var n in i)i[n].set&&e.push(n);a=Qa(a)}return e}function ae(t,e,i){var a=t.__className,r=zo(e,i);(a!==r||nn)&&(e==null&&!i?t.removeAttribute("class"):t.className=r,t.__className=r)}function zo(t,e){return(t??"")+(e?" "+e:"")}const Vo=()=>performance.now(),Ve={tick:t=>requestAnimationFrame(t),now:()=>Vo(),tasks:new Set};function xn(){const t=Ve.now();Ve.tasks.forEach(e=>{e.c(t)||(Ve.tasks.delete(e),e.f())}),Ve.tasks.size!==0&&Ve.tick(xn)}function Wo(t){let e;return Ve.tasks.size===0&&Ve.tick(xn),{promise:new Promise(i=>{Ve.tasks.add(e={c:t,f:i})}),abort(){Ve.tasks.delete(e)}}}function _i(t,e){la(()=>{t.dispatchEvent(new CustomEvent(e))})}function Qo(t){if(t==="float")return"cssFloat";if(t==="offset")return"cssOffset";if(t.startsWith("--"))return t;const e=t.split("-");return e.length===1?e[0]:e[0]+e.slice(1).map(i=>i[0].toUpperCase()+i.slice(1)).join("")}function Dr(t){const e={},i=t.split(";");for(const a of i){const[r,n]=a.split(":");if(!r||n===void 0)break;const s=Qo(r.trim());e[s]=n.trim()}return e}const Xo=t=>t;function Pp(t,e,i){var a=bi,r,n,s,l=null;a.a??(a.a={element:t,measure(){r=this.element.getBoundingClientRect()},apply(){if(s==null||s.abort(),n=this.element.getBoundingClientRect(),r.left!==n.left||r.right!==n.right||r.top!==n.top||r.bottom!==n.bottom){const c=e()(this.element,{from:r,to:n},i==null?void 0:i());s=Bi(this.element,c,void 0,1,()=>{s==null||s.abort(),s=void 0})}},fix(){if(!t.getAnimations().length){var{position:c,width:u,height:d}=getComputedStyle(t);if(c!=="absolute"&&c!=="fixed"){var f=t.style;l={position:f.position,width:f.width,height:f.height,transform:f.transform},f.position="absolute",f.width=u,f.height=d;var p=t.getBoundingClientRect();if(r.left!==p.left||r.top!==p.top){var h=`translate(${r.left-p.left}px, ${r.top-p.top}px)`;f.transform=f.transform?`${f.transform} ${h}`:h}}}},unfix(){if(l){var c=t.style;c.position=l.position,c.width=l.width,c.height=l.height,c.transform=l.transform}}}),a.a.element=t}function Mp(t,e,i,a){var r=(t&ao)!==0,n=(t&ro)!==0,s=r&&n,l=(t&no)!==0,c=s?"both":r?"in":"out",u,d=e.inert,f=e.style.overflow,p,h;function y(){var D=$,w=Z;be(null),ke(null);try{return u??(u=i()(e,(a==null?void 0:a())??{},{direction:c}))}finally{be(D),ke(w)}}var v={is_global:l,in(){var D;if(e.inert=d,!r){h==null||h.abort(),(D=h==null?void 0:h.reset)==null||D.call(h);return}n||p==null||p.abort(),_i(e,"introstart"),p=Bi(e,y(),h,1,()=>{_i(e,"introend"),p==null||p.abort(),p=u=void 0,e.style.overflow=f})},out(D){if(!n){D==null||D(),u=void 0;return}e.inert=!0,_i(e,"outrostart"),h=Bi(e,y(),p,0,()=>{_i(e,"outroend"),D==null||D()})},stop:()=>{p==null||p.abort(),h==null||h.abort()}},g=Z;if((g.transitions??(g.transitions=[])).push(v),r&&Ma){var m=l;if(!m){for(var T=g.parent;T&&T.f&ta;)for(;(T=T.parent)&&!(T.f&Ii););m=!T||(T.f&Yr)!==0}m&&Rt(()=>{qe(()=>v.in())})}}function Bi(t,e,i,a,r){var n=a===1;if(Fl(e)){var s,l=!1;return Ct(()=>{if(!l){var g=e({direction:n?"in":"out"});s=Bi(t,g,i,a,r)}}),{abort:()=>{l=!0,s==null||s.abort()},deactivate:()=>s.deactivate(),reset:()=>s.reset(),t:()=>s.t()}}if(i==null||i.deactivate(),!(e!=null&&e.duration))return r(),{abort:Wt,deactivate:Wt,reset:Wt,t:()=>a};const{delay:c=0,css:u,tick:d,easing:f=Xo}=e;var p=[];if(n&&i===void 0&&(d&&d(0,1),u)){var h=Dr(u(0,1));p.push(h,h)}var y=()=>1-a,v=t.animate(p,{duration:c});return v.onfinish=()=>{var g=(i==null?void 0:i.t())??1-a;i==null||i.abort();var m=a-g,T=e.duration*Math.abs(m),D=[];if(T>0){var w=!1;if(u)for(var A=Math.ceil(T/16.666666666666668),J=0;J<=A;J+=1){var pe=g+m*f(J/A),q=Dr(u(pe,1-pe));D.push(q),w||(w=q.overflow==="hidden")}w&&(t.style.overflow="hidden"),y=()=>{var N=v.currentTime;return g+m*f(N/T)},d&&Wo(()=>{if(v.playState!=="running")return!1;var N=y();return d(N,1-N),!0})}v=t.animate(D,{duration:T,fill:"forwards"}),v.onfinish=()=>{y=()=>a,d==null||d(a,1-a),r()}},{abort:()=>{v&&(v.cancel(),v.effect=null,v.onfinish=Wt)},deactivate:()=>{r=Wt},reset:()=>{a===0&&(d==null||d(1,0))},t:()=>y()}}function Fp(t,e,i=e){var a=Lt();ci(t,"input",r=>{var n=r?t.defaultValue:t.value;if(n=va(t)?ma(n):n,i(n),a&&n!==(n=e())){var s=t.selectionStart,l=t.selectionEnd;t.value=n??"",l!==null&&(t.selectionStart=s,t.selectionEnd=Math.min(l,t.value.length))}}),qe(e)==null&&t.value&&i(va(t)?ma(t.value):t.value),Ht(()=>{var r=e();va(t)&&r===ma(t.value)||t.type==="date"&&!r&&!t.value||r!==t.value&&(t.value=r??"")})}const ya=new Set;function Op(t,e,i,a,r=a){var n=i.getAttribute("type")==="checkbox",s=t;if(e!==null)for(var l of e)s=s[l]??(s[l]=[]);s.push(i),ci(i,"change",()=>{var c=i.__value;n&&(c=Ko(s,c,i.checked)),r(c)},()=>r(n?[]:null)),Ht(()=>{var c=a();n?(c=c||[],i.checked=c.includes(i.__value)):i.checked=sn(i.__value,c)}),Ja(()=>{var c=s.indexOf(i);c!==-1&&s.splice(c,1)}),ya.has(s)||(ya.add(s),Ct(()=>{s.sort((c,u)=>c.compareDocumentPosition(u)===4?-1:1),ya.delete(s)})),Ct(()=>{})}function Np(t,e,i=e){ci(t,"change",a=>{var r=a?t.defaultChecked:t.checked;i(r)}),qe(e)==null&&i(t.checked),Ht(()=>{var a=e();t.checked=!!a})}function Ko(t,e,i){for(var a=new Set,r=0;r<t.length;r+=1)t[r].checked&&a.add(t[r].__value);return i||a.delete(e),Array.from(a)}function va(t){var e=t.type;return e==="number"||e==="range"}function ma(t){return t===""?null:+t}function Bp(t,e,i=e){ci(t,"change",()=>{i(t.files)}),Ht(()=>{t.files=e()})}function An(t,e,i){if(t.multiple)return Jo(t,e);for(var a of t.options){var r=Xt(a);if(sn(r,e)){a.selected=!0;return}}(!i||e!==void 0)&&(t.selectedIndex=-1)}function Yo(t,e){Rt(()=>{var i=new MutationObserver(()=>{var a=t.__value;An(t,a)});return i.observe(t,{childList:!0,subtree:!0,attributes:!0,attributeFilter:["value"]}),()=>{i.disconnect()}})}function Lp(t,e,i=e){var a=!0;ci(t,"change",r=>{var n=r?"[selected]":":checked",s;if(t.multiple)s=[].map.call(t.querySelectorAll(n),Xt);else{var l=t.querySelector(n)??t.querySelector("option:not([disabled])");s=l&&Xt(l)}i(s)}),Rt(()=>{var r=e();if(An(t,r,a),a&&r===void 0){var n=t.querySelector(":checked");n!==null&&(r=Xt(n),i(r))}t.__value=r,a=!1}),Yo(t)}function Jo(t,e){for(var i of t.options)i.selected=~e.indexOf(Xt(i))}function Xt(t){return"__value"in t?t.__value:t.value}function xr(t,e){return t===e||(t==null?void 0:t[Qe])===e}function qp(t={},e,i,a){return Rt(()=>{var r,n;return Ht(()=>{r=n,n=[],qe(()=>{t!==i(...n)&&(e(t,...n),r&&xr(i(...r),t)&&e(null,...r))})}),()=>{Ct(()=>{n&&xr(i(...n),t)&&e(null,...n)})}}),t}function Rp(t,e){No(window,["resize"],()=>la(()=>e(window[t])))}function Zt(t=!1){const e=W,i=e.l.u;if(!i)return;let a=()=>Po(e.s);if(t){let r=0,n={};const s=Jt(()=>{let l=!1;const c=e.s;for(const u in c)c[u]!==n[u]&&(n[u]=c[u],l=!0);return l&&r++,r});a=()=>P(s)}i.b.length&&ho(()=>{Ar(e,a),Da(i.b)}),_r(()=>{const r=qe(()=>i.m.map(Nl));return()=>{for(const n of r)typeof n=="function"&&n()}}),i.a.length&&_r(()=>{Ar(e,a),Da(i.a)})}function Ar(t,e){if(t.l.s)for(const i of t.l.s)P(i);e()}let Ci=!1;function Io(t){var e=Ci;try{return Ci=!1,[t(),Ci]}finally{Ci=e}}function K(t,e,i,a){var pe;var r=(i&Jl)!==0,n=!li||(i&Il)!==0,s=(i&to)!==0,l=(i&io)!==0,c=!1,u;s?[u,c]=Io(()=>t[e]):u=t[e];var d=Qe in t||Ll in t,f=s&&(((pe=At(t,e))==null?void 0:pe.set)??(d&&e in t&&(q=>t[e]=q)))||void 0,p=a,h=!0,y=!1,v=()=>(y=!0,h&&(h=!1,l?p=qe(a):p=a),p);u===void 0&&a!==void 0&&(f&&n&&Ul(),u=v(),f&&f(u));var g;if(n)g=()=>{var q=t[e];return q===void 0?v():(h=!0,y=!1,q)};else{var m=(r?Jt:at)(()=>t[e]);m.f|=Jr,g=()=>{var q=P(m);return q!==void 0&&(p=void 0),q===void 0?p:q}}if(!(i&eo))return g;if(f){var T=t.$$legacy;return function(q,N){return arguments.length>0?((!n||!N||T||c)&&f(N?g():q),q):g()}}var D=!1,w=!1,A=Yt(u),J=Jt(()=>{var q=g(),N=P(A);return D?(D=!1,w=!0,N):(w=!1,A.v=q)});return r||(J.equals=Xa),function(q,N){if(et!==null&&(D=w,g(),P(A)),arguments.length>0){const E=N?P(J):n&&s?Ie(q):q;return J.equals(E)||(D=!0,Y(A,E),y&&p!==void 0&&(p=E),qe(()=>P(J))),q}return P(J)}}const ec="5";typeof window<"u"&&(window.__svelte||(window.__svelte={v:new Set})).v.add(ec);Xl();class Hp{constructor(e,i,a){o(this,"_dbname");o(this,"_dbversion");o(this,"dbPromise");o(this,"getTran",async(e,i)=>(await this.dbPromise).transaction(e,i));o(this,"reset",async()=>(await indexedDB.databases().then(e=>{console.log(e)}),await new Promise((e,i)=>{const a=indexedDB.deleteDatabase(this._dbname);a.onsuccess=()=>{console.log("onsuccess"),e()},a.onerror=r=>{console.log("onerror"),i(r)}})));o(this,"getAll",async e=>{const i=await this.dbPromise;return new Promise((a,r)=>{const l=i.transaction([e],"readonly").objectStore(e).getAll();l.onsuccess=()=>{a(l.result)},l.onerror=c=>{r(c)}})});o(this,"get",async(e,i)=>{const a=await this.dbPromise;return new Promise((r,n)=>{const c=a.transaction([e],"readonly").objectStore(e).get(i);c.onsuccess=()=>{r(c.result)},c.onerror=u=>{n(u)}})});o(this,"getMany",async(e,i)=>{const n=(await this.dbPromise).transaction([e],"readonly").objectStore(e),s=i.map(l=>new Promise((c,u)=>{const d=n.get(l);d.onsuccess=()=>{c(d.result)},d.onerror=f=>{u(f)}}));return await Promise.all(s)});o(this,"putRecords",async(e,i)=>{const r=(await this.dbPromise).transaction([e],"readwrite"),n=r.objectStore(e),s=i.map(l=>({record:l,request:n.put(l)}));return new Promise((l,c)=>{r.oncomplete=()=>l(s.map(u=>Object.assign({id:u.request.result},u.record))),r.onerror=u=>c(u)})});o(this,"deleteRecords",async(e,i)=>{const r=(await this.dbPromise).transaction([e],"readwrite"),n=r.objectStore(e),s=i.map(l=>({key:l,request:n.delete(l)}));return new Promise((l,c)=>{r.oncomplete=()=>{console.log(s.map(u=>u.request.result)),l()},r.onerror=u=>c(u)})});this._dbname=e,this._dbversion=i,this.dbPromise=new Promise((r,n)=>{const s=indexedDB.open(e,i);s.onsuccess=l=>{if(console.log(l),!l.target){console.log("event.target is undefined"),n("event.target is undefined");return}const c=l.target.result;if(!c){console.log("event.target.result is undefined"),n("event.target.result is undefined");return}c.onversionchange=u=>{console.log(u),c.close()},r(c)},s.onupgradeneeded=l=>{console.log("onupgradeneeded");const c=l.target.result;a.filter(u=>!c.objectStoreNames.contains(u)).map(u=>c.createObjectStore(u,{keyPath:"id",autoIncrement:!0}))},s.onerror=l=>{console.log(l),n(l)},s.onblocked=l=>{console.log(l),n(l)}}),console.log(this.dbPromise)}get dbversion(){return this._dbversion}}class V{constructor(){o(this,"handlers",[])}get length(){return this.handlers.length}append(e){this.handlers.push(e)}remove(e){this.handlers=this.handlers.filter(i=>i!==e)}trigger(e){this.handlers.slice(0).filter(i=>i(e)==="RemoveMe").forEach(i=>this.remove(i))}clear(){this.handlers.splice(0)}expose(){return this}}class Pr{constructor(){o(this,"handler")}set(e){this.handler=e}async call(e){if(!this.handler)throw Error("illegal state error");return await this.handler(e)}expose(){return this}}class ar{constructor(e,i,a,r){o(this,"_name");o(this,"_createVersion");o(this,"mountResolver",()=>{});o(this,"_indexedDb");o(this,"onInsertEvent",new V);o(this,"onBeforeInsertEvent",new Pr);o(this,"onUpdateEvent",new V);o(this,"onBeforeUpdateEvent",new Pr);o(this,"onDeleteEvent",new V);o(this,"prepareInitialRecords",()=>{const e=new Date;return this._prepareInitialRecords().map(i=>Object.assign(i,{createdAt:e,updatedAt:e,dbVersion:this._createVersion}))});o(this,"resolveMount",()=>this.mountResolver());o(this,"patchForInsert",(e,i)=>{e.newRecords.forEach(a=>{i[a.id]=a})});o(this,"patchForUpdate",(e,i)=>{e.recordPairs.forEach(a=>{i[a.newRecord.id]={...a.newRecord}})});o(this,"patchForDelete",(e,i)=>{e.oldRecords.forEach(a=>{delete i[a.id]})});this._indexedDb=e,this._name=i,this._createVersion=e.dbversion,this.getAll().then(n=>n.reduce((s,l)=>(s[l.id]=l,s),{})).then(n=>{console.log(this.name,n),this.onBeforeInsertEvent.set(a??(()=>Promise.resolve())),this.onBeforeUpdateEvent.set(r??(()=>Promise.resolve()))})}get name(){return this._name}get createVersion(){return this._createVersion}get oninsert(){return this.onInsertEvent.expose()}get onbeforeinsert(){return this.onBeforeInsertEvent.expose()}get onupdate(){return this.onUpdateEvent.expose()}get onbeforeupdate(){return this.onBeforeUpdateEvent.expose()}get ondelete(){return this.onDeleteEvent.expose()}getAll(){return this._indexedDb.getAll(this.name)}get(e){return this._indexedDb.get(this.name,e)}async insertMany(e){const i=new Date,a=e.map(n=>{const s={createdAt:i,updatedAt:i,dbVersion:this._createVersion};return Object.assign(n,s)});await this.onBeforeInsertEvent.call({sender:this,newRecords:a,timestamp:i});const r=await this._indexedDb.putRecords(this.name,a);return this.onInsertEvent.trigger({sender:this,newRecords:r,timestamp:i}),r}async insert(e){return(await this.insertMany([e]))[0]}async updateMany(e,i){const a=new Date,r=[];return(await this._indexedDb.getMany(this.name,e)).forEach(s=>{const l={...s},c={...l};r.push({newRecord:Object.assign(i(c),{updatedAt:a,dbVersion:this._createVersion}),oldRecord:l})}),await this.onBeforeUpdateEvent.call({sender:this,recordPairs:r,timestamp:a}),await this._indexedDb.putRecords(this.name,r.map(s=>s.newRecord)),this.onUpdateEvent.trigger({sender:this,recordPairs:r,timestamp:a}),r.map(s=>s.newRecord)}async update(e,i){return(await this.updateMany([e],i))[0]}async delete(e){const i=new Date,a=await this._indexedDb.getMany(this.name,e);await this._indexedDb.deleteRecords(this.name,e),this.onDeleteEvent.trigger({sender:this,oldRecords:a,timestamp:i})}}const Zp=["Deck","ExtraDeck"],Gp={Deck:"メインデッキ",ExtraDeck:"エクストラデッキ"},tc=["Monster","Spell","Trap","XyzMaterial"],$p={Monster:"モンスター",Spell:"魔法",Trap:"罠",XyzMaterial:"XYZ素材"},Li=["Fusion","Synchro","Xyz","Link"],Pn=[...Li,"SpecialSummon","Ritual"],Mn=[...Pn,"NormalSummonOnly","RegularSpecialSummonOnly","FreeReborn"],ic=["Toon","Spirit","Union","Gemini","FlipEffect"],ac=["Tuner","Effect","Normal","Pendulum","Token"],Up=[...ic,...ac,...Mn],rc={Synchro:"シンクロ",Fusion:"融合",Xyz:"エクシーズ",Link:"リンク",Ritual:"儀式",SpecialSummon:"特殊召喚",Toon:"トゥーン",Spirit:"スピリット",Union:"ユニオン",Gemini:"デュアル",FlipEffect:"リバース",Tuner:"チューナー",Effect:"効果",Normal:"通常",Pendulum:"ペンデュラム",Token:"トークン",FreeReborn:"特殊召喚モンスター（蘇生制限なし）",NormalSummonOnly:"特殊召喚不可",RegularSpecialSummonOnly:"正規の方法以外での特殊召喚不可"},nc={Synchro:"🎵",Fusion:"🌀",Xyz:"📰",Link:"⛓️",Ritual:"📜",SpecialSummon:"🔯",Toon:"📖",Spirit:"👻",Union:"🚗",Gemini:"👫",FlipEffect:"🔄",Tuner:"🎶",Effect:"✨",Normal:"🔘",Pendulum:"💠",Token:"🐏",FreeReborn:"🆓",NormalSummonOnly:"🔲",RegularSpecialSummonOnly:"❗"},jp=["Light","Dark","Earth","Water","Fire","Wind","Divine"],zp={Light:"光",Dark:"闇",Earth:"地",Water:"水",Fire:"炎",Wind:"風",Divine:"神"},Vp=["Aqua","Beast","BeastWarrior","CreatorGod","Cyberse","Dinosaur","DivineBeast","Dragon","Fairy","Fiend","Fish","Insect","Illusion","Machine","Plant","Psychic","Pyro","Reptile","Rock","SeaSerpent","Spellcaster","Thunder","Warrior","WingedBeast","Wyrm","Zombie"],Wp=["Normal","Continuous","Field","QuickPlay","Equip","Ritual","PendulumScale"],sc={Normal:"通常",Continuous:"永続",Field:"フィールド",QuickPlay:"速攻",Equip:"装備",Ritual:"儀式",PendulumScale:"ペンデュラム"},Qp=["Normal","Continuous","Counter"],lc={Normal:"通常",Continuous:"永続",Counter:"カウンター"},k=["Attack","Defense"],Ti={Attack:"攻撃表示",Defense:"守備表示",Set:"裏側守備表示"},Fn=["level","rank","attack","defense","pendulumScaleR","pendulumScaleL"],oc={Aqua:"水",Beast:"獣",BeastWarrior:"獣戦士",CreatorGod:"創造神",Cyberse:"サイバース",Dinosaur:"恐竜",DivineBeast:"幻獣神",Dragon:"ドラゴン",Fairy:"天使",Fiend:"悪魔",Fish:"魚",Insect:"昆虫",Illusion:"幻想魔",Machine:"機械",Plant:"植物",Psychic:"サイキック",Pyro:"炎",Reptile:"爬虫類",Rock:"岩石",SeaSerpent:"海竜",Spellcaster:"魔法使い",Thunder:"雷",Warrior:"戦士",WingedBeast:"鳥獣",Wyrm:"幻竜",Zombie:"アンデット"},cc={Aqua:"🚰",Beast:"🐅",BeastWarrior:"🦁",CreatorGod:"🔆",Cyberse:"💻️",Dinosaur:"🦖",DivineBeast:"💫",Dragon:"🐲",Fairy:"👼",Fiend:"👿",Fish:"🐟️",Insect:"🦋",Illusion:"🤡",Machine:"🤖",Plant:"🌱",Psychic:"👁️",Pyro:"🔥",Reptile:"🦎",Rock:"⛰",SeaSerpent:"🐍",Spellcaster:"🧙",Thunder:"⚡️",Warrior:"⚔️",WingedBeast:"🦅",Wyrm:"🐉",Zombie:"🦴"},uc=["TopLeft","TopCenter","TopRight","MiddleLeft","MiddleRight","BottomLeft","BottomCenter","BottomRight"],On={TopLeft:{name:"左上",linkArrow:{offsetRow:-1,offsetColumn:-1}},TopCenter:{name:"上",linkArrow:{offsetRow:-1,offsetColumn:0}},TopRight:{name:"右上",linkArrow:{offsetRow:-1,offsetColumn:1}},MiddleLeft:{name:"左",linkArrow:{offsetRow:0,offsetColumn:-1}},MiddleRight:{name:"右",linkArrow:{offsetRow:0,offsetColumn:1}},BottomLeft:{name:"左下",linkArrow:{offsetRow:1,offsetColumn:-1}},BottomCenter:{name:"下",linkArrow:{offsetRow:1,offsetColumn:0}},BottomRight:{name:"右下",linkArrow:{offsetRow:1,offsetColumn:1}}};uc.reduce((t,e)=>(t[On[e].name]=e,t),{});const Xp=t=>t.cardId??!1?`https://www.db.yugioh-card.com/yugiohdb/card_search.action?ope=2&cid=${t.cardId}`:`https://www.db.yugioh-card.com/yugiohdb/card_search.action?ope=1&sess=1&rp=10&mode=&sort=1&keyword=${t.name}&stype=1&ctype=&othercon=2&starfr=&starto=&pscalefr=&pscaleto=&linkmarkerfr=&linkmarkerto=&link_m=2&atkfr=&atkto=&deffr=&defto=&releaseDStart=1&releaseMStart=1&releaseYStart=1999&releaseDEnd=&releaseMEnd=&releaseYEnd=`,Nn=(t,e)=>{const i=t.monsterCategories??[],a=e.monsterCategories??[];for(const r of Li.toReversed()){if(i.includes(r)&&!a.includes(r))return 1;if(!i.includes(r)&&a.includes(r))return-1}if(t.kind===e.kind){if(t.kind==="Monster"){if((t.link??0)!==(e.link??0))return(t.link??0)-(e.link??0);if((t.rank??0)!==(e.rank??0))return(t.rank??0)-(e.rank??0);if((t.level??0)!==(e.level??0))return(t.level??0)-(e.level??0);if((t.attack??0)!==(e.attack??0))return(t.attack??0)-(e.attack??0);if((t.defense??0)!==(e.defense??0))return(t.defense??0)-(e.defense??0)}return t.name.localeCompare(e.name,"Ja")}for(const r of tc){if(t.kind===r)return-1;if(e.kind===r)return 1}return t.name.localeCompare(e.name,"Ja")},Bn=["Deck","ExtraDeck"],ca=["Graveyard","Banished"],Ln=[...Bn,...ca],dc=[...Ln,"Hand"],U=["MonsterZone","ExtraMonsterZone"],qi=["SpellAndTrapZone","FieldSpellZone"],Se=[...U,...qi],qn=["XyzMaterialZone","WaitingRoom"],Me=[...dc,...Se,...qn],fc={Deck:"デッキ",ExtraDeck:"EXデッキ",Graveyard:"墓地",Banished:"除外",Hand:"手札",MonsterZone:"場",ExtraMonsterZone:"場",SpellAndTrapZone:"場",FieldSpellZone:"場",XyzMaterialZone:"XYZ素材",WaitingRoom:"虚無"},pc={Deck:"Random",ExtraDeck:"Bottom",Graveyard:"Top",Banished:"Top",Hand:"Bottom",MonsterZone:"Top",ExtraMonsterZone:"Top",SpellAndTrapZone:"Top",FieldSpellZone:"Top",XyzMaterialZone:"Bottom",WaitingRoom:"Bottom"},gc={Deck:"FaceDown",ExtraDeck:"FaceDown",Graveyard:"FaceUp",Banished:"FaceUp",Hand:"FaceDown",MonsterZone:"FaceUp",ExtraMonsterZone:"FaceUp",SpellAndTrapZone:"FaceUp",FieldSpellZone:"FaceUp",XyzMaterialZone:"FaceUp",WaitingRoom:"FaceUp"},Oa={0:{0:"Hand"},1:{0:"Deck",1:"SpellAndTrapZone",2:"SpellAndTrapZone",3:"SpellAndTrapZone",4:"SpellAndTrapZone",5:"SpellAndTrapZone",6:"ExtraDeck"},2:{0:"Graveyard",1:"MonsterZone",2:"MonsterZone",3:"MonsterZone",4:"MonsterZone",5:"MonsterZone",6:"FieldSpellZone"},3:{0:"Banished",1:"XyzMaterialZone",2:"ExtraMonsterZone",3:"WaitingRoom",4:"ExtraMonsterZone",5:"XyzMaterialZone",6:"Banished"},4:{0:"FieldSpellZone",1:"MonsterZone",2:"MonsterZone",3:"MonsterZone",4:"MonsterZone",5:"MonsterZone",6:"Graveyard"},5:{0:"ExtraDeck",1:"SpellAndTrapZone",2:"SpellAndTrapZone",3:"SpellAndTrapZone",4:"SpellAndTrapZone",5:"SpellAndTrapZone",6:"Deck"},6:{0:"Hand"}};class hc{constructor(e,i,a,r){o(this,"onUpdateEvent",new V);o(this,"field");o(this,"row");o(this,"column");o(this,"cellType");o(this,"_owner");o(this,"_requiresRecalcLinkArrows");o(this,"_linkArrowSources");o(this,"_needsShuffle",!1);o(this,"recalcLinkArrows",()=>{this.isMonsterZoneLikeCell&&(this._requiresRecalcLinkArrows=!1,this._linkArrowSources=this.neighbors.filter(e=>e.isMonsterZoneLikeCell).filter(e=>e.cardEntities.length).filter(e=>e.cardEntities[0].linkArrows.some(i=>this.row===e.row+i.offsetRow&&this.column===e.column+i.offsetColumn)).map(e=>e.cardEntities[0]))});o(this,"_entities");o(this,"releaseEntities",e=>{var i;return this._entities=this._entities.filter(a=>a!==e),this.isMonsterZoneLikeCell&&((i=e.origin.monsterCategories)!=null&&i.includes("Link"))&&(this._requiresRecalcLinkArrows=!0),this.onUpdateEvent.trigger(),e});o(this,"acceptEntities",(e,i)=>{var a;if(i==="Fix"){if(!this._entities.includes(e))throw new _("引数とセルの状態が矛盾している。",this,e,i)}else i==="Top"?this._entities.unshift(e):this._entities.push(e),i==="Random"&&(this._needsShuffle=!0),this._entities.forEach(r=>{r.cell=this}),this.isMonsterZoneLikeCell&&((a=e.origin.monsterCategories)!=null&&a.includes("Link"))&&(this._requiresRecalcLinkArrows=!0);this.onUpdateEvent.trigger()});o(this,"shuffle",()=>{this._entities=this.entities.shuffle(),this._needsShuffle=!1,this.field.duel.log.info("デッキをシャッフル。",this.owner)});o(this,"toString",()=>this.isMonsterZoneLikeCell||this.cellType==="SpellAndTrapZone"?`${this.cellType}(${this.row},${this.column})`:this.cellType);this.field=e,this.row=i,this.column=a,this.cellType=Oa[i][a],this._owner=r,this._entities=[],this._linkArrowSources=[],this._requiresRecalcLinkArrows=!1}get onUpdate(){return this.onUpdateEvent.expose()}get owner(){var e;return this._owner||((e=this.cardEntities[0])==null?void 0:e.owner)}get requiresRecalcLinkArrows(){return this._requiresRecalcLinkArrows}get linkArrowSources(){return this._linkArrowSources}get needsShuffle(){return this._needsShuffle}get entities(){return this._entities}get visibleEntities(){return this._entities.filter(e=>Br.find(i=>i===e.entityType))}get cardEntities(){return this._entities.filter(e=>Br.find(i=>i===e.entityType)).filter(e=>e.kind!=="XyzMaterial")}get xyzMaterials(){return this._entities.filter(e=>e.kind==="XyzMaterial")}get targetForAttack(){return this.cellType==="Hand"?this._entities.find(e=>e.entityType==="Duelist"):this.cardEntities[0]}get isAvailable(){return this.cardEntities.length===0&&this._entities.filter(e=>au.find(i=>i===e.entityType)).length===0}get isAvailableForPendulum(){return this.isAvailable&&this.isSpellTrapZoneLikeCell&&(this.column===1||this.column===5)}get isStackCell(){return Ln.some(e=>e===this.cellType)}get isPlayFieldCell(){return Se.some(e=>e===this.cellType)}get isMonsterZoneLikeCell(){return U.some(e=>e===this.cellType)}get isSpellTrapZoneLikeCell(){return qi.some(e=>e===this.cellType)}get isDisabledCell(){return qn.some(e=>e===this.cellType)}get isTrashCell(){return ca.some(e=>e===this.cellType)}get neighbors(){const e=[this.row-1,this.row,this.row+1].filter(a=>a>=0&&a<=6),i=[this.column-1,this.column,this.column+1].filter(a=>a>=0&&a<=6);return e.flatMap(a=>i.map(r=>this.field.cells[a][r])).filter(a=>a.isMonsterZoneLikeCell).filter(a=>a!==this)}get shortName(){return fc[this.cellType]}}const Rn=["NormalSummon","SpecialSummon","FlipSummon"],rr=["IgnitionEffect","TriggerEffect","QuickEffect","CardActivation"],yc=[...Rn,...rr,"DeclareAttack"],vc=t=>t==="CardActivation"?"CardActivation":rr.some(e=>e===t)?"EffectActivation":"NonActivate",Vi=class Vi{constructor(e,i,a){o(this,"seq");o(this,"entity");o(this,"_definition");o(this,"validateDuelist",e=>this.entity.controller===e?this.executableDuelistTypes.includes("Controller"):this.executableDuelistTypes.includes("Opponent"));o(this,"canExecute",e=>this.executableCells.includes(this.entity.cell.cellType)&&this.executableFaces.includes(this.entity.face)&&this.executablePeriods.includes(this.entity.duel.clock.period.key)&&this.validateDuelist(e??this.entity.controller));this.seq=e==="AutoSeq"?Vi.nextSeq++:e,this.entity=i,this._definition=a}get definition(){return this._definition}get title(){return this.definition.title}get playType(){return this.definition.playType}get isMandatory(){return this.definition.isMandatory}get executableCells(){return this.definition.executableCells}get executablePeriods(){return this.definition.executablePeriods}get executableFaces(){return this.definition.executableFaces??sr}get executableDuelistTypes(){return this.definition.executableDuelistTypes??["Controller"]}get isOnlyNTimesPerDuel(){return this.definition.isOnlyNTimesPerDuel??0}get isOnlyNTimesPerTurn(){return this.definition.isOnlyNTimesPerTurn??0}get isOnlyNTimesPerTurnIfFaceup(){return this.definition.isOnlyNTimesPerTurnIfFaceup??0}get isOnlyNTimesIfFaceup(){return this.definition.isOnlyNTimesIfFaceup??0}get isOnlyNTimesPerChain(){return this.definition.isOnlyNTimesPerChain??0}get actionGroupName(){return this.definition.actionGroupName}get duel(){return this.entity.duel}};o(Vi,"nextSeq",0);let ai=Vi;class ui{constructor(){o(this,"pooledOperators",[]);o(this,"bundles",[]);o(this,"excludesExpired",()=>{this.bundles.forEach(e=>e.excludesExpired()),this.pooledOperators=this.pooledOperators.filter(e=>e.validateAlive())});o(this,"append",e=>{this.bundles.push(e)});o(this,"push",e=>{if(!e.isContinuous)throw new _("staticへの追加は永続以外不可",e);this.excludesExpired(),this.distribute(e),this.pooledOperators.push(e)});o(this,"distributeAll",e=>(this.excludesExpired(),this.pooledOperators.flatMap(this.distribute).getDistinct().forEach(i=>i.operators.sort((a,r)=>a.seq-r.seq)),this.afterDistributeAll(e)));o(this,"distribute",e=>this.bundles.filter(i=>i.entity.exist).filter(i=>i.operators.every(a=>a.seq!==e.seq)).filter(i=>e.isApplicableTo(i.entity)).filter(i=>i.entity.canBeEffected(e.effectOwner,e.isSpawnedBy,e.actionAttr)).map(i=>(i.push(e),i)));o(this,"removeItem",e=>{this.pooledOperators=this.pooledOperators.filter(i=>i.seq!==e)})}}class di{constructor(e,i){o(this,"pool");o(this,"entity");o(this,"_operators");o(this,"excludesExpired",()=>{this._operators=this._operators.filter(e=>{const i=e.validateAlive()&&e.isApplicableTo(this.entity);return i||(console.info(`before remove ${this.entity.toString} ${e.title}`),e.beforeRemove(this)),i})});o(this,"push",e=>this.entity.procFilterBundle.filter(["Effect"],e.effectOwner,e.isSpawnedBy,e.actionAttr,[])?(this.beforePush(e),this._operators.push(e),this.afterPush(e),!0):!1);o(this,"removeItem",e=>{this._operators=this._operators.filter(i=>i.seq!==e?!0:(i.beforeRemove(this),!1))});this.pool=e,this.entity=i,this._operators=[],this.pool.append(this)}get operators(){return this._operators}get effectiveOperators(){return this.operators.filter(e=>e.isSpawnedBy.isEffective||!e.isContinuous)}}const Wi=class Wi{constructor(e){o(this,"seq");o(this,"title");o(this,"validateAlive");o(this,"isContinuous");o(this,"isSpawnedBy");o(this,"isSpawnedAt");o(this,"activateType");o(this,"actionAttr");o(this,"isApplicableTo");o(this,"effectOwner");this.seq=Wi.nextSeq++,this.title=e.title,this.validateAlive=()=>e.validateAlive(this),this.isContinuous=e.isContinuous,this.isSpawnedBy=e.isSpawnedBy,this.isSpawnedAt=e.isSpawnedBy.duel.clock.getClone(),this.isApplicableTo=i=>e.isApplicableTo(this,i),this.actionAttr=e.actionAttr,this.activateType=this.actionAttr.playType?vc(this.actionAttr.playType):"NonActivate",this.effectOwner=this.isSpawnedBy.controller}get duel(){return this.effectOwner.duel}get isEffective(){return!this.isContinuous||this.activateType==="NonActivate"?!0:this.isSpawnedBy.isEffective}};o(Wi,"nextSeq",0);let Tt=Wi;class mc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>this.bundles.every(i=>i.applyEffectFilter()))}}class Sc extends di{constructor(){super(...arguments);o(this,"applyEffectFilter",()=>{const i=this.entity.allStickyEffectOperators.length,a=[];for(;;){const r=this.effectiveOperators.filter(n=>n.procTypes.includes("Effect")).filter(n=>n.isContinuous).find(n=>!a.includes(n.seq));if(!r)break;a.push(r.seq),r.eraseOperators(this.entity)}return this.entity.allStickyEffectOperators.length===i});o(this,"filter",(i,a,r,n,s)=>this.effectiveOperators.filter(l=>l.procTypes.union(i).length).every(l=>l.filter(this.entity,a,r,n,s)));o(this,"beforePush",i=>i.eraseOperators(this.entity));o(this,"afterPush",()=>{})}}const xt=class xt extends Tt{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"procTypes");o(this,"filter");o(this,"eraseOperators",i=>{if(!this.procTypes.includes("Effect"))return 0;const a=i.allStickyEffectOperators.filter(r=>r.isContinuous).filter(r=>!this.filter(i,r.effectOwner,r.isSpawnedBy,r.actionAttr,[])).map(r=>r.seq);return a.forEach(i.procFilterBundle.removeItem),a.forEach(i.statusOperatorBundle.removeItem),a.forEach(i.numericOprsBundle.removeItem),a.length});this.procTypes=i.procTypes,this.filter=i.filter}};o(xt,"createContinuous",(i,a,r,n,s,l)=>new xt({title:i,validateAlive:a,isContinuous:!0,isSpawnedBy:r,actionAttr:{},isApplicableTo:n,procTypes:s,filter:l})),o(xt,"createLingering",(i,a,r,n,s,l,c)=>new xt({title:i,validateAlive:a,isContinuous:!1,isSpawnedBy:r,actionAttr:n,isApplicableTo:s,procTypes:l,filter:c}));let st=xt;const Mr={level:1,rank:1,attack:0,defense:0,pendulumScaleR:0,pendulumScaleL:0};class _c extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",i=>{if(this.bundles.forEach(r=>r.calcStateAll()),i.field.getMonstersOnFieldStrictly().flatMap(r=>r.numericOprsBundle).flatMap(r=>r.effectiveOperators).some(r=>r.targetStateGen==="calculated")){const n=i.field.getMonstersOnFieldStrictly().filter(s=>(s.atk??0)>=0).map(s=>s.atk??0).reduce((s,l)=>s>l?s:l,0);i.field.getMonstersOnFieldStrictly().forEach(s=>{s.numericOprsBundle.effectiveOperators.filter(l=>l.targetStateGen==="calculated").forEach(l=>{var c;if(!((c=s.status.monsterCategories)!=null&&c.includes("Link")&&l.targetState==="defense")){if(l.stateOperationType==="THE_DEVILS_AVATAR"){s.numericStatus.calculated[l.targetState]=n+100;return}s.numericStatus.calculated[l.targetState]=l.calcValue(s,s.numericStatus.calculated[l.targetState]??0)}})})}return!0})}}class Cc extends di{constructor(){super(...arguments);o(this,"beforePush",i=>{const a=this.effectiveOperators.filter(n=>n.targetState===i.targetState).filter(n=>n.isEffective);if(i.kind==="O-L-F"||i.kind==="O-C-F"?(a.filter(n=>n.kind==="O-L-F").forEach(n=>n.negate()),a.filter(n=>n.kind==="L-F").forEach(n=>n.negate())):i.kind==="L-F"||i.kind==="C-F"?a.filter(n=>n.kind==="L-F"||n.kind==="L-A").forEach(n=>n.negate()):i.kind==="X-C-X"&&a.filter(n=>!n.isContinuous).forEach(n=>n.negate()),a.filter(n=>n.isEffective).some(n=>n.kind==="X-C-X")&&!i.isContinuous)return;if(i.stateOperationType!=="Addition"&&i.targetStateGen==="wip"&&a.filter(n=>!n.isContinuous).forEach(n=>n.negate()),i.stateOperationType==="THE_DEVILS_AVATAR"||i.stateOperationType==="Gradius'_Option"){this.entity.numericStatus.calculated[i.targetState]=-Number.MAX_VALUE;return}const r=this.entity.numericStatus.calculated[i.targetState]??0;if(i.stateOperationType==="THE_DEVILS_DREAD-ROOT"){this.entity.numericStatus.calculated[i.targetState]=i.calcValue(this.entity,r);return}if(i.kind==="L-F"){this.entity.numericStatus.wip[i.targetState]=i.calcValue(this.entity,r);return}});o(this,"afterPush",()=>{});o(this,"calcStateAll",()=>Fn.forEach(this.calcState));o(this,"calcState",i=>{if(!this.entity.isPendulumScale&&!this.entity.isMonster){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories){this.entity.numericStatus.calculated[i]=void 0;return}if(this.entity.status.monsterCategories.includes("Link")&&i!=="attack"){this.entity.numericStatus.calculated[i]=void 0;return}if(this.entity.status.monsterCategories.includes("Xyz")&&i==="level"){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories.includes("Xyz")&&i==="rank"){this.entity.numericStatus.calculated[i]=void 0;return}if(!this.entity.status.monsterCategories.includes("Pendulum")&&(i==="pendulumScaleL"||i==="pendulumScaleR")){this.entity.numericStatus.calculated[i]=void 0;return}if(i!=="level"&&!this.entity.isOnFieldStrictly){this.entity.numericStatus.origin[i]=this.entity.origin[i],this.entity.numericStatus.wip[i]=this.entity.origin[i],this.entity.numericStatus.calculated[i]=this.entity.origin[i];return}const a=this.entity.origin[i]??0,r=this.entity.numericStatus.wip[i]??0,n=this._operators.filter(d=>d.targetState===i).filter(d=>d.isEffective);if(n.some(d=>d.stateOperationType==="THE_DEVILS_AVATAR"||d.stateOperationType==="Gradius'_Option")&&this.entity.isEffective){this.entity.numericStatus.calculated[i]=-Number.MAX_VALUE;return}const s=n.filter(d=>d.targetState===i).findLast(d=>d.targetStateGen==="origin"),l=s?s.calcValue(this.entity,a??0):a;this.entity.numericStatus.origin[i]=l;let c=l;const u=n.filter(d=>d.targetState===i).filter(d=>d.targetStateGen==="wip").findLast(d=>d.stateOperationType==="Fixation");if(!u)c=n.filter(d=>d.stateOperationType==="Addition").reduce((d,f)=>f.calcValue(this.entity,d),c),this.entity.numericStatus.wip[i]=c;else if(u.isContinuous)c=u.calcValue(this.entity,c),c=n.filter(d=>d.stateOperationType==="Addition").reduce((d,f)=>f.calcValue(this.entity,d),c),this.entity.numericStatus.wip[i]=c;else{let d=!1;c=n.filter(f=>(d=d||f===u,d&&f!==u)).filter(f=>f.stateOperationType==="Addition").reduce((f,p)=>p.calcValue(this.entity,f),r)}c<Mr[i]&&(c=Mr[i]),this.entity.numericStatus.calculated[i]=c})}}const Oe=class Oe extends Tt{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"targetState");o(this,"targetStateGen");o(this,"stateOperationType");o(this,"calcValue");o(this,"_isEffective");o(this,"negate",()=>{this._isEffective=!1});this._isEffective=!0,this.targetState=i.targetState,this.targetStateGen=i.targetStateGen,this.stateOperationType=i.stateOperationType,this.calcValue=(a,r)=>i.calcValue(this.isSpawnedBy,a,r)}get isEffective(){return this._isEffective&&super.isEffective}get kind(){if(this.targetStateGen==="origin"){if(this.stateOperationType==="Fixation")return this.isContinuous?"O-C-F":"O-L-F";throw new _("矛盾したプロパティ",this)}if(this.targetStateGen==="wip"){if(this.stateOperationType==="Addition")return this.isContinuous?"C-A":"L-A";if(this.stateOperationType==="Fixation")return this.isContinuous?"C-F":"L-F";throw new _("矛盾したプロパティ",this)}if(this.stateOperationType==="THE_DEVILS_DREAD-ROOT")return"X-C-F";if(this.stateOperationType==="THE_DEVILS_AVATAR"||this.stateOperationType==="Gradius'_Option")return"X-C-X";throw new _("矛盾したプロパティ",this)}};o(Oe,"createContinuous",(i,a,r,n,s,l,c,u)=>new Oe({title:i,validateAlive:a,isContinuous:!0,isSpawnedBy:r,actionAttr:{},isApplicableTo:n,targetState:s,targetStateGen:l,stateOperationType:c,calcValue:u})),o(Oe,"createLingering",(i,a,r,n,s,l,c)=>new Oe({title:i,validateAlive:a,isContinuous:!1,isSpawnedBy:r,actionAttr:n,isApplicableTo:(u,d)=>d.isOnFieldAsMonsterStrictly,targetState:s,targetStateGen:"wip",stateOperationType:l,calcValue:c})),o(Oe,"createLingeringFixation",(i,a,r,n,s,l)=>Oe.createLingering(i,a,r,n,s,"Fixation",l)),o(Oe,"createLingeringAddition",(i,a,r,n,s,l)=>Oe.createLingering(i,a,r,n,s,"Addition",l));let ne=Oe;const Tc=t=>t!==null&&(typeof t=="object"||typeof t=="function"),Hn=t=>Object.keys(t),wc={draw:"ドローフェイズ",standby:"スタンバイフェイズ",main1:"メインフェイズ１",battle1:"バトルフェイズ",battle2:"バトルフェイズ（追加）",main2:"メインフェイズ２",end:"エンドフェイズ"},Ec={start:"スタートステップ",battle:"バトルステップ",damage:"ダメージステップ",end:"エンドステップ"},bc={start:"ダメージステップ開始時",beforeDmgCalc:"ダメージ計算前",dmgCalc:"ダメージ計算時",afterDmgCalc:"ダメージ計算後",end:"ダメージステップ終了時"},x=["draw","stanby","main1","b1Start","b1Battle","b1End","b2Start","b2Battle","b2End","main2","end"],R=["b1DStart","b1DBeforeDmgCalc","b1DAfterDmgCalc","b1DEnd","b2DStart","b2DBeforeDmgCalc","b2DAfterDmgCalc","b2DEnd"],kc=["b1DDmgCalc","b2DDmgCalc"],le=[...x,...R,...kc],Fr={draw:{phase:"draw",step:void 0,stage:void 0},stanby:{phase:"standby",step:void 0,stage:void 0},main1:{phase:"main1",step:void 0,stage:void 0},b1Start:{phase:"battle1",step:"start",stage:void 0},b1Battle:{phase:"battle1",step:"battle",stage:void 0},b1DStart:{phase:"battle1",step:"battle",stage:"start"},b1DBeforeDmgCalc:{phase:"battle1",step:"battle",stage:"beforeDmgCalc"},b1DDmgCalc:{phase:"battle1",step:"battle",stage:"dmgCalc"},b1DAfterDmgCalc:{phase:"battle1",step:"battle",stage:"afterDmgCalc"},b1DEnd:{phase:"battle1",step:"battle",stage:"end"},b1End:{phase:"battle1",step:"end",stage:void 0},b2Start:{phase:"battle2",step:"start",stage:void 0},b2Battle:{phase:"battle2",step:"battle",stage:void 0},b2DStart:{phase:"battle2",step:"battle",stage:"start"},b2DBeforeDmgCalc:{phase:"battle2",step:"battle",stage:"beforeDmgCalc"},b2DDmgCalc:{phase:"battle2",step:"battle",stage:"dmgCalc"},b2DAfterDmgCalc:{phase:"battle2",step:"battle",stage:"afterDmgCalc"},b2DEnd:{phase:"battle2",step:"battle",stage:"end"},b2End:{phase:"battle2",step:"end",stage:void 0},main2:{phase:"main2",step:void 0,stage:void 0},end:{phase:"end",step:void 0,stage:void 0}},Dc=t=>t.stage?bc[t.stage]:t.step?Ec[t.step]:wc[t.phase],ht=Hn(Fr).reduce((t,e)=>(t[e].key=e,t[e].name=Dc(t[e]),t),Fr),Qi=class Qi{constructor(e,i){o(this,"entity");o(this,"isRegular");o(this,"_isStarted");o(this,"info");o(this,"continuousEffectBase");o(this,"updateState",async()=>{if(this.hasToStart!==this.isStarted){if(this.isStarted){if(!this.info)throw new _("illegal state");this._isStarted=!1,await this.continuousEffectBase.finish(this.entity,this.info),this.info=void 0;return}this.info=await this.continuousEffectBase.start(this.entity),this._isStarted=!0}});this._isStarted=!1,this.entity=e,this.continuousEffectBase=i,this.isRegular=this.appliableCellTypes.every(a=>Se.find(r=>r===a))&&this.faceList.length===1&&this.faceList[0]==="FaceUp"}get isStarted(){return this._isStarted}get appliableCellTypes(){return this.continuousEffectBase.appliableCellTypes}get appliableDuelPeriodKeys(){return this.continuousEffectBase.appliableDuelPeriodKeys}get faceList(){return this.continuousEffectBase.faceList}get hasToStart(){return!this.appliableCellTypes.includes(this.entity.cell.cellType)||!this.appliableDuelPeriodKeys.includes(this.entity.duel.clock.period.key)||!this.faceList.includes(this.entity.face)?!1:this.continuousEffectBase.canStart(this.entity)}};o(Qi,"createNew",(e,i)=>new Qi(e,i));let Na=Qi;const Zn=(t,e,i,a)=>({title:t,appliableCellTypes:e==="Monster"?["MonsterZone","ExtraMonsterZone"]:["FieldSpellZone","SpellAndTrapZone"],appliableDuelPeriodKeys:le,faceList:["FaceUp"],canStart:r=>!r.info.isPending&&!r.info.isDying,start:async r=>{const n=i(r);return n.forEach(a(r).push),n.map(s=>s.seq)},finish:async(r,n)=>{n.forEach(s=>a(r).removeItem(s))}}),ua=(t,e,i,a,r)=>({title:t,appliableCellTypes:e==="Monster"?["MonsterZone","ExtraMonsterZone"]:["FieldSpellZone","SpellAndTrapZone"],appliableDuelPeriodKeys:le,faceList:["FaceUp"],canStart:n=>!n.info.isPending&&!n.info.isDying,start:async n=>{const s=a(n),l=i(n);return console.info(`start : ${n.toString()} ⇒ ${l.map(c=>c.toString()).join(" ")} (${s.map(c=>c.title).join(" ")})`),l.map(r).forEach(c=>s.forEach(c.push)),{targets:l,seqList:s.map(c=>c.seq)}},finish:async(n,s)=>{s.targets.map(r).forEach(l=>s.seqList.forEach(c=>l.removeItem(c)))}}),xc=(t,e,i)=>Zn(t,e,i,a=>a.field.procFilterPool),nr=(t,e,i,a)=>ua(t,e,i,a,r=>r.procFilterBundle),Ri=(t,e,i)=>Zn(t,e,i,a=>a.field.numericStateOperatorPool),fi=(t,e,i,a)=>ua(t,e,i,a,r=>r.numericOprsBundle),ri=(t,e,i,a)=>ua(t,e,i,a,r=>r.statusOperatorBundle),Ac=(t,e,i,a)=>ua(t,e,i,a,r=>r.damageFilterBundle),Gn=t=>!isNaN(Number(t)),Hi=(...t)=>t.length?t.reduce((e,i)=>e>i?e:i):-Number.MAX_VALUE,Zi=(...t)=>t.length?t.reduce((e,i)=>e<i?e:i):Number.MAX_VALUE,kt=(t,e)=>{if((t[0]??Number.MAX_VALUE)>e)return 0;if(t.slice(-1)[0]<e)return t.length;let i=0,a=t.length-1;for(;;){const r=Math.round((i+a)/2);if(r===a||r===i)return t[i]<e?a:i;if(t[r]<e){i=r;continue}a=r}},Fe=[3,5,5,6,6,6,7,8,9,10,11,11,11,12,12,13,13,14,15,15,15,15,15,15,16,16,16,17,18,18,18,21,21,21,22,23,25,25,26,28,28,28,30,30,31,32,32,33,33,34,35,35,36,36,36,37,37,38,38,38,39,41,42,42,43,45,45,45,45,48,48,48,50,51,52,54,54,54,54,56,57,58,59,59,59,59,60,61,63,65,65,65,65,66,67,67,67,69,69,71,71,72,73,73,73,73,73,74,75,75,76,76,77,78,79,80,80,80,80,84,84,84,84,84,84,85,85,85,87,90,91,94,96,96,97,98,101,101,101,101,101];Fe.forEach((t,e)=>{((Fe[kt(Fe,e)-1]||-Number.MAX_VALUE)>=e||(Fe[kt(Fe,e)]||Number.MAX_VALUE)<e)&&console.log(e,kt(Fe,e),(Fe[kt(Fe,e)-1]||-Number.MAX_VALUE)<e,(Fe[kt(Fe,e)]||Number.MAX_VALUE)>=e)});const Pc=["seq","entityType","origin","cell","kind","nm","lvl","rank","attr","types","atk","def"],Or=t=>{if(!t)return;const e={};for(const i of Pc)e[i]=t[i];return e};class Mc{constructor(e){o(this,"_field");o(this,"_records",[]);o(this,"getIndexOfStartPoint",e=>kt(this._records.map(i=>i.movedAt.totalProcSeq),e));o(this,"push",e=>{this._records.push(e)});o(this,"getCurrentTurnLog",()=>this.getTermLog("Current","turn"));o(this,"getPriviousChainLog",()=>this.getTermLog("Previous","chainSeq"));this._field=e}*getTermLog(e,i){const a=e==="Current"?this._field.duel.clock.currentStartPoints[i]:this._field.duel.clock.previousStartPoints[i];for(let r=this.getIndexOfStartPoint(a);r<this._records.length;r++)yield this._records[r]}}class Fc{constructor(e){o(this,"entity");o(this,"_records");o(this,"_push",e=>{this.entity.field.moveLog.push(e),this._records.push(e)});o(this,"pushForRuleAction",e=>{this._push({entity:this.entity,kind:this.entity.origin.kind,cell:this.entity.cell,face:this.entity.face,orientation:this.entity.orientation,isPending:this.entity.info.isPending,movedAt:this.entity.duel.clock.getClone(),movedAs:[...e,"Rule"]})});o(this,"push",(e,i,a,r,n)=>{let s=this.entity.cell;this.entity.kind==="XyzMaterial"&&(s=this.entity.controller.getXyzMaterialZone()),this._push({entity:this.entity,kind:e,cell:s,face:this.entity.face,orientation:this.entity.orientation,isPending:this.entity.info.isPending,movedAt:this.entity.duel.clock.getClone(),movedAs:i.getDistinct(),movedBy:Or(a),actionOwner:r,chooser:n??r})});o(this,"finalize",()=>{if(!this.latestRecord.isPending)throw new _("想定されない状況");if(this.entity.info.isPending)throw new _("想定されない状況");this._push({...this.latestRecord,isPending:!1,movedAt:this.entity.duel.clock.getClone()})});o(this,"negateSummon",(e,i)=>{const a=this.records.slice(-1)[0];a.cell=this.entity.field.getWaitingRoomCell(),a.movedBy=Or(e),a.movedAs=["SummonNegated"],a.actionOwner=i});this.entity=e,this._records=[]}get records(){return this._records}get latestRecord(){return this.records.slice(-1)[0]}get previousPlaceRecord(){return this.records.findLast(e=>e.cell.cellType!==this.entity.cell.cellType)??this._records[0]}get currentProcRecords(){return this.records.filter(e=>e.movedAt.totalProcSeq===this.entity.duel.clock.totalProcSeq)}get latestArrivalRecord(){if(this.entity.isOnFieldAsMonsterStrictly)return this.records.findLast(e=>e.movedAs.union(["NormalSummon","SpecialSummon","FlipSummon","Flip","ComeBackAlive"]).length)}}const Oc={name:"SpellCounter",type:"Actual",text:"魔力カウンター",emoji:"🔮",sticky:!1,temporary:!1,isOnlyOnField:!0},Nc={name:"KaijuCounter",type:"Actual",text:"壊獣カウンター",emoji:"☢",sticky:!1,temporary:!1,isOnlyOnField:!0},Bc={name:"NamelessCounter",type:"Actual",text:"カウンター",emoji:"💠",sticky:!1,temporary:!1,isOnlyOnField:!0},Lc={name:"IceCounter",type:"Actual",text:"アイスカウンター",emoji:"❄",sticky:!1,temporary:!1,isOnlyOnField:!0},qc={name:"Curfew",type:"System",text:"自発帰還",emoji:"",sticky:!1,temporary:!1,isOnlyOnField:!0},Rc={name:"SelfDestruction",type:"System",text:"自壊",emoji:"",sticky:!1,temporary:!1,isOnlyOnField:!0},Hc={name:"CycleFlip",type:"System",text:"サイクルリバース",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},Zc={name:"SonicBarrier",type:"System",text:"波動音壁",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},Gc={name:"SonicVerse",type:"System",text:"波動聖句（適用済）",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!0},$c={name:"IntoTheVoid",type:"System",text:"無の煉獄",emoji:"",sticky:!0,temporary:!0,isOnlyOnField:!1},Uc={name:"GoldSarcophagus",type:"System",text:"封印の黄金櫃",emoji:"",sticky:!0,temporary:!1,isOnlyOnField:!1},jc={SpellCounter:Oc,KaijuCounter:Nc,NamelessCounter:Bc,IceCounter:Lc,Curfew:qc,SelfDestruction:Rc,CycleFlip:Hc,SonicBarrier:Zc,SonicVerse:Gc,IntoTheVoid:$c,GoldSarcophagus:Uc},Dt=jc,Nr=Object.values(Dt).filter(t=>t.type==="Actual").filter(t=>t.sticky||t.temporary||!t.isOnlyOnField);if(Nr.length)throw new Error(`カウンターの設定誤り。${Nr.map(t=>t.name).join(", ")}`);const Kp=t=>Dt[t].emoji;class zc{constructor(e){o(this,"dic");o(this,"temporaryCounterNames");o(this,"entity");o(this,"add",(e,i=1,a)=>{this.dic[e]=[...this.dic[e]??[],...Array(i).fill(a)];const r=this.entity.status.maxCounterQty[e]??0;return r&&(this.dic[e]=this.dic[e].slice(0,r)),this.dic[e]});o(this,"setQty",(e,i=1,a)=>(this.dic[e]=[...Array(i).fill(a)],this.dic[e]));o(this,"remove",(e,i=1,a)=>{const r=this.dic[e].length;if(r===void 0)return[];if(i>=r)return delete this.dic[e],[];if(a){const n=this.dic[e].filter(l=>l===a),s=this.dic[e].filter(l=>l!==a);this.dic[e]=[...n.slice(i),...s]}else this.dic[e]=this.dic[e].slice(i);return this.dic[e]});o(this,"removeAll",(e,i)=>{if(i){const r=this.dic[e].filter(n=>n===i).length;return this.dic[e]=this.dic[e].filter(n=>n!==i),r}const a=this.dic[e];return delete this.dic[e],a});o(this,"getQty",(e,i)=>this.dic[e]?i?this.dic[e].filter(a=>a===i).length:this.dic[e].length??0:0);o(this,"setSelfDestructionFlg",e=>{this.add("SelfDestruction",1,e)});o(this,"getSelfDestructionFlg",e=>this.getQty("SelfDestruction",e)>0);o(this,"setCurfewFlg",e=>{this.add("Curfew",1,e)});o(this,"getCurfewFlg",e=>this.getQty("Curfew",e)>0);o(this,"incrementActionCountPerTurn",e=>{this.temporaryCounterNames.push(e.title),this.incrementActionCount(e)});o(this,"incrementActionCount",e=>{this.dic[e.title]=[e.entity,...this.dic[e.title]??[]]});o(this,"getActionCount",e=>this.dic[e.title]?this.dic[e.title].filter(i=>i===e.entity).length:0);o(this,"corpseDisposal",()=>{this.temporaryCounterNames.forEach(e=>delete this.dic[e]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(e=>e.temporary).forEach(e=>delete this.dic[e.name])});o(this,"removeAllActualCounters",()=>{Object.values(Dt).filter(e=>e.type==="Actual").forEach(e=>delete this.dic[e.name])});o(this,"removeAllWhenfaceDown",()=>{this.temporaryCounterNames.forEach(e=>delete this.dic[e]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(e=>!e.sticky).forEach(e=>delete this.dic[e.name])});o(this,"clear",()=>{this.temporaryCounterNames.forEach(e=>delete this.dic[e]),this.temporaryCounterNames.reset(),Object.values(Dt).filter(e=>e.isOnlyOnField).forEach(e=>delete this.dic[e.name])});this.dic={},this.temporaryCounterNames=[],this.entity=e}}class Vc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",i=>i.field.getAllEntities().map(a=>a.statusOperatorBundle).every(a=>a.calcStatus()))}}class Wc extends di{constructor(){super(...arguments);o(this,"calcStatus",()=>{const i=this.entity.isEffective;return this.entity.resetStatus(),this.entity.status=this._operators.filter(a=>a.isSpawnedBy.isEffective||!a.isContinuous).reduce((a,r)=>({...a,...r.statusCalculator(this.entity,r,a)}),this.entity.status),this.entity.isEffective===i});o(this,"beforePush",()=>{});o(this,"afterPush",()=>{this.calcStatus()})}}class oe extends Tt{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"statusCalculator");this.statusCalculator=i.statusCalculator}}const Kt=class Kt extends ai{constructor(){super(...arguments);o(this,"isApplicableTo",(...i)=>{const a=this.entity.counterHolder.getActionCount(this);return this.isOnlyNTimesPerTurnIfFaceup>0&&a>=this.isOnlyNTimesPerTurnIfFaceup?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&a>=this.isOnlyNTimesIfFaceup&&this.entity.counterHolder.incrementActionCount(this),this.definition.isApplicableTo(this,...i)});o(this,"substitute",async(i,a,r)=>{const n=await this.definition.substitute(this,i,a,r);return this.isOnlyNTimesPerTurnIfFaceup>0?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&this.entity.counterHolder.incrementActionCount(this),n});o(this,"getClone",()=>new Kt(this.seq,this.entity,this.definition))}get definition(){return super.definition}};o(Kt,"createNew",(i,a)=>new Kt("AutoSeq",i,a));let Ba=Kt;class Qc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>!0)}}class Xc extends di{constructor(){super(...arguments);o(this,"beforePush",()=>{});o(this,"afterPush",()=>{});o(this,"filter",(i,a,r,n,s,l,c)=>this.effectiveOperators.filter(u=>u.summonKinds.includes(a)).reduce((u,d)=>({...u,...d.filter(this.entity,i,s.summoner,[a,...r],n,s.monster,l,u.posList,u.cells,c)}),s))}}class Kc extends Tt{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"summonKinds");o(this,"filter");this.summonKinds=i.summonKinds,this.filter=(...a)=>i.filter(this,...a)}}const B=class B{constructor(){}};o(B,"_tryMarkForDestroy",(e,i)=>{if(e.info.isDying||e.kind==="XyzMaterial"||!e.isOnFieldStrictly&&e.cell.cellType!=="Deck"&&e.cell.cellType!=="Hand")return!1;const a=i.action.playType==="Battle"?"Battle":"Effect",r=a==="Battle"&&i.action.entity===e?i.selectedEntities[0]:i.action.entity;return e.info.isDying=e.validateDestroy(a,i.activator,r,i.action),e.info.isDying&&(e.info.causeOfDeath=[a,"Destroy"],e.info.isKilledBy=r,e.info.isKilledByWhom=i.activator,a==="Battle"&&(e.info.isKilledByWhom=r.controller)),e.info.isDying}),o(B,"excavateFromDeck",async(e,i,a,r)=>{const n=await B.excavateManyFromDeck(e,1,i,a,r);return n.length?n[0]:void 0}),o(B,"excavateManyFromDeck",async(e,i,a,r,n)=>{const s=e.getDeckCell().cardEntities.slice(0,i);return await H.moveMany(s.map(l=>({entity:l,to:l.cell,kind:l.kind,face:"FaceUp",orientation:l.orientation,pos:"Fix",movedAs:["Excavate",...a],movedBy:r,actionOwner:n,chooser:void 0}))),s}),o(B,"releaseManyForTheSameReason",(e,i,a,r)=>e.length?(i.includes("Cost")&&r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}をリリースし――、`),B.bringManyToSameCellForTheSameReason("Graveyard","Top",e,"FaceUp","Vertical",["Release",...i],a,r)):Promise.resolve([])),o(B,"sendManyToGraveyardForTheSameReason",(e,i,a,r)=>e.length?(r&&i.includes("Cost")&&(i.includes("FusionMaterial")?r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}を融合素材とし――、`):i.includes("SynchroMaterial")?r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}をシンクロと素材し――、`):i.includes("LinkMaterial")?r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}をリンクマーカーにセッティング――、`):r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}を墓地に送り――、`)),B.bringManyToSameCellForTheSameReason("Graveyard","Top",e,"FaceUp","Vertical",i,a,r)):Promise.resolve([])),o(B,"addManyToHand",(e,i,a,r)=>e.length?B.bringManyToSameCellForTheSameReason("Hand","Bottom",e,"FaceDown","Vertical",i,a,r):Promise.resolve([])),o(B,"discardManyForTheSameReason",(e,i,a,r)=>e.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}を手札から捨て――、`),B.bringManyToSameCellForTheSameReason("Graveyard","Top",e,"FaceUp","Vertical",["Discard",...i],a,r)):Promise.resolve([])),o(B,"banishManyForTheSameReason",(e,i,a,r)=>e.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}をゲームから除外し――、`),B.bringManyToSameCellForTheSameReason("Banished","Top",e,"FaceUp","Vertical",i,a,r)):Promise.resolve([])),o(B,"returnManyToDeckForTheSameReason",(e,i,a,r,n)=>i.length?(n&&a.includes("Cost")&&n.writeInfoLog(`${i.map(s=>s.toString()).join(" ")}をデッキに戻し――、`),B.bringManyToSameCellForTheSameReason("Deck",e,i,"FaceDown","Vertical",a,r,n)):Promise.resolve([])),o(B,"returnManyToHandForTheSameReason",(e,i,a,r)=>e.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}を手札に戻し――、`),B.bringManyToSameCellForTheSameReason("Hand","Bottom",e,"FaceDown","Vertical",i,a,r)):Promise.resolve([])),o(B,"convertManyToXyzMaterials",(e,i,a,r)=>e.length?(r&&i.includes("Cost")&&r.writeInfoLog(`${e.map(n=>n.toString()).join(" ")}によって、オーバーレイネットワークを構築――、`),H.moveMany(e.map(n=>({entity:n,to:n.cell,kind:"XyzMaterial",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:i,movedBy:a,actionOwner:r,chooser:r})))):Promise.resolve()),o(B,"moveToXyzOwner",async(e,i,a,r,n,s)=>{a.length&&(await H.moveMany(a.map(l=>({entity:l,to:e,kind:"XyzMaterial",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:r,movedBy:n,actionOwner:s,chooser:s}))),a.forEach(l=>l.info.xyzOwner=i))}),o(B,"banishMany",(e,i)=>H.bringManyToSameCell("Banished","Top",e.map(a=>({...a,face:"FaceUp",orientation:"Vertical"})),i)),o(B,"bringManyToSameCellForTheSameReason",(e,i,a,r,n,s,l,c)=>H.bringManyToSameCell(e,i,a.map(u=>({entity:u,face:r,orientation:n,movedAs:s,movedBy:l,activator:c})))),o(B,"tryDestroy",async(e,i)=>{const a=await B.tryMarkForDestroy(e,i);return await B.waitCorpseDisposal(i.activator.duel),a}),o(B,"waitCorpseDisposal",(e,i={})=>{const a=i.excludedList??[];return H.sendManyToGraveyard(e.field.getDyingCardsOnField().filter(r=>r.info.isDying).filter(r=>!a.includes(r)).map(r=>({entity:r,movedAs:r.info.causeOfDeath??[],movedBy:r.info.isKilledBy,activator:r.info.isKilledByWhom})))}),o(B,"tryMarkForDestroy",async(e,i)=>{let a=e.filter(l=>B._tryMarkForDestroy(l,i));if(!a.length)return[];const r=i.action.playType==="Battle"?"Battle":"Effect";(await Promise.all(e[0].field.getAllEntities().flatMap(l=>l.substituteEffects.filter(c=>c.isMandatory).filter(c=>c.executableCells.includes(l.cell.cellType)).filter(c=>c.isApplicableTo(r,e,i).length).flatMap(c=>c.substitute(r,e,i))))).flatMap(l=>l).forEach(l=>{l.resetCauseOfDeath()}),a=a.filter(l=>l.info.isDying);let n=e[0].field.getAllEntities().flatMap(l=>l.substituteEffects.filter(c=>!c.isMandatory).filter(c=>c.executableCells.includes(l.cell.cellType)).filter(c=>c.isApplicableTo(r,e,i).length).map(c=>({chooser:l.owner,effect:c,sacrifice:l})));for(const l of n.map(c=>c.sacrifice.controller).getDistinct()){const c=n.filter(d=>d.sacrifice.controller===l),u=await l.duel.view.waitSelectAction(l,c.map(d=>({entity:d.sacrifice,title:d.effect.title,origin:d.effect})),"身代わり効果を適用する？",!0);if(u){if((await u.substitute(r,a,i)).forEach(d=>{d.resetCauseOfDeath()}),a=a.filter(d=>d.info.isDying),!a.length)return[];n=n.filter(d=>d.effect.isApplicableTo(r,e,i).length)}}const s=a.filter(l=>l.info.isDying);return s.forEach(l=>l.duel.log.info(`${l.toString()}を${r==="Battle"?"戦闘":r==="Effect"?"効果":"ルール"}破壊。`,l.info.isKilledByWhom)),s}),o(B,"tryBanish",async(e,i,a)=>{const r=i.filter(n=>n.canBeBanished(e,a.activator,a.action.entity,a.action));return await B.banishManyForTheSameReason(r,["Effect"],a.action.entity,a.activator),r.filter(n=>n.cell.cellType==="Banished").filter(n=>n.moveLog.latestRecord.movedBy===a.action.entity)}),o(B,"negateSummonMany",(e,i)=>{const a=i.duel.field.getPendingMonstersOnField();return a.forEach(r=>{r.info.summonKinds=[],r.info.materials=[],r.moveLog.negateSummon(e,i)}),i.writeInfoLog(`${a.map(r=>r.toString()).join(" ")}.の召喚は無効にされた。`),a}),o(B,"drawAtSameTime",async(e,i,a,r)=>{const n=[],s=[],l=[e.draw(a,i,e),e.getOpponentPlayer().draw(r,i,e)].map(c=>c.catch(u=>{u instanceof re?u.winner&&n.push(u.winner):s.push(u)}));if(await Promise.all(l),s.length)throw new _("ドロー処理で想定されない例外が発生した。",e,a,r,i,...s);if(n.length!==0)throw n.length===1?new re(n[0],`${n[0].getOpponentPlayer().name}がデッキからドローできなかった。`):new re(void 0,"お互いにデッキからカードをドローできなかった。")});let S=B;class Yc extends ui{constructor(){super(...arguments);o(this,"afterDistributeAll",()=>!0)}}class Jc extends di{constructor(){super(...arguments);o(this,"beforePush",()=>{});o(this,"afterPush",()=>{})}}class $n extends Tt{constructor(i){super(i);o(this,"beforeRemove",()=>{});o(this,"calcType");o(this,"filter");this.calcType=i.calcType,this.filter=(...a)=>i.filter(this,...a)}}const Sa=(t,e,...i)=>t.filter(a=>e.includes(a.calcType)).reduce((a,r)=>({...a,...r.filter(...i)}),{}),Un=(...t)=>{const[e,i,a,r,n,s,l]=t,c=[a.entity,r,n].filter(f=>!!f).flatMap(f=>f.damageFilterBundle.effectiveOperators);let u=Sa(c,["double_typeA","eachOther_typeA","eachOther_typeB","asEffectDamage"],...t);const d={point:e,damageToOpponent1:0,damageToOpponent2:0,damageType:s};return u.double_typeA&&(d.point*=2),u.asEffectDamage&&(d.damageType="EffectDamage"),u={...Sa(c,["heal","zero_typeA","half","double_typeB","fix"],d.point,i,a,r,n,d.damageType,l),...u},u.fix!==void 0?d.point=u.fix:u.zero_typeA?d.point=0:(u.half&&(d.point=Math.round(d.point/2)),u.double_typeA&&(d.point*=2)),u={...Sa(c,["zero_typeB"],d.point,i,a,r,n,d.damageType,l),...u},u.zero_typeB&&(d.point=0),u.heal?d.damageType="Heal":(u.eachOther_typeA&&(d.damageToOpponent1=d.point),u.eachOther_typeB&&(d.damageToOpponent2=d.point,u.eachOther_typeB==="Substitude"&&(d.point=0))),d},Ic=(t,e,i)=>Un(t,e.activator,i,e.action.entity,void 0,"EffectDamage",e.action),eu=(t,e,i,a,r,n)=>Un(t,e,i,a,r.entityType==="Duelist"?void 0:r,"BattleDamage",n),Gi=t=>new Promise(e=>setTimeout(e,t)),jn=()=>{let t=()=>{},e=()=>{};return{promise:new Promise((a,r)=>{t=a,e=r}),resolve:t,reject:e}},Xi=class Xi extends ai{constructor(i,a,r){super(i,a,{...r,playType:"ContinuousEffect",isMandatory:!1,executableDuelistTypes:["Controller"]});o(this,"toString",()=>this.title);o(this,"toFullString",()=>`${this.entity.toString()}の${this.toString()}`);o(this,"execute",async(i,a)=>{if(!this.canExecute())return;const r=await this.definition.execute(this,i,a);return r==="RemoveMe"&&this.entity.immediatelyActions.reset(...this.entity.immediatelyActions.filter(n=>n!==this)),r})}get definition(){return super.definition}get playType(){return this.definition.playType}};o(Xi,"createNew",(i,a)=>new Xi("AutoSeq",i,a));let La=Xi;const sr=["FaceUp","FaceDown"],zn=["FusionSummon","SynchroSummon","XyzSummon","PendulumSummon","LinkSummon","RitualSummon","FlipSummon"],tu={FusionSummon:"融合召喚",SynchroSummon:"シンクロ召喚",XyzSummon:"エクシーズ召喚",PendulumSummon:"ペンデュラム召喚",LinkSummon:"リンク召喚",RitualSummon:"儀式召喚",FlipSummon:"反転召喚"},Vn=[...zn,"AdvanceSummon","NormalSummon","SpecialSummon"];[...Vn];const iu=t=>t+"Summon",Br=["Card","Token"],au=["Duelist","Squatter"],ru=(t,e)=>Nn(t.origin,e.origin),z=class z{constructor(e,i,a,r,n,s,l){o(this,"seq");o(this,"origin");o(this,"entityType");o(this,"summonFilterBundle");o(this,"procFilterBundle");o(this,"numericOprsBundle");o(this,"statusOperatorBundle");o(this,"damageFilterBundle");o(this,"moveLog");o(this,"counterHolder");o(this,"parent");o(this,"face");o(this,"orientation");o(this,"owner");o(this,"cell");o(this,"_status");o(this,"_numericStatus");o(this,"_info");o(this,"actions",[]);o(this,"immediatelyActions",[]);o(this,"continuousEffects",[]);o(this,"substituteEffects",[]);o(this,"canBeReleased",(e,i,a,r)=>!this.isInTrashCell&&this.procFilterBundle.filter(a,e,i,r,[this]));o(this,"canBeSentToGraveyard",(e,i,a,r)=>!this.status.willBeBanished&&!this.status.willReturnToDeck&&this.procFilterBundle.filter([a],e,i,r,[this]));o(this,"_exists",!0);o(this,"validateFusionMaterials",e=>this.definition.fusionMaterialInfos?this.definition.validateFusionMaterials?this.definition.validateFusionMaterials(e):!0:!1);o(this,"definition");o(this,"toString",()=>{let e=this.nm;return this.nm!==this.origin.name&&(e=`${e}(${this.origin.name})`),this.entityType==="Card"?`《${e}》`:e});o(this,"onUsedAsMaterial",(e,i)=>{this.definition.onUsedAsMaterial&&this.definition.onUsedAsMaterial(this,e,i)});o(this,"setBattlePosition",async(e,i,a,r)=>{let n=`表示形式の変更：${this.toString()}（${this.battlePositionName}⇒${Ti[e]}）`;const s=[...i];this.battlePosition==="Set"&&(s.push("Flip"),i.includes("Rule")&&(this.info.isPending=!0,n=`${this.toString()}を反転召喚`,this.info.summonKinds.push("FlipSummon"),s.push("FlipSummon"),s.push("AttackSummon"))),this.duel.log.info(n,r),await this.moveAlone(this.cell,"Monster",e==="Set"?"FaceDown":"FaceUp",e==="Attack"?"Vertical":"Horizontal","Top",s,a,r,r)});o(this,"activateAsPendulumScale",(e,i,a,r)=>this.moveAlone(e,"Spell","FaceUp","Vertical","Top",["CardActivation",...i],a,r,r));o(this,"setNonFieldMonsterPosition",async(e,i,a,r,n)=>{this.moveAlone(this.cell,e,i==="FaceUp"?"FaceUp":"FaceDown","Vertical","Top",a,r,n,n)});o(this,"setAsSpellTrap",async(e,i,a,r,n)=>{await this.moveAlone(e,i,"FaceDown","Vertical","Top",[...a,"SpellTrapSet"],r,n,n)});o(this,"activateSpellTrapFromHand",async(e,i,a,r,n)=>{await this.moveAlone(e,i,"FaceUp","Vertical","Top",[...a,"CardActivation"],r,n,n)});o(this,"putDirectly",async(e,i,a,r,n)=>{await this.moveAlone(e,i,"FaceUp","Vertical","Top",[...a,"PutDirectly"],r,n,n)});o(this,"activateSpellTrapOnField",async(e,i,a,r)=>{await this.moveAlone(this.cell,e,"FaceUp","Vertical","Top",[...i,"CardActivation"],a,r,r)});o(this,"draw",async(e,i,a)=>await this.addToHand([...e,"Draw"],i,a));o(this,"addToHand",async(e,i,a)=>await this.moveAlone(this.owner.getHandCell(),this.origin.kind,"FaceDown","Vertical","Bottom",[...e],i,a,a));o(this,"summon",(e,i,a,r,n,s,l)=>z.summonMany([{monster:this,dest:e,summoner:l??s,pos:i}],a,r,n,s));o(this,"moveForcibly",async(e,i,a,r,n,s,l)=>{await this.moveAlone(e,this.origin.kind,i,a,r,["Rule",...n],s,l,l)});o(this,"excavate",async(e,i,a)=>this.moveAlone(this.cell,this.kind,"FaceUp",this.orientation,"Fix",["Excavate",...e],i,a,void 0));o(this,"moveAlone",async(e,i,a,r,n,s,l,c,u)=>(await z.moveMany([{entity:this,to:e,kind:i,face:a,orientation:r,pos:n,movedAs:s,movedBy:l,actionOwner:c,chooser:u}],void 0),this.cell));o(this,"determine",async()=>{this.info.isPending&&(this.info.isPending=!1,this.moveLog.finalize(),this.continuousEffects.forEach(e=>e.updateState()),await this.fireImmediatelyActions(),await S.waitCorpseDisposal(this.duel))});o(this,"_move",async e=>{var n,s;if(!e.to)throw new Error("illegal argument: to");const i={cell:this.cell,status:this.status,info:this.info};this.face=e.face,this.orientation=e.orientation;let a=!1,r=e.actionOwner;if(!r&&e.movedAs.includes("LostDestinyBond")){console.log(this.toString(),(n=this.info.equipedBy)==null?void 0:n.toString(),(s=this.info.xyzOwner)==null?void 0:s.toString());const l=this.info.equipedBy??this.info.xyzOwner;l&&(r=l.moveLog.latestRecord.actionOwner)}return e.to!==this.cell&&(this.duel.log.pushMoveLog(r,this,this.cell,e.to),this.cell.cellType==="WaitingRoom"?a=!0:e.to.cellType==="WaitingRoom"?(this._exists=!1,await this.duel.view.waitTokenAnimation()):this.field.duel.clock.turn&&await this.field.duel.view.waitAnimation({entity:this,to:e.to,index:e.pos,count:0})),(e.to!==this.cell||e.pos==="Random")&&(this.cell.releaseEntities(this),this.cell.isPlayFieldCell&&!e.to.isPlayFieldCell&&(this.counterHolder.clear(),this.resetCauseOfDeath()),this.cell.isMonsterZoneLikeCell&&!e.to.isMonsterZoneLikeCell||e.kind!=="Monster"?(this.resetNumericStatus(),this.info.isEffectiveIn.push(...Se),this.info.equipEntities.filter(l=>l.isOnFieldAsSpellTrapStrictly).forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["Rule","Destroy","LostEquipOwner","LostDestinyBond"],this.controller.writeInfoLog(`装備対象${this.toString()}不在により${l.toString()}は破壊された。`)}),this.info.equipEntities=[],this.kind!=="XyzMaterial"&&this.cell.xyzMaterials.forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["LostXyzOwner","LostDestinyBond"],this.controller.writeInfoLog(`${this.toString()}不在により、XYZ素材${l.toString()}は墓地に送られた。`)})):this.cell.cellType==="SpellAndTrapZone"&&e.to.cellType!=="SpellAndTrapZone"&&(this.info.equipedBy=void 0,this.info.equipedAs=void 0,this.info.isEffectiveIn.push(...Se)),e.to.acceptEntities(this,e.pos),a&&(await Gi(1),this._exists=!0,await this.duel.view.waitTokenAnimation()),(e.to===this.isBelongTo||e.to.cellType==="Hand"||e.to.cellType==="Banished"&&this.face==="FaceDown")&&(this.counterHolder.clear(),this.resetInfoAll(),this.resetStatusAll())),(this.isOnFieldStrictly&&this.face==="FaceDown"||e.kind==="XyzMaterial")&&(this.info.equipEntities.forEach(l=>{l.info.isDying=!0,l.info.causeOfDeath=["Rule","Destroy","LostEquipOwner","LostDestinyBond"],this.controller.writeInfoLog(`装備対象${this.toString()}不在により${l.toString()}は破壊された。`)}),this.counterHolder.removeAllWhenfaceDown(),this.info.materials=[],this.status={...this._status,isEffective:!0},this.info.isEffectiveIn=[...Me],this.resetNumericStatus(),this.info.isSettingSickness=this.kind==="Trap"||this.status.spellCategory==="QuickPlay"),this._info.kind=e.kind,this.moveLog.push(e.kind,e.movedAs,e.movedBy,e.actionOwner,e.chooser),await this.fireImmediatelyActions(i),e.to});o(this,"fireImmediatelyActions",async e=>{for(const i of[this,...this.field.getCardsOnFieldStrictly()].getDistinct().filter(a=>a.immediatelyActions.length).toSorted((a,r)=>a.hadArrivedToFieldAt().totalProcSeq-r.hadArrivedToFieldAt().totalProcSeq).flatMap(a=>a.immediatelyActions))await i.execute(this,e)});o(this,"initForTurn",()=>{this.info.isSettingSickness=!1,this.info.attackDeclareCount=0,this.info.battlePotisionChangeCount=0,this.counterHolder.corpseDisposal()});o(this,"resetInfoIfLeavesTheField",()=>{this._info={...this._info,isDying:!1,isPending:!1,causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,effectTargets:{},attackDeclareCount:0,battlePotisionChangeCount:0,materials:[],equipedBy:void 0,equipedAs:void 0,equipEntities:[]},this._info.isEffectiveIn.push(...Se),this._info.isEffectiveIn.distinct()});o(this,"resetInfoAll",()=>{var e;this._info={kind:this.origin.kind,isDying:!1,isPending:!1,isEffectiveIn:[...Me],causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,isVanished:!1,isRebornable:((e=this.origin.monsterCategories)==null?void 0:e.union(Pn).length)===0,isSettingSickness:!1,summonKinds:[],materials:[],effectTargets:{},attackDeclareCount:0,battlePotisionChangeCount:0,equipedBy:void 0,equipedAs:void 0,validateEquipOwner:()=>!0,equipEntities:[],xyzOwner:void 0,battleLog:[]},this.counterHolder.clear()});o(this,"resetNumericStatus",()=>{const e=Fn.reduce((i,a)=>(i[a]=this.origin[a],i),{});this._numericStatus={origin:{...e},wip:{...e},calculated:{...e}}});o(this,"resetStatus",()=>{this.status={...this.origin,canBattlePositionChange:!0,canAttack:!0,canDirectAttack:!1,canActivateEffect:!0,isEffective:!0,isFaithful:!1,isSelectableForAttack:!0,allowHandSynchro:!1,allowHandLink:!1,willBeBanished:!1,willReturnToDeck:void 0,fusionSubstitute:!1,maxCounterQty:{},piercingTo:[]}});o(this,"resetStatusAll",()=>{this.resetNumericStatus(),this.resetStatus()});o(this,"resetCauseOfDeath",()=>{this.info.isDying=!1,this.info.causeOfDeath=[],this.info.isKilledBy=void 0,this.info.isKilledByWhom=void 0});this.seq=z.nextEntitySeq++,this.counterHolder=new zc(this),this.definition=r,this.owner=e,this.cell=i,this.entityType=a,this.parent=l,this.origin=r.staticInfo,this._status=JSON.parse(JSON.stringify(r.staticInfo)),this._numericStatus=JSON.parse(JSON.stringify(r.staticInfo)),this.resetStatusAll(),this._info={kind:this.origin.kind,isEffectiveIn:[...Me],attackDeclareCount:0,battlePotisionChangeCount:0,isDying:!1,isPending:!1,causeOfDeath:[],isKilledBy:void 0,isKilledByWhom:void 0,isVanished:!1,isRebornable:!0,isSettingSickness:!1,summonKinds:[],materials:[],effectTargets:{},equipedBy:void 0,equipedAs:void 0,validateEquipOwner:()=>!0,equipEntities:[],xyzOwner:void 0,battleLog:[]},this.resetInfoAll(),this.face=n,this.orientation=s,this.summonFilterBundle=new Xc(i.field.summonFilterPool,this),this.procFilterBundle=new Sc(i.field.procFilterPool,this),this.numericOprsBundle=new Cc(i.field.numericStateOperatorPool,this),this.statusOperatorBundle=new Wc(i.field.statusOperatorPool,this),this.damageFilterBundle=new Jc(i.field.damageFilterPool,this),this._exists=this.entityType==="Card",i.acceptEntities(this,"Top"),this.moveLog=new Fc(this),this.moveLog.pushForRuleAction(["Spawn"]);let c=[];c=r.continuousEffects??[],this.substituteEffects.push(...(r.substituteEffects??[]).map(u=>Ba.createNew(this,u))),this.origin.kind==="Monster"&&this.entityType==="Card"&&r.summonFilter&&this.summonFilterBundle.push(new Kc({title:"default",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:this,actionAttr:{},isApplicableTo:()=>!0,summonKinds:Vn,filter:r.summonFilter})),r.defaultStatus&&this.statusOperatorBundle.push(new oe({title:"default",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:this,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:()=>r.defaultStatus??{}})),this.actions.push(...r.actions.map(u=>St.createNew(this,u))),this.immediatelyActions.push(...(r.immediatelyActions??[]).map(u=>La.createNew(this,u))),this.continuousEffects.push(...c.map(u=>Na.createNew(this,u)))}get isUnderControl(){return this.face==="FaceUp"||Bn.every(e=>e!==this.cell.cellType)}get controller(){return this.cell.owner??this.owner}get field(){return this.owner.duel.field}get duel(){return this.owner.duel.field.duel}get actionLogRecords(){return this.duel.chainBlockLog.records.filter(e=>e.chainBlockInfo.action.entity===this)}get status(){return this._status}set status(e){this._status={...e}}get numericStatus(){return this._numericStatus}get info(){return this._info}get kind(){return this.info.kind}get nm(){return this.status.name}get atk(){return this._numericStatus.calculated.attack}get def(){return this._numericStatus.calculated.defense}get lvl(){return this._numericStatus.calculated.level}get rank(){return this._numericStatus.calculated.rank}get attr(){return this.status.attributes??[]}get types(){return this.status.types??[]}get psL(){return this._numericStatus.calculated.pendulumScaleL}get psR(){return this._numericStatus.calculated.pendulumScaleR}get linkArrows(){let e=(this.origin.linkArrowKeys??[]).map(i=>On[i].linkArrow);return this.controller.seat==="Above"&&(e=e.map(i=>({offsetColumn:i.offsetColumn*-1,offsetRow:i.offsetRow*-1}))),e}get linkArrowDests(){var e;return(e=this.origin.monsterCategories)!=null&&e.includes("Link")?this.isOnFieldAsMonsterStrictly?this.linkArrows.map(i=>[this.cell.row+i.offsetRow,this.cell.column+i.offsetColumn]).map(([i,a])=>this.field.cells[i][a]).filter(i=>i.isMonsterZoneLikeCell):[]:[]}get linkedEntities(){return this.isOnFieldAsMonsterStrictly?[...this.linkArrowDests.map(e=>e.cardEntities[0]).map(e=>e),...this.cell.linkArrowSources].getDistinct():[]}get coLinkedEntities(){var e;return this.isOnFieldAsMonsterStrictly?(e=this.origin.monsterCategories)!=null&&e.includes("Link")?this.linkArrowDests.map(i=>i.cardEntities[0]).filter(i=>i).union(this.cell.linkArrowSources):[]:[]}get isEffective(){return this.status.isEffective&&this.info.isEffectiveIn.includes(this.cell.cellType)}get canBeSet(){var e;return this.entityType==="Card"&&!((e=this.status.monsterCategories)!=null&&e.includes("Link"))}get isEffectiveWeakly(){return this.status.isEffective}get battlePosition(){if(this.isOnFieldStrictly&&this.kind==="Monster")return this.orientation==="Vertical"?"Attack":this.face==="FaceUp"?"Defense":"Set"}get battlePositionName(){const e=this.battlePosition;if(e)return Ti[e]}get wasMovedAtCurrentProc(){return this.field.duel.clock.totalProcSeq===this.moveLog.latestRecord.movedAt.totalProcSeq}get wasMovedAtPreviousProc(){return this.field.duel.clock.totalProcSeq===this.moveLog.latestRecord.movedAt.totalProcSeq+1}get wasMovedAtCurrentTurn(){return this.field.duel.clock.isSameTurn(this.moveLog.latestRecord.movedAt)}get wasMovedAtCurrentChain(){return this.field.duel.clock.isSameChain(this.moveLog.latestRecord.movedAt)}get wasMovedAtPreviousChain(){return this.field.duel.clock.isPreviousChain(this.moveLog.latestRecord.movedAt)}get wasMovedAtPreviousTurn(){return this.field.duel.clock.isPreviousTurn(this.moveLog.latestRecord.movedAt)}get wasMovedFrom(){return this.moveLog.previousPlaceRecord.cell}get isPendulumScale(){var e;return!(!((e=this.origin.monsterCategories)!=null&&e.includes("Pendulum"))||!this.isOnField||!this.cell.isSpellTrapZoneLikeCell||this.status.spellCategory)}get isOnField(){return this.cell.isPlayFieldCell}get isOnFieldStrictly(){return this.isOnField&&!this.info.isPending&&!this.info.isDying&&this.kind!=="XyzMaterial"}get isOnFieldAsMonsterStrictly(){return this.cell.isMonsterZoneLikeCell&&this.isOnFieldStrictly}get isMonster(){return this.isOnFieldAsMonsterStrictly||this.kind==="Monster"}get isOnFieldAsSpellTrapStrictly(){return this.isOnFieldStrictly&&(this.kind==="Spell"||this.kind==="Trap")}get isInTrashCell(){return this.cell.isTrashCell}get isLikeContinuousSpell(){return this.status.spellCategory==="Continuous"||this.status.spellCategory==="Field"||this.status.spellCategory==="Equip"||this.status.trapCategory==="Continuous"||(this.status.monsterCategories??[]).includes("Pendulum")}get isBelongTo(){return this.origin.monsterCategories&&this.origin.monsterCategories.union(Li).length?this.owner.getExtraDeck():this.owner.getDeckCell()}get exist(){return this._exists}get allStickyEffectOperators(){return[...this.procFilterBundle.effectiveOperators,...this.numericOprsBundle.effectiveOperators]}get fusionMaterialInfos(){return this.definition.fusionMaterialInfos??[]}};o(z,"nextEntitySeq",0),o(z,"splitBattlePos",e=>({face:e==="Set"?"FaceDown":"FaceUp",orientation:e==="Attack"?"Vertical":"Horizontal"})),o(z,"recreateArray",(e,i)=>{if(!i.length)return[];const a=e.getAllCells().flatMap(r=>r.entities);return i.map(r=>r.seq).map(r=>a.find(n=>n.seq===r)).filter(r=>r!==void 0)}),o(z,"createPlayerEntity",e=>{const i=e.getHandCell();return new z(e,i,"Duelist",hp(e),"FaceUp","Vertical")}),o(z,"createCardEntity",(e,i)=>{const a=i.staticInfo.monsterCategories&&i.staticInfo.monsterCategories.union(Li).length?e.getExtraDeck():e.getDeckCell();return new z(e,a,"Card",i,"FaceDown","Vertical")}),o(z,"createTokenEntity",(e,i,a)=>new z(e,e.duel.field.getWaitingRoomCell(),"Token",a,"FaceUp","Vertical",i)),o(z,"moveMany",async(e,i)=>{if(!e.length)return;const a=e[0].entity.duel,n=[...e.filter(l=>l.entity.cell!==l.to).map(l=>l.entity).filter(l=>!(i??[]).includes(l)),...a.field.getCardsOnFieldStrictly().filter(l=>l.info.isDying)],s=new Map;for(e.forEach(({entity:l,to:c,kind:u,face:d,orientation:f,pos:p,...h})=>{var D;let y=c,v=u,g=d,m=p,T=f;l.status.willBeBanished?(y=l.owner.getBanished(),g="FaceUp",T="Vertical"):l.status.willReturnToDeck?(y=l.isBelongTo,g="FaceDown",m=l.status.willReturnToDeck,T="Vertical"):(D=l.status.monsterCategories)!=null&&D.includes("Pendulum")&&l.isOnField&&!l.info.isPending&&l.kind!=="XyzMaterial"&&l.face==="FaceUp"&&c.isTrashCell&&(y=l.owner.getExtraDeck(),g="FaceUp",m="Top",T="Vertical"),y.cellType==="ExtraDeck"&&(m=g==="FaceUp"?"Top":"Bottom"),l.isBelongTo.cellType==="ExtraDeck"&&(y.cellType==="Hand"||y.cellType==="Deck")&&(y=l.isBelongTo,g="FaceDown",T="Vertical"),y.isPlayFieldCell||(v=l.origin.kind,l.entityType==="Token"&&(y=l.field.getWaitingRoomCell())),y.isMonsterZoneLikeCell||(T="Vertical"),s.set(y,[{entity:l,to:y,kind:v,face:g,orientation:T,pos:m,...h},...s.get(y)??[]])});;){const l=Array.from(s.values()).map(c=>c.pop()).filter(c=>c!==void 0).map(c=>c.entity._move(c));if(!l.length)break;await Promise.all(l),await S.waitCorpseDisposal(a,{excludedList:n})}z.settleEntityMove(a)}),o(z,"summonMany",async(e,i,a,r,n)=>{if(!e.length)return;const s=n.duel,l={Attack:"AttackSummon",Defense:"DefenseSummon",Set:"SetSummon"},c=e.map(({monster:u,dest:d,pos:f,summoner:p})=>{if(u.info.summonKinds=[i],i==="NormalSummon"||i==="AdvanceSummon"){u.info.summonKinds.push("NormalSummon");const v=i==="AdvanceSummon"?"アドバンス":"";f==="Attack"?u.field.duel.log.info(`${u.toString()}を${v}召喚`,p):u.duel.log.info(`${u.toString()}を${v}セット`,p),a.includes("Rule")?p.info.ruleNormalSummonCountQty++:p.info.effectNormalSummonCountQty++}else i==="SpecialSummon"?u.duel.log.info(`${u.toString()}を${Ti[f]}で特殊召喚`,p):(u.info.summonKinds.push("SpecialSummon"),u.duel.log.info(`${u.toString()}を${Ti[f]}で${tu[i]}！`,p)),p.info.specialSummonCountQty++;u.info.summonKinds=u.info.summonKinds.getDistinct(),u.info.battlePotisionChangeCount=1;const{face:h,orientation:y}=z.splitBattlePos(f);return a.includes("Rule")&&(u.info.isPending=!0),{entity:u,args:{to:d,kind:"Monster",face:h,orientation:y,pos:"Top",movedAs:[i,l[f],...a],movedBy:r,actionOwner:n,chooser:p}}}).map(u=>u.entity._move(u.args));await Promise.all(c),e.map(u=>u.summoner).forEach(u=>{i==="NormalSummon"||i==="AdvanceSummon"?a.includes("Rule")?u.info.ruleNormalSummonCount++:u.info.effectNormalSummonCount++:u.info.specialSummonCount++}),await S.waitCorpseDisposal(s),z.settleEntityMove(e[0].monster.duel)}),o(z,"sendManyToGraveyard",(e,i)=>z.bringManyToSameCell("Graveyard","Top",e.map(a=>({...a,face:"FaceUp",orientation:"Vertical"})),i)),o(z,"bringManyToSameCell",async(e,i,a,r)=>(await z.moveMany(a.map(n=>({...n,to:n.entity.field.getCells(e).filter(s=>s.owner===n.entity.owner)[0],kind:n.entity.origin.kind,pos:i,chooser:n.activator,actionOwner:n.activator})),r),a.map(n=>n.entity).filter(n=>n.cell.cellType===e))),o(z,"settleEntityMove",e=>{e.field.recalcLinkArrows(),e.field.distributeOperators(e.clock);const i=e.field.getAllEntities().filter(a=>a.wasMovedAtCurrentProc);i.filter(a=>!a.isOnFieldStrictly&&!a.info.isPending).forEach(a=>a.resetInfoIfLeavesTheField()),i.filter(a=>a.face==="FaceDown").filter(a=>a.cell===a.isBelongTo).forEach(a=>{a.resetInfoAll(),a.resetStatusAll()}),i.flatMap(a=>a.continuousEffects).forEach(a=>a.updateState()),e.field.getAllCells().filter(a=>a.needsShuffle).map(a=>a.shuffle())});let H=z;H.prototype.hasBeenArrivalNow=function(t,e=k,i=!1){const a=e.map(iu),r=this.moveLog.latestArrivalRecord;if(!r)return!1;if(this.field.duel.clock.isPreviousChain(r.movedAt)){if(i&&!this.field.duel.clock.isPreviousProc(r.movedAt))return!1}else return!1;const n=r.movedAs;return!(!n.union(t).length||!n.union(a).length)};H.prototype.getAttackTargets=function(){const t=this.controller.getOpponentPlayer().getMonstersOnField().filter(e=>e.status.isSelectableForAttack);return(this.status.canDirectAttack||!t.length)&&t.push(this.controller.getOpponentPlayer().entity),t.filter(e=>e.canBeTargetOfBattle(this.controller,this)).filter(e=>this.procFilterBundle.filter(["BattleTarget"],this.controller,this,{},[e]))};H.prototype.canBeEffected=function(t,e,i){return this.procFilterBundle.filter(["Effect"],t,e,i,[this])};const nu=(t,e,i,a,r)=>t.canBeEffected(i,a,r)&&t.procFilterBundle.filter([e],i,a,r,[t]);H.prototype.canBeTargetOfEffect=function(t){return this.procFilterBundle.filter(["EffectTarget"],t.activator,t.action.entity,t.action,[this])};H.prototype.canBeBanished=function(t,e,i,a){return this.cell.cellType==="Banished"?!1:nu(this,t,e,i,a)};H.prototype.canBeTargetOfBattle=function(t,e){return this.procFilterBundle.filter(["BattleTarget"],t,e,{},[this])};H.prototype.validateDestroy=function(t,e,i,a){let r=this.procFilterBundle.filter([t==="Battle"?"BattleDestroy":"EffectDestroy"],e,i,a??{},[this]);return r&&t==="Effect"&&(r=this.canBeEffected(e,i,a)),r};H.prototype.getIndexInCell=function(){const t=this;if(t.info.isVanished||t.kind==="XyzMaterial")return-1;const e=t.cell.cardEntities.indexOf(t);if(e<0)throw new _("エンティティとセルの状態が矛盾している。",[t,t.cell]);return e};H.prototype.getXyzMaterials=function(){const t=this;return(t.status.monsterCategories??[]).includes("Xyz")?t.cell.xyzMaterials:[]};H.prototype.wasMovedAfter=function(t){return this.moveLog.latestRecord.movedAt.totalProcSeq>t.totalProcSeq};H.prototype.hadArrivedToFieldAt=function(){let t=this.moveLog.latestRecord.movedAt;return this.moveLog.records.findLast(e=>!e.cell.isPlayFieldCell||e.isPending||e.kind!==this.kind||e.face==="FaceDown"?!0:(t=e.movedAt,!1)),t};H.prototype.release=async function(t,e,i){return await this.sendToGraveyard([...t,"Release"],e,i),this.info.isVanished?void 0:this.cell};H.prototype.ruleDestroy=async function(){return await this.sendToGraveyard(["Rule","Destroy"],void 0,void 0),this.info.isVanished?void 0:this.cell};H.prototype.sendToGraveyard=async function(t,e,i){await S.sendManyToGraveyardForTheSameReason([this],t,e,i)};H.prototype.discard=async function(t,e,i){await S.discardManyForTheSameReason([this],t,e,i)};H.prototype.returnToDeck=async function(t,e,i,a){await S.returnManyToDeckForTheSameReason(t,[this],e,i,a)};H.prototype.banish=async function(t,e,i){await S.banishManyForTheSameReason([this],t,e,i)};class su{constructor(e){o(this,"cells");o(this,"duel");o(this,"summonFilterPool");o(this,"procFilterPool");o(this,"numericStateOperatorPool");o(this,"statusOperatorPool");o(this,"damageFilterPool");o(this,"moveLog");o(this,"distributeOperators",e=>{console.info(`[totalProcSeq]:${e.totalProcSeq}`);let i=0;for(;;){if(i++,i>10)throw new _("無限ループ発生");let a=!0;for(const r of this.stickyOperatorPools)if(!r.distributeAll(this.duel)){a=!1;break}if(a)return}});o(this,"getAllCells",()=>this.cells.flat());o(this,"getCells",(...e)=>this.getAllCells().filter(i=>e.includes(i.cellType)));o(this,"getAvailableExtraMonsterZones",()=>this.getCells("ExtraMonsterZone").filter(e=>e.isAvailable));o(this,"getWaitingRoomCell",()=>this.getCells("WaitingRoom")[0]);o(this,"getAllEntities",()=>this.getAllCells().map(e=>e.entities).flat());o(this,"getAllCardEntities",()=>this.getAllCells().map(e=>e.cardEntities).flat());o(this,"getCardsOnFieldStrictly",()=>this.getCells(...Se).map(e=>e.cardEntities).filter(e=>e.length>0).map(e=>e[0]).filter(e=>e.isOnFieldStrictly));o(this,"getMonstersOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(e=>e.isOnFieldAsMonsterStrictly));o(this,"getSpellTrapsOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(e=>e.isOnFieldAsSpellTrapStrictly));o(this,"getPendulumScalesOnFieldStrictly",()=>this.getCardsOnFieldStrictly().filter(e=>{var i;return(i=e.origin.monsterCategories)==null?void 0:i.includes("Pendulum")}).filter(e=>e.isOnFieldAsSpellTrapStrictly).filter(e=>!e.status.spellCategory));o(this,"getPendingCardsOnField",()=>this.getCells(...Se).map(e=>e.cardEntities).filter(e=>e.length>0).map(e=>e[0]).filter(e=>e.info.isPending));o(this,"getDyingCardsOnField",()=>this.getCells(...Se).flatMap(e=>[...e.cardEntities,...e.xyzMaterials]).filter(e=>e.info.isDying));o(this,"getPendingMonstersOnField",()=>this.getPendingCardsOnField().filter(e=>e.kind==="Monster"));o(this,"getEntities",e=>this.getAllEntities().filter(i=>i.controller===e));o(this,"recalcLinkArrows",()=>{const e=this.getAllCells().filter(i=>i.isMonsterZoneLikeCell);e.some(i=>i.recalcLinkArrows)&&e.forEach(i=>i.recalcLinkArrows())});o(this,"canExtraLink",(e,i)=>{if(!e.linkArrows.length)return!1;const a=i.map(u=>u.material),r=this.getCells("ExtraMonsterZone").filter(u=>u.isAvailable||a.includes(u.cardEntities[0]));if(r.length!==1)return!1;const n=r[0],s=e.linkArrows.map(u=>this.cells[n.row+u.offsetRow][n.column+u.offsetColumn]);let l=n.linkArrowSources.filter(u=>!a.includes(u)).filter(u=>s.includes(u.cell));if(!l.length)return!1;let c=-1;for(;c!==l.length;){const u=l.flatMap(d=>d.coLinkedEntities).filter(d=>!a.includes(d));if(u.some(d=>d.cell.cellType==="ExtraMonsterZone"))return!0;l=[...l,...u].getDistinct(),c=l.length}return!1});o(this,"drawAtSameTime",async(e,i,a,r,n,s)=>{const l=[],c=[],u=[e.draw(i,n,s),a.draw(r,n,s)].map(d=>d.catch(f=>{f instanceof re?f.winner&&l.push(f.winner):c.push(f)}));if(await Promise.all(u),c.length)throw new _("ドロー処理で想定されない例外が発生した。",e,i,a,r,n,...c);if(l.length!==0)throw l.length===1?new re(l[0],`${l[0].getOpponentPlayer().name}がデッキからドローできなかった。`):new re(void 0,"お互いにデッキからカードをドローできなかった。")});o(this,"sendToGraveyard",async(e,i,a,r,n,s,l,c)=>{if(r>0&&a.length<r)return;const u=await this.duel.view.waitSelectEntities(i,{selectables:a,qty:r,validator:n,cancelable:c??!1},e);if(u)return await H.sendManyToGraveyard(u.map(d=>({entity:d,movedAs:s,movedBy:l,activator:i}))),this.duel.log.info(`${u.map(d=>d.status.name).join(", ")}を墓地に送った（${s.getDistinct().join(", ")}）。`,i),u});this.duel=e,this.cells=[...Array(7)].map(()=>[]);for(const i of Object.keys(Oa).map(Number))for(const a of Object.keys(Oa[i]).map(Number))this.cells[i][a]=new hc(this,i,a,i<3?e.duelists.Above:i>3?e.duelists.Below:a<2?e.duelists.Above:a>4?e.duelists.Below:void 0);this.summonFilterPool=new Qc,this.procFilterPool=new mc,this.numericStateOperatorPool=new _c,this.statusOperatorPool=new Vc,this.damageFilterPool=new Yc,this.moveLog=new Mc(this),this.duel.clock.onStageChange.append(this.distributeOperators)}get stickyOperatorPools(){return[this.procFilterPool,this.statusOperatorPool,this.numericStateOperatorPool,this.summonFilterPool,this.damageFilterPool]}}const Lr=t=>{let e=[];do{const i=t.qty&&t.qty>0?t.qty:Math.floor(Math.random()*t.selectables.length+1);e=t.selectables.randomPickMany(i)}while(!t.validator(e));return e};class lu{constructor(e){o(this,"onStateChangeEvent",new V);o(this,"_stateLog",[]);o(this,"_state");this._stateLog.push({state:e,timestamp:new Date}),this._state=e}get stateLog(){return this._stateLog}get wasSpawnedAt(){return this.stateLog[0].timestamp}get onStateChange(){return this.onStateChangeEvent.expose()}get state(){return this._state}set state(e){this._stateLog.push({state:e,timestamp:new Date}),this._state=e,this.onStateChangeEvent.trigger(e)}}class qr{constructor(e,i){o(this,"_dispose");o(this,"_commit");o(this,"commit",()=>this._commit());this._dispose=e,this._commit=i}[Symbol.dispose](){this._dispose()}[Symbol.for("Symbol.dispose")](){this._dispose()}}class ou{constructor(e){o(this,"onUpdateEvent",new V);o(this,"nextSeq");o(this,"records",[]);o(this,"_state","Opened");o(this,"pooledRecords",[]);o(this,"duel");o(this,"openTransaction",()=>this._state!=="Opened"?(console.info("ログの二重トランザクションを開始しようとしたため、ダミーを返す。"),new qr(()=>{},()=>{})):(this._state="Pending",new qr(this.closeTransaction,this.commit)));o(this,"commit",()=>{if(this._state!=="Pending")throw new _("DuelLog is not in Pending state.");this.records.push(...this.pooledRecords),this.pooledRecords=[],this.onUpdateEvent.trigger(this.nextSeq-1)});o(this,"closeTransaction",()=>{this._state="Opened",this.pooledRecords=[],this.onUpdateEvent.trigger(this.nextSeq-1)});o(this,"dispose",()=>{this.onUpdateEvent.clear()});o(this,"error",e=>{const i=["エラー発生"];e instanceof Error?(i.push("-- エラーメッセージ --"),i.push(e.message),e instanceof _&&(i.push("-- 関連オブジェクト --"),e.items.forEach(a=>i.push(JSON.stringify(a)))),i.push("-- エラー名称 --"),i.push(e.name||"エラー名称取得失敗"),i.push("-- スタックトレース --"),i.push(e.stack||"スタックトレース取得失敗")):(i.push("-- エラー型特定失敗 --"),i.push(JSON.stringify(e))),console.error(e),console.error(i),this.write("error","System",i,void 0)});o(this,"warn",e=>{this.write("warn","System",["【注意】",e],void 0)});o(this,"info",(e,i)=>{this.write("info","Others",[e],i)});o(this,"pushChainBlockHeaderLog",(e,i,a)=>{this.write("info","ChainBlockHeader",[a],e,{chainNumber:i})});o(this,"pushMoveLog",(e,i,a,r)=>{const n=a.cellType==="WaitingRoom"?void 0:a,s=r.cellType==="WaitingRoom"?void 0:r;if(!n&&!s)throw new _("移動元、移動先ともにWaitingRoomが指定されている。",e,i,a,r);const l=n&&s?"EntityMove":s?"EntityAppear":"EntityDisappear";this.write("info",l,[],e,{mainEntity:i,from:n,to:s})});o(this,"write",(e,i,a,r,n={})=>{const s=a.join(`
`),l={seq:this.nextSeq++,lvl:e,type:i,clock:this.duel.clock.getClone(),text:s,duelist:r,subEntities:[],...n};this._state==="Opened"||e!=="info"?(this.records.push(l),this.onUpdateEvent.trigger(this.nextSeq-1)):this.pooledRecords.push(l)});this.nextSeq=0,this.duel=e}get onUpdate(){return this.onUpdateEvent.expose()}get lastRecord(){return this.records.slice(-1)[0]}}class qa{constructor(e){o(this,"onUpdateEvent",new V);o(this,"_state","Disable");o(this,"defaultArgs");o(this,"_args");o(this,"resolve",()=>{});o(this,"show",e=>{this._args=e,this._state="Shown",console.log(this,this.onUpdateEvent),this.onUpdateEvent.trigger();const{promise:i,resolve:a}=jn();return this.resolve=r=>{this._state="Disable",a(r),this.resolve=()=>{},this.onUpdateEvent.trigger()},i});o(this,"cancel",()=>{console.log(this),this.args.cancelable&&(this._state!=="Disable"&&this.resolve(void 0),this.terminate())});o(this,"terminate",()=>{this._state="Disable",this._args=this.defaultArgs,this.resolve=()=>{}});this.defaultArgs=e,this._args=e}get onUpdate(){return this.onUpdateEvent.expose()}get state(){return this._state}get args(){return this._args}}class cu{constructor(e,...i){o(this,"textSelector",new qa({title:"選択。",position:"Middle",choises:[],cancelable:!1}));o(this,"onUpdateEvent",new V);o(this,"modals");o(this,"eventHolder");o(this,"terminateAll",()=>{this.modals.forEach(e=>e.terminate()),this.onUpdateEvent.trigger()});this.modals=[this.textSelector,...i],this.eventHolder=e,this.modals.forEach(a=>a.onUpdate.append(()=>{this.onUpdateEvent.trigger()}))}get onUpdate(){return this.onUpdateEvent.expose()}}var uu=G("<div></div>"),du=G('<div class="duel_card_row svelte-1qeuyz"><div> </div> <div> </div></div>'),fu=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"> </div></div>'),pu=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"> </div></div>'),gu=G('<div class="duel_card_row svelte-1qeuyz"><div> </div> <div> </div></div>'),hu=G('<div class="duel_card_row svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz">ペンデュラム</div></div>'),yu=G('<div class="duel_card_row duel_card_detail svelte-1qeuyz"><div class="svelte-1qeuyz"> </div></div> <div class="duel_card_row duel_card_detail svelte-1qeuyz"><div class="svelte-1qeuyz"></div> <div class="svelte-1qeuyz"><span> </span> / <span> </span></div></div>',1),vu=G('<button><div class="duel_card_body svelte-1qeuyz"><div class="duel_card_row svelte-1qeuyz" style="position:relative"><div> </div> <div class="svelte-1qeuyz"></div> <!></div> <!> <!> <!> <!></div></button>'),mu=G('<button><div class="svelte-1qeuyz">裏守備</div></button>'),Su=G('<button><div class="svelte-1qeuyz">セット</div></button>');function Wn(t,e){ut(e,!1);let i=K(e,"entity",8),a=K(e,"state",8,"Disabled"),r=K(e,"selectedList",28,()=>[]),n=K(e,"isVisibleForcibly",8,!1),s=K(e,"isWideMode",8,!1),l=K(e,"dummyActionInfos",24,()=>[]),c=K(e,"cardActionResolve",8),u=K(e,"entitySelectResolve",8,()=>{}),d,f=Ai(!1),p=()=>{},h=K(e,"qty",12,void 0);const y=N=>{var E;d=N.activator,Y(f,!1),h((E=N.entitiesChoices)==null?void 0:E.qty),p=N.resolve};i().field.duel.view.onWaitStart.append(y);let v=Ai(!1);const g=N=>{(i().face==="FaceUp"||i().owner===i().field.duel.duelists.Below&&(i().isUnderControl||n()))&&i().field.duel.view.showCardInfo(i(),N??"Normal")},m=()=>{if(g(),console.log(i().toString(),a(),l().length,c(),h(),p),a()==="Disabled")return;if(a()==="Selectable"){if(Y(f,!P(f)),h()===1){u()&&u()([i()]),p&&p({selectedEntities:[i()]});return}r(P(f)?[...r(),i()]:r().filter(E=>E!==i()));return}if(l().length===0)return;if(l().length===1){const E=l()[0];if(c()){c()(E);return}console.log(i().toString(),a(),l().length,p),p({actionInfo:E});return}if(!d)return;i().field.duel.view.modalController.actionSelector.show({title:"行動を選択。",position:"Bottom",activator:d,dummyActionInfos:l(),cancelable:!0}).then(E=>{E&&p({actionInfo:E})})},T=N=>{var E;window.getSelection&&((E=window.getSelection())==null||E.removeAllRanges()),console.info("drag start",N,l()),i().field.duel.view.setDraggingActions(l()),Y(v,!0)},D=N=>{console.info("drag end",N,l()),i().field.duel.view.removeDraggingActions(),N.dataTransfer&&Y(v,!1)},w=()=>(g("Debug"),!1);Zt();var A=vt(),J=Ne(A);{var pe=N=>{var E=vu(),ie=L(E),I=L(ie),ye=L(I),xe=L(ye),_e=Q(ye,4);ii(_e,1,()=>i().attr,ti,(j,ee)=>{var ce=uu();te(()=>ae(ce,`monster_attr ${P(ee)??""} svelte-1qeuyz`)),O(j,ce)});var zt=Q(I,2);{var yi=j=>{var ee=du(),ce=L(ee),ft=L(ce),Ze=Q(ce,2),Ce=L(Ze);te((Ge,$e)=>{ae(ce,gt(i().lvl!==i().origin.level?"different_from_its_origin":""),"svelte-1qeuyz"),ge(ft,Ge),ae(Ze,gt(i().rank!==i().origin.rank?"different_from_its_origin":""),"svelte-1qeuyz"),ge(Ce,$e)},[()=>"★".repeat(i().lvl||0),()=>"☆".repeat(i().rank||0)],at),O(j,ee)},vi=j=>{var ee=vt(),ce=Ne(ee);{var ft=Ce=>{var Ge=fu(),$e=Q(L(Ge),2),Vt=L($e);te(()=>ge(Vt,`${sc[i().status.spellCategory]??""}魔法`)),O(Ce,Ge)},Ze=Ce=>{var Ge=vt(),$e=Ne(Ge);{var Vt=wt=>{var mi=pu(),Ue=Q(L(mi),2),Et=L(Ue);te(()=>ge(Et,`${lc[i().status.trapCategory]??""}罠`)),O(wt,mi)};X($e,wt=>{i().kind==="Trap"&&i().status.trapCategory&&wt(Vt)},!0)}O(Ce,Ge)};X(ce,Ce=>{i().kind==="Spell"&&i().status.spellCategory?Ce(ft):Ce(Ze,!1)},!0)}O(j,ee)};X(zt,j=>{i().isMonster?j(yi):j(vi,!1)})}var dr=Q(zt,2);{var Cl=j=>{var ee=gu(),ce=L(ee),ft=L(ce),Ze=Q(ce,2),Ce=L(Ze);te(()=>{ae(ce,gt(i().psL!==i().origin.pendulumScaleL?"different_from_its_origin":""),"svelte-1qeuyz"),ge(ft,`◀ ${i().psL??""}`),ae(Ze,gt(i().psR!==i().origin.pendulumScaleR?"different_from_its_origin":""),"svelte-1qeuyz"),ge(Ce,`${i().psR??""} ▶`)}),O(j,ee)};X(dr,j=>{var ee;(ee=i().status.monsterCategories)!=null&&ee.includes("Pendulum")&&j(Cl)})}var fr=Q(dr,2);{var Tl=j=>{var ee=hu();O(j,ee)};X(fr,j=>{i().kind==="Spell"&&i().isPendulumScale&&j(Tl)})}var wl=Q(fr,2);{var El=j=>{var ee=yu(),ce=Ne(ee),ft=L(ce),Ze=L(ft),Ce=Q(ce,2),Ge=Q(L(Ce),2),$e=L(Ge),Vt=L($e),wt=Q($e,2),mi=L(wt);te((Ue,Et)=>{ge(Ze,`${Ue??""}
            ${Et??""}`),ae($e,gt(i().atk!==i().origin.attack?"different_from_its_origin":""),"svelte-1qeuyz"),ge(Vt,i().atk??"?"),ae(wt,gt(i().def!==i().origin.defense?"different_from_its_origin":""),"svelte-1qeuyz"),ge(mi,i().def??"?")},[()=>i().types.map(Ue=>cc[Ue]+(s()?oc[Ue]:"")).join(),()=>{var Ue;return(Ue=i().status.monsterCategories)==null?void 0:Ue.map(Et=>nc[Et]+(s()?rc[Et]:"")).join()}],at),O(j,ee)};X(wl,j=>{i().isMonster&&j(El)})}te(j=>{ae(E,`duel_card button_style_reset ${i().origin.kind??""} ${j??""} ${(P(f)?"duel_card_selected":"")??""} ${a()??""} duel_card_${i().orientation??""} ${(P(v)?"isDragging":"")??""} ${(s()?"duel_card_wide":"")??""} duel_card_${i().face??""} ${(i().isOnField?"duel_card_is_on_field":"")??""} svelte-1qeuyz`),br(E,"draggable",a()==="Draggable"),br(E,"title",i().nm),ae(ye,gt(i().nm!==i().origin.name?"different_from_its_origin":""),"svelte-1qeuyz"),ge(xe,i().nm)},[()=>{var j;return((j=i().status.monsterCategories)==null?void 0:j.join(" "))||""}],at),pt("dragstart",E,T),pt("dragend",E,D),pt("click",E,m),pt("mouseenter",E,()=>g()),pt("contextmenu",E,w),O(N,E)},q=N=>{var E=vt(),ie=Ne(E);{var I=xe=>{var _e=mu();te(()=>ae(_e,`duel_card duel_card_face_down duel_card_face_down_defense ${a()??""}  ${(P(f)?"duel_card_selected":"")??""} svelte-1qeuyz`)),pt("click",_e,m),O(xe,_e)},ye=xe=>{var _e=Su();te(()=>ae(_e,`duel_card duel_card_face_down ${a()??""}  ${(P(f)?"duel_card_selected":"")??""} svelte-1qeuyz`)),pt("click",_e,m),O(xe,_e)};X(ie,xe=>{i().battlePosition==="Set"?xe(I):xe(ye,!1)},!0)}O(N,E)};X(J,N=>{i().face==="FaceUp"||n()||i().controller.duelistType==="Player"&&i().isUnderControl?N(pe):N(q,!1)})}O(t,A),dt()}var _u=G('<div class="modal_window_header svelte-2kmgt1"> </div>'),Cu=G('<div><!> <div class="modal_window_body svelte-2kmgt1"><!></div> <div class="modal_window_footer svelte-2kmgt1"><!></div></div>');function lr(t,e){ut(e,!1);let i=K(e,"args",8),a=K(e,"eventHolder",8),r=Ai(!1);const n=()=>{Y(r,!0)},s=()=>{Y(r,!1)};a().onDragStart.append(n),a().onDragEnd.append(s),Zt();var l=Cu(),c=L(l);{var u=y=>{var v=_u(),g=L(v);te(()=>ge(g,i().title)),O(y,v)};X(c,y=>{P(r)||y(u)})}var d=Q(c,2),f=L(d);Fa(f,e,"body",{});var p=Q(d,2),h=L(p);Fa(h,e,"footer",{}),te(y=>ae(l,`modal_window modal_window_${y??""} ${(P(r)?"modal_window_is_dragging":"")??""} svelte-2kmgt1`),[()=>i().position.toLowerCase()],at),O(t,l),dt()}const Tu=(t,e,i)=>e.resolve(P(i));var wu=G('<div><!> <div class="cell_type_name svelte-p7db7v"> </div></div>'),Eu=G("<div></div>"),bu=G('<div slot="body"></div>'),ku=G('<button class="svelte-p7db7v">OK</button>'),Du=(t,e)=>e.resolve(void 0),xu=G('<button class="cancel_button svelte-p7db7v">Cancel</button>'),Au=G('<div slot="footer" class="modal_window_footer svelte-p7db7v"><!> <!></div>');function Pu(t,e){ut(e,!0);let i=oo(Ie([])),a=e.args.chainBlockInfos.flatMap(l=>l.selectedEntities).getDistinct();var r=vt(),n=Ne(r);{var s=l=>{lr(l,{get eventHolder(){return e.eventHolder},get args(){return e.args},$$slots:{body:(c,u)=>{var d=bu();ii(d,21,()=>e.args.entitiesChoices.selectables.map(f=>f.controller.seat).getDistinct(),ti,(f,p)=>{var h=Eu();ii(h,21,()=>e.args.entitiesChoices.selectables.filter(y=>y.controller.seat===P(p)).toSorted(ru),ti,(y,v)=>{var g=wu(),m=L(g);Wn(m,{get entity(){return P(v)},isVisibleForcibly:!0,state:"Selectable",entitySelectResolve:w=>e.resolve(w),get qty(){return e.args.entitiesChoices.qty},cardActionResolve:void 0,get selectedList(){return P(i)},set selectedList(w){Y(i,Ie(w))}});var T=Q(m,2),D=L(T);te(w=>{ae(g,`entities_list_item ${w??""} svelte-p7db7v`),ge(D,`〈${P(v).cell.shortName??""}〉`)},[()=>a.includes(P(v))?"effect_target":""]),O(y,g)}),te(()=>ae(h,`entities_list ${P(p)??""} svelte-p7db7v`)),O(f,h)}),O(c,d)},footer:(c,u)=>{var d=Au(),f=L(d);{var p=v=>{var g=ku();g.__click=[Tu,e,i],te(m=>g.disabled=m,[()=>!e.args.entitiesChoices.validator(P(i))]),O(v,g)};X(f,v=>{(e.args.entitiesChoices.qty??1e3)>1&&v(p)})}var h=Q(f,2);{var y=v=>{var g=xu();g.__click=[Du,e],O(v,g)};X(h,v=>{e.args.cancelable&&v(y)})}O(c,d)}}})};X(n,l=>{l(s)})}O(t,r),dt()}oa(["click"]);var Mu=G('<div class="duel_card_wrapper svelte-1pg50l9"><!> <div> </div></div>'),Fu=G('<div class="action_list" slot="body" style="display: flex; justify-content: space-around;"></div>'),Ou=(t,e)=>e()(void 0),Nu=G('<button class="cancel_button svelte-1pg50l9">Cancel</button>'),Bu=G('<div slot="footer"><!></div>');function Lu(t,e){ut(e,!1);let i=K(e,"eventHolder",8),a=K(e,"args",8),r=K(e,"resolve",8);Zt();var n=vt(),s=Ne(n);{var l=c=>{lr(c,{get eventHolder(){return i()},get args(){return a()},$$slots:{body:(u,d)=>{var f=Fu();ii(f,5,()=>a().dummyActionInfos,ti,(p,h)=>{var y=Mu(),v=L(y);const g=at(()=>P(h).dests.length?"Draggable":"Clickable"),m=at(()=>a().dragAndDropOnly?[]:[P(h)]);Wn(v,{get entity(){return P(h).action.entity},isVisibleForcibly:!0,get state(){return P(g)},get dummyActionInfos(){return P(m)},get cardActionResolve(){return r()}});var T=Q(v,2),D=L(T);te(()=>ge(D,`«${P(h).action.title??""}»`)),O(p,y)}),O(u,f)},footer:(u,d)=>{var f=Bu(),p=L(f);{var h=y=>{var v=Nu();v.__click=[Ou,r],O(y,v)};X(p,y=>{a().cancelable&&y(h)})}O(u,f)}}})};X(s,c=>{c(l)})}O(t,n),dt()}oa(["click"]);var qu=(t,e,i)=>e()(i()),Ru=G('<li><button class="svelte-1rzyf4u"> </button></li>'),Hu=G('<ui slot="body" class="text_list svelte-1rzyf4u"></ui>'),Zu=(t,e)=>e()(void 0),Gu=G('<button class="cancel_button svelte-1rzyf4u">Cancel</button>'),$u=G('<div slot="footer"><!></div>');function Uu(t,e){ut(e,!1);let i=K(e,"eventHolder",8),a=K(e,"args",8),r=K(e,"resolve",8);Zt();var n=vt(),s=Ne(n);{var l=c=>{lr(c,{get eventHolder(){return i()},get args(){return a()},$$slots:{body:(u,d)=>{var f=Hu();ii(f,5,()=>a().choises,ti,(p,h)=>{let y=()=>P(h).seq,v=()=>P(h).text;var g=Ru(),m=L(g);m.__click=[qu,r,y];var T=L(m);te(()=>{ae(g,`text_item ${y()??""} svelte-1rzyf4u`),ge(T,v())}),O(p,g)}),O(u,f)},footer:(u,d)=>{var f=$u(),p=L(f);{var h=y=>{var v=Gu();v.__click=[Zu,r],O(y,v)};X(p,y=>{a().cancelable&&y(h)})}O(u,f)}}})};X(s,c=>{c(l)})}O(t,n),dt()}oa(["click"]);const ju=(t,e)=>e().modals.filter(i=>i.args.cancelable).forEach(i=>i.cancel());var zu=G("<button>☆</button> <!> <!>",1),Vu=G("<div><!></div>");function Wu(t,e){ut(e,!1);let i=K(e,"modalController",12),a=Ai(!1);const r=()=>{i(i())},n=()=>{console.log("hoge"),Y(a,!0),r()},s=()=>{Y(a,!1),r()};i().eventHolder.onDragStart.append(n),i().eventHolder.onDragEnd.append(s),i().onUpdate.append(r),Zt();var l=Vu(),c=L(l);{var u=d=>{var f=zu(),p=Ne(f);p.__click=[ju,i];var h=Q(p,2);Fa(h,e,"default",{});var y=Q(h,2);{var v=g=>{Uu(g,{get eventHolder(){return i().eventHolder},get args(){return i().textSelector.args},get resolve(){return i().textSelector.resolve}})};X(y,g=>{i().textSelector.state==="Shown"&&g(v)})}te(()=>ae(p,`overlay ${(P(a)?"pointer_events_none":"")??""} svelte-xqm104`)),O(d,f)};X(c,d=>{i().modals.some(f=>f.state==="Shown")&&d(u)})}te(()=>ae(l,`base ${(P(a)?"base_is_dragging":"")??""} svelte-xqm104`)),O(t,l),dt()}oa(["click"]);const Ki=class Ki extends cu{constructor(e,i){super(e,...Object.values(i))}};o(Ki,"createModalController",e=>{const i={actionSelector:new qa({title:"カード操作を選択。",position:"Bottom",activator:void 0,dummyActionInfos:[],cancelable:!1}),entitySelector:new qa({title:"対象を選択",position:"Middle",entitiesChoices:{selectables:[],validator:()=>!0,cancelable:!1},cancelable:!1,chainBlockInfos:[]})};return Object.assign(new Ki(e,i),i)});let Ra=Ki;var Qu=G("<!> <!>",1);function Yp(t,e){ut(e,!1);let i=K(e,"modalController",8);Zt(),Wu(t,{get modalController(){return i()},children:(a,r)=>{var n=Qu(),s=Ne(n);{var l=d=>{Pu(d,{get eventHolder(){return i().eventHolder},get args(){return i().entitySelector.args},get resolve(){return i().entitySelector.resolve}})};X(s,d=>{i().entitySelector.state==="Shown"&&d(l)})}var c=Q(s,2);{var u=d=>{Lu(d,{get eventHolder(){return i().eventHolder},get args(){return i().actionSelector.args},get resolve(){return i().actionSelector.resolve}})};X(c,d=>{i().actionSelector.state==="Shown"&&d(u)})}O(a,n)},$$slots:{default:!0}}),dt()}const Xu=[{seq:10,name:"Internet Explorer",key:"msie"},{seq:20,name:"Internet Explorer",key:"trident"},{seq:30,name:"Edge",key:"edge"},{seq:40,name:"Google Chrome",key:"chrome"},{seq:50,name:"Safari",key:"safari"},{seq:60,name:"Mozilla Firefox",key:"firefox"},{seq:70,name:"Opera",key:"opera"}],Ku=[{seq:10,name:"Microsoft Windows",key:"windows nt"},{seq:20,name:"Android",key:"android"},{seq:30,name:"iOS",key:"iphone"},{seq:40,name:"iOS",key:"ipad"},{seq:50,name:"macOS",key:"mac os x"}],ni=window.navigator.userAgent.toLowerCase();var Wr;const Yu=((Wr=Xu.find(t=>ni.indexOf(t.key)!==-1))==null?void 0:Wr.name)??"Unknown Browser";var Qr;const or=((Qr=Ku.find(t=>ni.indexOf(t.key)!==-1))==null?void 0:Qr.name)??"Unknown OS",Qn=ni.indexOf("iphone")!==-1||or==="Android"&&ni.indexOf("mobile")!==-1,Ju=ni.indexOf("ipad")!==-1||or==="Android"&&!Qn,Rr=Qn?"Smart Phone":Ju?"Tablet Device":"PC",_a={canDragElement:Rr==="PC",text:`${Rr} ${or} ${Yu}`};class Iu{constructor(e){o(this,"onDuelUpdateEvent",new V);o(this,"requireUpdate",()=>{this.onDuelUpdateEvent.trigger()});o(this,"onWaitStartEvent",new V);o(this,"onWaitEndEvent",new V);o(this,"onDragStartEvent",new V);o(this,"onDragEndEvent",new V);o(this,"onAnimationStartEvent",new V);o(this,"onShowCardEntityEvent",new V);o(this,"duel");o(this,"modalController");o(this,"_message");o(this,"waitMode");o(this,"infoBoardState");o(this,"infoBoardCell");o(this,"getCell",(e,i)=>this.duel.field.cells[e][i]);o(this,"showCardInfo",(e,i)=>{this.onShowCardEntityEvent.trigger({card:e,mode:i})});o(this,"dispose",()=>{this.onDragStartEvent.clear(),this.onDragEndEvent.clear(),this.onDuelUpdateEvent.clear(),this.onWaitStartEvent.clear(),this.onWaitEndEvent.clear()});o(this,"waitFieldAction",async e=>{if(this.duel.getTurnPlayer().duelistType==="NPC"){const n=this.duel.getTurnPlayer().selectActionForNPC(e,[]);return n?{actionInfo:n}:{phaseChange:this.duel.nextPhaseList[0]}}const i=await this._waitDuelistAction(this.duel.getTurnPlayer(),e,"Free","",void 0,void 0,!1);if(!i.actionInfo)return{...i,actionInfo:void 0};const a={...i.actionInfo},r=e.find(n=>{var s;return((s=i.actionInfo)==null?void 0:s.originSeq)===n.originSeq});if(!r)throw new _("想定されない状態",e,i);return{...i,actionInfo:{dest:a.dest,battlePosition:a.battlePosition,action:r.action,originSeq:r.originSeq}}});o(this,"waitQuickEffect",async(e,i,a,r,n)=>{if(i.length===0)return;if(e.duelistType==="NPC")return e.selectActionForNPC(i,a);const s=[this.modalController.actionSelector.show({title:r,position:"Bottom",activator:e,dummyActionInfos:i,cancelable:n}),this._waitDuelistAction(e,i,"Modal",this.message,void 0,void 0,!1).then(u=>u.actionInfo)],l=await Promise.any(s);if(!l)return;this.infoBoardState="Default";const c=i.find(u=>l.originSeq===u.originSeq);if(!c)throw new _("想定されない状態",l);return{...c,dest:l.dest}});o(this,"waitSubAction",async(e,i,a,r=!1)=>{if(e.duelistType==="NPC")throw Error("Not implemented");const n=await this._waitDuelistAction(e,i,"Modal",a,void 0,void 0,r);if(n&&n.actionInfo)return n.actionInfo});o(this,"waitSelectEntities",async(e,i,a)=>{if(!i.selectables.length)return;if(i.qty&&i.selectables.length===i.qty)return[...i.selectables];if(e.duelistType==="NPC")return Lr(i);let r;i.selectables.some(s=>s.entityType==="Duelist")&&(r={...i,selectables:i.selectables.filter(s=>s.entityType==="Duelist").map(s=>s.cell),qty:1,validator:s=>s.length===1}),console.log(i);const n=await this._waitDuelistAction(e,[],"Modal",a,i,r,i.cancelable);return(n.selectedEntities||n.selectedCells)&&[...n.selectedEntities??[],...(n.selectedCells??[]).flatMap(s=>s.entities).filter(s=>s.entityType==="Duelist")]});o(this,"waitSelectNumber",async(e,i,a,r)=>{const n=await this.waitSelectText(e,a.getDistinct().toSorted().map(s=>({seq:s,text:s.toString()})),i,r);if(n)return n.seq});o(this,"waitYesOrNo",async(e,i)=>{const a=await this.waitSelectText(e,[{seq:0,text:"Yes"},{seq:1,text:"No"}],i,!1);return(a==null?void 0:a.seq)===0});o(this,"waitSelectText",async(e,i,a,r=!1)=>{if(e.duelistType==="NPC")return i.randomPick();const n=await this.modalController.textSelector.show({title:a,position:"Middle",choises:i,cancelable:r});if(n===void 0){if(!r)throw new F(e,i,a,r);return}return i.find(s=>s.seq===n)});o(this,"waitAnimation",async e=>{var i;return this._message="",this.waitMode="Animation",window.getSelection&&((i=window.getSelection())==null||i.removeAllRanges()),this.onDuelUpdateEvent.trigger(),new Promise(a=>this.onAnimationStartEvent.trigger({...e,resolve:a}))});o(this,"waitTokenAnimation",async()=>{this.requireUpdate(),await Gi(450)});o(this,"setDraggingActions",e=>{this.onDragStartEvent.trigger(e),this.requireUpdate()});o(this,"removeDraggingActions",()=>{this.onDragEndEvent.trigger()});o(this,"waitSelectAction",async(e,i,a,r)=>{var c;const n=i.map(u=>St.createDummyAction(u.entity,u.title,[],void 0,u.origin)),s=await this._waitDammyAction(e,n,a,r);if(!s)return;const l=(c=i.find(u=>u.origin.seq===s.originSeq))==null?void 0:c.origin;if(!l)throw new _("想定されない状態",i,s);return l});o(this,"waitSelectSummonDestination",async(e,i,a,r,n)=>{const s=a.length>1&&_a.canDragElement?"カードを召喚先へドラッグ。":"表示形式を選択。";if(!a.length&&!r.length){if(n)return;throw new _("想定されない状態",e,i,a,r,n)}let l=[...r];for(;;){const c={dest:a.randomPick(),battlePosition:l[0]};if(l.length===1&&!_a.canDragElement){const f=await this.waitSelectCell(e,a,n,"召喚先を選択。");return f?{...c,dest:f}:void 0}const u=l.map(f=>St.createDummyAction(i,f,a,f)),d=await this._waitDammyAction(e,u,s,n);if(!d)return;if(d.battlePosition&&(l=[d.battlePosition]),!(a.length>1&&!d.dest))return c.dest=d.dest??c.dest,c.battlePosition=d.battlePosition??c.battlePosition,c}});o(this,"waitSelectDestination",async(e,i,a,r,n,s=!1)=>{if(!a.length)return;if(a.length===1)return a[0];if(!_a.canDragElement)return await this.waitSelectCell(e,a,s,r);let l=a.randomPick();const c=[St.createDummyAction(i,n,a,void 0)],u=await this._waitDammyAction(e,c,r,s);if(u)return l=u.dest??l,l});o(this,"_waitDammyAction",async(e,i,a,r=!1)=>{if(!i.length)return;const n=i.randomPick();let s={...n,dest:n.dest??n.dests.randomPick()};if(e.duelistType!=="NPC"){const l=[this.modalController.actionSelector.show({title:a,position:"Bottom",activator:e,dummyActionInfos:i,cancelable:r}),this.duel.view.waitSubAction(e,i,a,r)],c=await Promise.any(l);if(!c&&!r)throw new F(c,l);if(!c)return;s=c??s}return s});o(this,"waitSelectCell",async(e,i,a,r)=>i.length?e.duelistType==="NPC"?i.randomPick():(await this.waitSelectCells(e,{selectables:i,qty:1,validator:s=>s.length===1,cancelable:a},r)??[])[0]:void 0);o(this,"waitSelectCells",async(e,i,a)=>{if(!i.selectables.length)return;if(e.duelistType==="NPC")return Lr(i);const r=await this._waitDuelistAction(e,[],"Modal",a,void 0,i,i.cancelable);if((!r||!r.selectedCells)&&!i.cancelable)throw new F(e,i,a);return r.selectedCells});o(this,"_waitDuelistAction",async(e,i,a,r,n,s,l=!1)=>{for(this.waitMode=a,this._message=r;this.onDuelUpdateEvent.length<38;)console.log("this.onDuelUpdateEvent.length",this.onDuelUpdateEvent.length),await Gi(1);this.onDuelUpdateEvent.trigger();const c=jn();console.log(n);const u={resolve:c.resolve,activator:e,dummyActionInfos:i,chainBlockInfos:e.duel.chainBlockInfos,entitiesChoices:n,cellsChoices:s};console.info("wait start",u),this.onWaitStartEvent.trigger(u);const d=await c.promise;if(console.info("response",d),this.modalController.terminateAll(),this.waitMode="None",this.onWaitEndEvent.trigger(),d.surrender)throw new re(e.getOpponentPlayer(),`${e.profile.name}がサレンダーした。`);if(!l&&d.cancel)throw new _("キャンセル不可のアクションがキャンセルされた。",d,i,a,n,s);return this.infoBoardState="Default",d});this.duel=e,this._message="",this.waitMode="None",this.infoBoardState="Default",this.infoBoardCell=e.duelists.Below.getExtraDeck(),this.modalController=Ra.createModalController(this)}get onDuelUpdate(){return this.onDuelUpdateEvent.expose()}get onWaitStart(){return this.onWaitStartEvent.expose()}get onWaitEnd(){return this.onWaitEndEvent.expose()}get onDragStart(){return this.onDragStartEvent.expose()}get onDragEnd(){return this.onDragEndEvent.expose()}get onAnimation(){return this.onAnimationStartEvent.expose()}get onShowCardEntity(){return this.onShowCardEntityEvent.expose()}get message(){var e;return(this._message||((e=this.duel.log.records.filter(i=>i.type==="Others"||i.type==="System").slice(-1)[0])==null?void 0:e.text))??""}}const Ha=["turn","phaseSeq","stepSeq","stageSeq","chainSeq","chainBlockSeq","procSeq"];[...Ha];const Yi=class Yi{constructor(){o(this,"onClockChangeEvents",{turn:new V,phaseSeq:new V,stepSeq:new V,stageSeq:new V,chainSeq:new V,chainBlockSeq:new V,procSeq:new V});o(this,"_turn",0);o(this,"_phaseSeq",0);o(this,"_stepSeq",0);o(this,"_stageSeq",0);o(this,"_chainSeq",0);o(this,"_chainBlockSeq",0);o(this,"_procSeq",0);o(this,"_totalProcSeq",0);o(this,"_periodKey");o(this,"_previousStartPoints",{turn:0,phaseSeq:0,stepSeq:0,stageSeq:0,chainSeq:0,chainBlockSeq:0,procSeq:0});o(this,"_currentStartPoints",{turn:0,phaseSeq:0,stepSeq:0,stageSeq:0,chainSeq:0,chainBlockSeq:0,procSeq:0});o(this,"setPhase",(e,i)=>{const a=Object.values(ht).filter(r=>r.phase===i).find(r=>(r.step??"start")==="start");if(!a)throw new _("想定されない状態",this.period,i,ht);i==="draw"?(this.turn>0&&e.log.info("ターン終了。",e.getTurnPlayer()),this._turn++,this._phaseSeq=0):(e.log.info(`フェイズ移行（${this.period.name}→${a.name}）`,e.getTurnPlayer()),this._phaseSeq++),this._stepSeq=0,this._stageSeq=0,this.periodKey=a.key});o(this,"setStep",(e,i)=>{const a=this.period.phase,r=Object.values(ht).filter(n=>n.phase===a).find(n=>(n.step??"")===i);if(!r)throw new _("想定されない状態",this.period,i,ht);this.period.name!==r.name&&(e.log.info(`ステップ移行（${this.period.name}→${r.name}）`,e.getTurnPlayer()),this._stepSeq++,this._stageSeq=0,this.periodKey=r.key)});o(this,"setStage",(e,i)=>{const a=this.period,r=Object.values(ht).filter(n=>n.phase===a.phase).filter(n=>n.step===a.step).find(n=>(n.stage??"")===i);if(!r)throw new _("想定されない状態",this.period,i,ht);e.log.info(`タイミング移行（${this.period.name}→${r.name}）`,e.getTurnPlayer()),this._stageSeq++,this.periodKey=r.key});o(this,"incrementChainSeq",()=>{this._chainSeq++,this._chainBlockSeq=0,this._procSeq=0,this.incrementTotalProcSeq()});o(this,"incrementChainBlockSeq",()=>{this._chainBlockSeq++,this._procSeq=0,this.incrementTotalProcSeq()});o(this,"incrementProcSeq",()=>{this._procSeq++,this.incrementTotalProcSeq()});o(this,"incrementTotalProcSeq",()=>{this._totalProcSeq++;let e=!0;Ha.toReversed().forEach(i=>{e&&(this._previousStartPoints[i]=this.currentStartPoints[i],this._currentStartPoints[i]=this.totalProcSeq),e=e&&this[i]===0}),Ha.toReversed().filter(i=>this._currentStartPoints[i]===this.totalProcSeq).filter(i=>i!=="procSeq").forEach(i=>this.onClockChangeEvents[i].trigger(this)),this.onClockChangeEvents.procSeq.trigger(this)});o(this,"toFullString",()=>`${this.totalProcSeq}(t${this.turn}-phs${this.phaseSeq}-stp${this.stepSeq}-stg${this.stepSeq}-c${this.chainSeq}-cb${this.chainBlockSeq}-prc${this.procSeq})`);o(this,"getClone",()=>({turn:this.turn,phaseSeq:this.phaseSeq,stepSeq:this.stepSeq,stageSeq:this.stageSeq,chainSeq:this.chainSeq,chainBlockSeq:this.chainBlockSeq,procSeq:this.procSeq,totalProcSeq:this.totalProcSeq,period:this.period}));o(this,"isSameTurn",e=>this.turn===e.turn);o(this,"isSameChain",e=>Yi.isSameChain(this,e));o(this,"isPreviousChain",e=>this.turn===e.turn&&this.phaseSeq===e.phaseSeq&&this.stepSeq===e.stepSeq&&this.stageSeq===e.stageSeq&&this.chainSeq===e.chainSeq+1);o(this,"isPreviousStage",e=>this.turn===e.turn&&this.phaseSeq===e.phaseSeq&&this.stepSeq===e.stepSeq&&this.stageSeq===e.stageSeq+1);o(this,"isPreviousTurn",e=>this.turn===e.turn+1);o(this,"isPreviousProc",e=>this.totalProcSeq===e.totalProcSeq+1);this._periodKey="end"}get onTurnChange(){return this.onClockChangeEvents.turn.expose()}get onStageChange(){return this.onClockChangeEvents.stageSeq.expose()}get onProcSeqChange(){return this.onClockChangeEvents.procSeq.expose()}get previousStartPoints(){return this._previousStartPoints}get currentStartPoints(){return this._currentStartPoints}set periodKey(e){this._periodKey!==e&&(this._periodKey=e,this._chainSeq=0,this._chainBlockSeq=0,this._procSeq=0,this.incrementTotalProcSeq())}get periodKey(){return this._periodKey}get period(){return ht[this.periodKey]}get turn(){return this._turn}get phaseSeq(){return this._phaseSeq}get stepSeq(){return this._stepSeq}get stageSeq(){return this._stageSeq}get chainSeq(){return this._chainSeq}get chainBlockSeq(){return this._chainBlockSeq}get procSeq(){return this._procSeq}get totalProcSeq(){return this._totalProcSeq}get isFirstChain(){return this.chainSeq===0}};o(Yi,"isSameChain",(e,i)=>e.turn===i.turn&&e.phaseSeq===i.phaseSeq&&e.stepSeq===i.stepSeq&&e.stageSeq===i.stageSeq&&e.chainSeq===i.chainSeq);let Za=Yi;class ed{constructor(e){o(this,"onInsertEvent",new V);o(this,"nextSeq");o(this,"records",[]);o(this,"duel");o(this,"push",e=>{const i={seq:this.nextSeq++,clock:this.duel.clock.getClone(),chainBlockInfo:e};this.records.push(i),this.onInsertEvent.trigger(i)});this.nextSeq=0,this.duel=e}get onInsert(){return this.onInsertEvent.expose()}}class pi{constructor(e,i){o(this,"duel");o(this,"phase");o(this,"_priorityHolder");o(this,"turnPlayer");o(this,"_chainBlockInfos",[]);o(this,"proceed",async()=>await this._proceed());o(this,"procSpellSpeed1",async()=>{this.priorityHolder=this.turnPlayer;let e=0;const i={Above:Number.MAX_VALUE,Below:Number.MAX_VALUE};for(;;){const a=this.priorityHolder.getEnableActions(["IgnitionEffect","QuickEffect","CardActivation","LingeringEffect"],["Normal","Quick","Counter"],[]);if(i[this.priorityHolder.seat]=a.filter(l=>l.action.isMandatory).length,Object.values(i).every(l=>l===0)&&e>1)break;const r=a.find(l=>l.action.isMandatory);let n=r?{action:r.action,originSeq:r.action.seq}:void 0,s=!n;if(this.priorityHolder.isTurnPlayer?e===0&&(s=!0):i[this.turnPlayer.seat]&&(s=!0),a.length&&(a.length>1||!n)&&(this.priorityHolder.chainConfig.noticeFreeChain||a.some(l=>l.action.isNoticedForcibly))&&(n=await this.duel.view.waitQuickEffect(this.priorityHolder,a,[],this.duel.clock.period.name,s)),n){if(await this.procChain({activator:this.priorityHolder,actionInfo:n},void 0)==="cancel")continue;if(!await this.procFreeChain())return!1;this.priorityHolder=this.turnPlayer,e=0;continue}this.priorityHolder=this.priorityHolder.getOpponentPlayer(),e++}return!0});o(this,"procFreeChain",async(e=()=>!0)=>{const i=this.duel.clock.period.key;for(;await this.procChain(void 0,void 0)!=="pass";)if(this.duel.clock.period.key!==i||!e())return!1;return!0});o(this,"procTriggerEffects",async()=>{for(;await this.procChain(void 0,void 0,!0)==="done";);});o(this,"procChain",async(e,i,a)=>{const r=this.chainBlockInfos.length===0;let n=e?[]:i??Object.values(this.duel.duelists).flatMap(l=>l.getEnableActions(["TriggerEffect"],[this.chainBlockInfos.length?"Quick":"Normal"],this.chainBlockInfos).map(c=>({activator:l,actionInfo:c,targetChainBlock:this.chainBlockInfos.slice(-1)[0]}))),s;if(e)s={activator:e.activator,action:e.actionInfo.action,dest:e.actionInfo.dest,targetChainBlock:void 0},this.priorityHolder=s.activator;else if(n.length>0){const l=await this.selectTriggerEffect(n);l?(n=n.filter(c=>c!==l),s={...l,action:l.actionInfo.action},this.priorityHolder=s.activator):n=[]}if(!s){if(a)return"pass";let l=0;for(;l<2;){this.priorityHolder=this.priorityHolder.getOpponentPlayer();const c=["Counter"];this.chainBlockInfos.every(f=>f.action.spellSpeed!=="Counter")&&c.push("Quick");let d=this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],c,this.chainBlockInfos).some(f=>f.action.isNoticedForcibly)||!!this.attackingMonster;if(d||(this.chainBlockInfos.length?d=this.priorityHolder.chainConfig.noticeSelfChain||this.chainBlockInfos.slice(-1)[0].activator!==this.priorityHolder:d=this.priorityHolder.chainConfig.noticeFreeChain),d){const f=this.chainBlockInfos.some(h=>h.action.isWithChainBlock)?"チェーンして効果を発動しますか？":"クイックエフェクト発動タイミング。効果を発動しますか？",p=await this.duel.view.waitQuickEffect(this.priorityHolder,this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],c,this.chainBlockInfos),this.chainBlockInfos,f,!0);if(p){s={...p,activator:this.priorityHolder,targetChainBlock:this.chainBlockInfos.slice(-1)[0]};break}}l++}}if(console.info("selected action: ",s),s){const l=s.activator,c=await s.action.prepare(l,s.dest,s.targetChainBlock,this.chainBlockInfos,r,!1);if(!c)return"cancel";if(this.duel.chainBlockLog.push(c),this._chainBlockInfos.push(c),this.duel.clock.incrementProcSeq(),this.duel.clock.incrementChainBlockSeq(),n=n.filter(u=>u.actionInfo.action.seq!==(s==null?void 0:s.action.seq)).filter(u=>u.actionInfo.action.validateCount(u.activator,this.chainBlockInfos)),c.action.isChainable&&await this.procChain(void 0,n.length?n:void 0),await c.action.execute(c,this.chainBlockInfos),c.state==="done"||c.state==="failed")for(const u of[this.turnPlayer,this.nonTurnPlayer]){for(const d of u.getEnableActions(["Exodia"],["Normal"],[c]))await d.action.directExecute(u,c,!1);for(const d of u.getEnableActions(["AfterChainBlock"],["Normal"],[c])){await d.action.directExecute(u,c,!1);for(const f of u.getEnableActions(["Exodia"],["Normal"],[c]))await f.action.directExecute(u,c,!1)}}r?(await S.sendManyToGraveyardForTheSameReason(this._chainBlockInfos.filter(u=>u.action.playType==="CardActivation").filter(u=>!u.action.isLikeContinuousSpell).map(u=>u.action.entity).filter(u=>u.isOnFieldStrictly).filter(u=>u.face==="FaceUp"),["Rule"],void 0,void 0),this._chainBlockInfos.reset(),c.nextActionInfo&&await this.procChain({activator:c.activator,actionInfo:c.nextActionInfo},void 0),this.duel.clock.incrementChainSeq()):(c.nextActionInfo&&await c.nextActionInfo.action.directExecute(c.activator,void 0,!1),this.duel.clock.incrementChainBlockSeq())}return s?"done":"pass"});o(this,"selectTriggerEffect",async e=>{if(e.length>0)for(const i of[!0,!1])for(const a of[this.turnPlayer,this.nonTurnPlayer]){const r=e.filter(s=>s.actionInfo.action.isMandatory===i&&s.activator===a);if(r.length===0)continue;if(r.length===1&&i)return r[0];const n=await this.duel.view.waitQuickEffect(a,r.map(s=>s.actionInfo),this.chainBlockInfos,"トリガーエフェクトを選択。",!i);if(n)return r.find(s=>s.actionInfo.action===n.action)}});this.duel=e,this.phase=i,this.duel.clock.setPhase(this.duel,this.phase),this.turnPlayer=this.duel.getTurnPlayer(),this._priorityHolder=this.turnPlayer}set priorityHolder(e){this._priorityHolder=e}get priorityHolder(){return this._priorityHolder}get nonTurnPlayer(){return this.turnPlayer.getOpponentPlayer()}get chainBlockInfos(){return this._chainBlockInfos}}class td extends pi{constructor(i,a){super(i,a);o(this,"_attackingMonster");o(this,"_targetForAttack");o(this,"declareAttack",(i,a,r=!1)=>{var l;this._attackingMonster=i,this._targetForAttack=a;let n=" ("+((l=a.battlePosition==="Attack"?a.atk:a.def)==null?void 0:l.toString())+")";a.face==="FaceDown"&&(n=" (????)"),a.entityType==="Duelist"&&(n="");const s=r?"攻撃対象再選択":"攻撃宣言";r||i.info.attackDeclareCount++,this.duel.log.info(`${s}:${i.toString()} (${i.atk})⇒ ${a.toString()}${n}`,i.controller)});o(this,"_proceed",async()=>(await this.procBattlePhaseStartStep()&&await this.procBattlePhaseBattleStep(),await this.procBattlePhaseEndStep(),new Xn(this.duel,"main2")));o(this,"procBattlePhaseStartStep",async()=>(this.setStep("start"),this.priorityHolder=this.turnPlayer,this._attackingMonster=void 0,this._targetForAttack=void 0,await this.procSpellSpeed1()));o(this,"procBattlePhaseBattleStep",async()=>{for(;;){this.setStep("battle"),this.priorityHolder=this.turnPlayer,this._attackingMonster=void 0,this._targetForAttack=void 0;const i=await this.duel.view.waitFieldAction(this.priorityHolder.getEnableActions(["DeclareAttack","QuickEffect","CardActivation"],["Normal","Quick","Counter"],[]));if(i.phaseChange)break;if(!(!i.actionInfo||await this.procChain({activator:this.priorityHolder,actionInfo:i.actionInfo},void 0)==="cancel")){if(!this.attackingMonster||!this.targetForAttack){await this.procTriggerEffects();continue}for(;this.attackingMonster&&this.targetForAttack;){const r=this.duel.clock.totalProcSeq,n=this.nonTurnPlayer.getMonstersOnField(),s=await this.procChain(void 0,void 0);if(await this.procTriggerEffects(),!this.attackingMonster)throw new _("想定されない状態");if(!this.canContinueBattle())break;const l=this.attackingMonster.getAttackTargets();if(n.some(c=>!c.isOnFieldAsMonsterStrictly)||this.nonTurnPlayer.getMonstersOnField().flatMap(c=>c.moveLog.records).filter(c=>c.movedAt.totalProcSeq>r).some(c=>!c.cell.isMonsterZoneLikeCell)?(this.duel.log.info("モンスターの数が増減したためバトルステップの巻き戻しが発生。"),this._targetForAttack=void 0):this.targetForAttack.entityType==="Duelist"&&l.every(c=>c!==this.targetForAttack)&&!this.attackingMonster.status.canDirectAttack&&(this.duel.log.info(`${this.attackingMonster.toString()}が直接攻撃能力を喪失したため、バトルステップの巻き戻しが発生。`),this._targetForAttack=void 0),!this.targetForAttack){if(!l.length){this.duel.log.info("攻撃可能な対象が存在しないため、攻撃対象選択を選択肢しなおせない。");break}if(this.turnPlayer.duelistType==="Player"&&!await this.duel.view.waitYesOrNo(this.turnPlayer,"攻撃対象選択を選択し直す？")){this.turnPlayer.writeInfoLog(`${this.attackingMonster.toString()}の攻撃宣言をキャンセル。`);break}const c=await this.turnPlayer.waitSelectEntity(l,"攻撃対象を選択。",!0);if(!c){this.turnPlayer.writeInfoLog(`${this.attackingMonster.toString()}の攻撃宣言をキャンセル。`);break}this.declareAttack(this.attackingMonster,c,!0);continue}if(s==="pass")break}this.attackingMonster&&this.targetForAttack&&await this.procBattlePhaseDamageStep()}}});o(this,"procBattlePhaseDamageStep",async()=>{if(!this.attackingMonster||!this.targetForAttack)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);if(this.targetForAttack.entityType!=="Duelist"&&!this.targetForAttack.isOnFieldAsMonsterStrictly)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);for(const i of[this.procBattlePhaseDamageStep1,this.procBattlePhaseDamageStep2,this.procBattlePhaseDamageStep3,this.procBattlePhaseDamageStep4,this.procBattlePhaseDamageStep5])if(!await i())return});o(this,"procBattlePhaseDamageStep1",async()=>(this.setStage("start"),await this.procFreeChain(this.canContinueBattle)));o(this,"procBattlePhaseDamageStep2",async()=>{if(!this.attackingMonster)throw new _("想定されない状態",this.attackingMonster);if(!this.targetForAttack)throw new _("想定されない状態",this.targetForAttack);const i=this.attackingMonster,a=this.targetForAttack;return this.setStage("beforeDmgCalc"),a.battlePosition==="Set"&&a.setBattlePosition("Defense",["Flip","Battle"],i,i.controller),await this.procFreeChain(this.canContinueBattle)});o(this,"procBattlePhaseDamageStep3",async()=>{if(!this.attackingMonster)throw new _("想定されない状態",this.attackingMonster);if(!this.targetForAttack)throw new _("想定されない状態",this.targetForAttack);const i=this.attackingMonster,a=this.targetForAttack;if(i.atk===void 0)throw new _("想定されない状態",this.attackingMonster,this.targetForAttack);if(this.setStage("dmgCalc"),!await this.procFreeChain(this.canContinueBattle))return!1;const r=i.atk,n=(a.battlePosition==="Attack"?a.atk:a.def)??0,s=this.turnPlayer,l=i.actions.find(d=>d.playType==="Battle");if(!l)throw new _(`${i.toString()}に戦闘アクションが定義されていない。`);const c=await l.prepare(s,a.cell,void 0,[],!1,!1);if(!c)throw new F("戦闘アクションがキャンセルされた。");if(this.duel.chainBlockLog.push(c),a.entityType==="Duelist")s.writeInfoLog(`ダメージ計算：${i.toString()} (${r}) ⇒ ${a.toString()}`),i.controller.getOpponentPlayer().battleDamage(r-n,i,a,c);else{s.writeInfoLog(`ダメージ計算：${i.toString()} (${r}) ⇒ ${a.toString()} (${n})`),r>0&&r>n?a.battlePosition==="Attack"?i.controller.getOpponentPlayer().battleDamage(r-n,i,a,c):i.status.piercingTo.getDistinct().forEach(f=>f.battleDamage(r-n,i,a,c)):r<n&&i.controller.battleDamage(n-r,a,i,c);const d=[];r>0&&(r>n||r===n&&a.battlePosition==="Attack")&&d.push(a),a.battlePosition==="Attack"&&r<=n&&d.push(i),await S.tryMarkForDestroy(d,c)}c.state=r>n?"done":"failed",i.info.battleLog.push({enemy:a,timestamp:this.duel.clock.getClone()}),a.info.battleLog.push({enemy:i,timestamp:this.duel.clock.getClone()});const u=Object.values(this.duel.duelists).filter(d=>d.lp<=0);if(u.length)throw u.length===1?new re(u[0].getOpponentPlayer(),`戦闘ダメージによって、${u[0].name}のライフポイントがゼロになった。`):new re(void 0,"戦闘ダメージによって、お互いのライフポイントがゼロになった。");return!0});o(this,"procBattlePhaseDamageStep4",async()=>(this.setStage("afterDmgCalc"),!!await this.procFreeChain()));o(this,"procBattlePhaseDamageStep5",async()=>(this.setStage("end"),await S.waitCorpseDisposal(this.duel),this.duel.clock.incrementChainSeq(),!!await this.procFreeChain()));o(this,"procBattlePhaseEndStep",async()=>{this.setStep("end"),this.priorityHolder=this.turnPlayer,await this.procSpellSpeed1()});o(this,"canContinueBattle",()=>this.attackingMonster?(this.attackingMonster.isOnFieldStrictly?this.attackingMonster.face==="FaceDown"?(this.duel.log.info(`${this.attackingMonster.toString()}が裏側守備表示になったため、戦闘が中断された。`),this._attackingMonster=void 0):this.attackingMonster.orientation==="Horizontal"&&(this.duel.log.info(`${this.attackingMonster.toString()}が守備表示になったため、戦闘が中断された。`),this._attackingMonster=void 0):(this.duel.log.info(`${this.attackingMonster.toString()}がフィールドに存在しなくなっため、戦闘が中断された。`),this._attackingMonster=void 0),!!this.attackingMonster):!1);o(this,"setStep",i=>{this.duel.clock.setStep(this.duel,i)});o(this,"setStage",i=>{this.duel.clock.setStage(this.duel,i)})}get nextPhaseList(){return["main2"]}get attackingMonster(){return this._attackingMonster}get targetForAttack(){return this._targetForAttack}}class Xn extends pi{constructor(i,a){super(i,a);o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{for(;;){this.priorityHolder=this.turnPlayer;const i=await this.duel.view.waitFieldAction(this.priorityHolder.getEnableActions(["NormalSummon","SpellTrapSet","SpecialSummon","FlipSummon","ChangeBattlePosition","IgnitionEffect","QuickEffect","CardActivation","LingeringEffect"],["Normal","Quick","Counter"],[]));if(i.actionInfo){if(await this.procChain({activator:this.priorityHolder,actionInfo:i.actionInfo},void 0)==="cancel")continue;await this.procFreeChain();continue}const a=i.phaseChange;if(a){this.priorityHolder=this.nonTurnPlayer;let r="done";for(;;){const n=await this.duel.view.waitQuickEffect(this.priorityHolder,this.priorityHolder.getEnableActions(["QuickEffect","CardActivation"],["Quick","Counter"],[]),[],"相手がフェイズを終了しようとしている。",!0);if(n&&(r=await this.procChain({activator:this.priorityHolder,actionInfo:n},void 0),r==="done")){await this.procTriggerEffects();break}return a==="battle1"?new td(this.duel,a):new Kn(this.duel)}if(r==="done"){await this.procFreeChain();continue}}}})}get nextPhaseList(){return this.duel.phase==="main1"&&this.duel.clock.turn>1?["battle1","end"]:["end"]}get attackingMonster(){}get targetForAttack(){}}class id extends pi{constructor(i){super(i,"standby");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>(await this.procSpellSpeed1(),new Xn(this.duel,"main1")))}get nextPhaseList(){return["main1"]}get attackingMonster(){}get targetForAttack(){}}class ad extends pi{constructor(i){super(i,"draw");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{if(Object.values(this.duel.duelists).forEach(i=>i.initForDrawPhase()),this.turnPlayer.writeInfoLog("ドローフェイズ開始。"),this.duel.clock.turn===1)this.turnPlayer.writeInfoLog("先攻プレイヤーはドローできない。");else{await this.turnPlayer.draw(1,void 0,void 0);for(const i of this.turnPlayer.getEnableActions(["Exodia"],["Normal"],[]))await i.action.directExecute(this.turnPlayer,void 0,!1)}return this.duel.field.getCardsOnFieldStrictly().forEach(i=>i.initForTurn()),await this.procSpellSpeed1(),new id(this.duel)})}get nextPhaseList(){return["standby"]}get attackingMonster(){}get targetForAttack(){}}class Kn extends pi{constructor(i){super(i,"end");o(this,"declareAttack",()=>{throw new _(`バトルフェイズ以外で攻撃宣言を実行した。${this.duel.clock.period.key}`)});o(this,"_proceed",async()=>{for(await this.procSpellSpeed1();;){const a=this.turnPlayer.getHandCell().cardEntities.length;if(a<7)break;await this.turnPlayer.discard(a-6,"Rule")}return this.turnPlayer.writeInfoLog("ターン終了。"),new ad(this.duel)})}get nextPhaseList(){return["draw"]}get attackingMonster(){}get targetForAttack(){}}const rd=["PlayFirst","DrawFirst","Random"],Jp={PlayFirst:"先攻",DrawFirst:"後攻",Random:"ランダム"};class re extends Error{constructor(i,a){super(i?`デュエルが終了した。勝者：${i.profile.name}`:"デュエルが終了した。ドロー。");o(this,"winner");o(this,"message");this.winner=i,this.message=a}}class _ extends Error{constructor(i,...a){super(i);o(this,"message");o(this,"items");this.message=i,this.items=a}}class F extends _{constructor(...e){super("キャンセル不可のアクションがキャンセルされた。",...e)}}class Ip{constructor(e,i,a,r=[],n,s,l,c=[],u="Random"){o(this,"onDuelEndEvent",new V);o(this,"view");o(this,"log");o(this,"chainBlockLog");o(this,"field");o(this,"clock");o(this,"duelists");o(this,"_facilitator");o(this,"isEnded");o(this,"winner");o(this,"reasonOfEnd","");o(this,"coin",!1);o(this,"startMode");o(this,"declareAttack",(...e)=>this._facilitator.declareAttack(...e));o(this,"getTurnPlayer",()=>this.clock.turn%2===0?this.secondPlayer:this.firstPlayer);o(this,"getNonTurnPlayer",()=>this.clock.turn%2===0?this.firstPlayer:this.secondPlayer);o(this,"main",async()=>{console.info("main start!"),this.coin=this.startMode==="PlayFirst"?!0:this.startMode==="DrawFirst"?!1:Math.random()>.5;const e=gp(...Object.values(this.duelists).flatMap(i=>i.deckInfo.cardNames).getDistinct()).reduce((i,a)=>(i[a.name]=a,{...i}),{});for(const i of Object.values(this.duelists))i.pushDeck(e),i.getDeckCell().shuffle(),i.initHand.length&&i.initHand.forEach(a=>{const r=i.getDeckCell().cardEntities.find(n=>n.origin.name===a);if(!r){this.log.info(`初手操作により${a}を手札に加えようとしたが、デッキに存在しない。`);return}r.addToHand(["System"],void 0,void 0),this.log.info(`初手操作により${r.toString()}を手札に加えた`,i)}),await i.draw(5-i.getHandCell().cardEntities.length,void 0,void 0);this.log.info(`【デュエル開始】${this.firstPlayer.profile.name} V.S. ${this.secondPlayer.profile.name}`),this.log.info(`先攻：${this.firstPlayer.profile.name} 後攻：${this.secondPlayer.profile.name}`);try{for(const i of Object.values(this.duelists))for(const a of i.getEnableActions(["Exodia"],["Normal"],[]))await a.action.directExecute(i,void 0,!1);for(;!this.isEnded&&(this._facilitator=await this._facilitator.proceed(),!(this.clock.turn>1e3)););}catch(i){i instanceof re?(this.chainBlockLog.records.forEach(a=>{a.chainBlockInfo.state==="ready"?a.chainBlockInfo.state="failed":a.chainBlockInfo.state==="processing"&&(a.chainBlockInfo.state="done")}),this.clock.incrementChainSeq(),console.info(i),this.isEnded=!0,this.winner=i.winner,this.reasonOfEnd=i.message,this.log.info(i.winner?`デュエル終了。勝者${i.winner.profile.name}。${i.message}`:`デュエル終了。引き分け。${i.message}`),this.view.requireUpdate(),this.onDuelEndEvent.trigger()):i instanceof Error&&this.log.error(i)}finally{this.log.dispose()}});o(this,"executeSystemPeriodActions",()=>{Object.values(this.duelists).forEach(e=>e.getEnableActions(["SystemPeriodAction"],["Normal"],[]))});this.clock=new Za,this.isEnded=!1,this.startMode=u,this.duelists={Below:new $i(this,"Below",e,i,a,r),Above:new $i(this,"Above",n,s,l,c)},this.field=new su(this),this.clock.onStageChange.append(this.executeSystemPeriodActions),this.view=new Iu(this),this.log=new ou(this),this.chainBlockLog=new ed(this),this._facilitator=new Kn(this)}get onDuelEnd(){return this.onDuelEndEvent.expose()}get phase(){return this.clock.period.phase}get step(){return this.clock.period.step}get stage(){return this.clock.period.stage}get nextPhaseList(){return this.facilitator.nextPhaseList}get chainBlockInfos(){return this.facilitator.chainBlockInfos}get attackingMonster(){return this.facilitator.attackingMonster}get targetForAttack(){return this.facilitator.targetForAttack}get firstPlayer(){return this.coin?this.duelists.Below:this.duelists.Above}get secondPlayer(){return this.coin?this.duelists.Above:this.duelists.Below}get facilitator(){return this._facilitator}}const Te=class Te{constructor(e){o(this,"id");o(this,"name");o(this,"description");o(this,"chainConfig");o(this,"previousGameMode");o(this,"previousNpcId");o(this,"previousNpcDeckId");o(this,"previousStartMode");o(this,"npcLvl",Number.MAX_VALUE);o(this,"npcType","None");o(this,"save",async e=>{const i={id:this.id,name:this.name,description:this.description,chainConfig:this.chainConfig??{noticeSelfChain:!1,noticeFreeChainPhase:!1,noticeFreeChainStep:!1,noticeAfterChainInMainPhase:!1},previousGameMode:this.previousGameMode??"Preset",previousNpcId:this.previousNpcId??Number.MIN_SAFE_INTEGER,previousStartMode:this.previousStartMode,previousNpcDeckId:this.previousNpcDeckId>-1?this.previousNpcDeckId:Number.MIN_SAFE_INTEGER,...e},a=await Te.tblHeader.update(this.id,r=>({...r,...i}));return console.log(this.previousNpcDeckId,Number.MIN_SAFE_INTEGER,i,a),new Te(a)});var i;this.id=e.id,this.name=e.name,this.description=e.description,this.chainConfig=e.chainConfig,this.previousGameMode=e.previousGameMode,this.previousNpcId=((i=Zr.find(a=>a.id===e.previousNpcId))==null?void 0:i.id)??Zi(...Zr.map(a=>a.id)),this.previousStartMode=rd.includes(e.previousStartMode)?e.previousStartMode:"Random",this.previousNpcDeckId=e.previousNpcDeckId}};o(Te,"tblHeader"),o(Te,"getOrCreateNew",async e=>{Te.tblHeader||(Te.tblHeader=new nd(e));const i=await Te.tblHeader.getAll();if(i.length){let r=i[0];return r.chainConfig||(r={...r,chainConfig:{noticeSelfChain:!1,noticeFreeChain:!1}}),new Te(r)}const a=await Te.tblHeader.insert({name:"あなた",description:"ここの文字列を何に使うかは未定。",chainConfig:{noticeSelfChain:!1,noticeFreeChain:!1},previousGameMode:"Preset",previousNpcId:0,previousNpcDeckId:Number.MIN_SAFE_INTEGER,previousStartMode:"Random"});return new Te(a)});let Hr=Te;class nd extends ar{constructor(i){super(i,"TblDuelistProfile");o(this,"_prepareInitialRecords",()=>[])}}let Ca=-1;const Zr=[{id:Ca--,name:"サンドバッグくん棒立ち",description:"攻撃宣言なし、強制効果以外の効果の発動なし。",npcLvl:0,npcType:"Normal"},{id:Ca--,name:"サンドバッグくん非暴力",description:"攻撃宣言なし。",npcLvl:100,npcType:"Normal"},{id:Ca--,name:"サンドバッグくん白帯",description:"とくに制限なし。",npcLvl:200,npcType:"Normal"},{id:Number.MIN_SAFE_INTEGER,name:"FTK or Die",description:"FTKに失敗すると敗北。",npcLvl:Number.MIN_SAFE_INTEGER,npcType:"FtkChallenge"}],sd=(t,e)=>Array.from({length:e-t},(i,a)=>t+a);Array.prototype.shuffle=function(){return this.map(e=>({item:e,seq:Math.random()})).toSorted((e,i)=>e.seq-i.seq).map(e=>e.item)};Array.prototype.randomPickMany=function(t){return this.shuffle().slice(0,t)};Array.prototype.randomPick=function(){return this.shuffle().slice(0,1)[0]};Array.prototype.reset=function(...t){this.splice(0),this.push(...t)};Array.prototype.union=function(t){return this.filter(e=>t.find(i=>e===i))};Array.prototype.getAllOnOffPattern=function*(){const t=[[]];yield[];for(const e of this){const i=t.map(a=>[...a,e]);yield*i,t.push(...i)}};Array.prototype.getDistinct=function(){return Array.from(new Set(this))};Array.prototype.distinct=function(){this.reset(...this.getDistinct())};const eg=["noticeSelfChain","noticeFreeChain"],tg={noticeSelfChain:"セルフチェーン",noticeFreeChain:"フリーチェーン"},je=class je{constructor(e,i,a,r,n,s=[]){o(this,"duel");o(this,"seat");o(this,"profile");o(this,"deckInfo");o(this,"info");o(this,"infoOrigin");o(this,"status");o(this,"statusOrigin");o(this,"duelistType");o(this,"lifeLog");o(this,"actionBlackListForNPC");o(this,"_lp");o(this,"initHand");o(this,"chainConfig");o(this,"writeInfoLog",e=>this.duel.log.info(e,this));o(this,"writeChainBlockHeaderLog",(e,i)=>this.duel.log.pushChainBlockHeaderLog(this,e,i));o(this,"initForDrawPhase",()=>{this.info={...this.infoOrigin}});o(this,"canDiscard",e=>(this.status.canDiscardAsCost&&console.log(e),!0));o(this,"canSendToGraveyard",e=>(console.log(e),!0));o(this,"canRelease",e=>(console.log(e),!0));o(this,"canTryBanish",(e,i,a)=>this.entity.procFilterBundle.filter([i],this,this.entity,a,[e]));o(this,"battleDamage",(e,i,a,r)=>{const n=eu(e,r.activator,this,i,a,r.action);return this.damage(i,n)});o(this,"effectDamage",(e,i)=>je.effectDamage([{to:this,point:e}],i));o(this,"_effectDamage",(e,i)=>this.damage(i.action.entity,Ic(e,i,this)));o(this,"damage",(e,i)=>{const a=[];if(i.point){const r=i.damageType==="Heal"?i.point:i.point*-1;a.push(this.setLp(this._lp+r,e,i.damageType))}return i.damageToOpponent1&&a.push(this.getOpponentPlayer().setLp(this._lp-i.damageToOpponent1,e,i.damageType)),i.damageToOpponent2&&a.push(this.getOpponentPlayer().setLp(this._lp-i.damageToOpponent2,e,i.damageType)),a});o(this,"lostLp",(e,i)=>this.setLp(this._lp-e,i,"Lost"));o(this,"payLp",(e,i)=>{const a=this.setLp(this._lp-e,i,"Pay");if(this.lp<=0)throw new re(this.getOpponentPlayer(),`${i.toString()}へのライフポイント支払いにより、${this.name}のライフポイントが0になった。`);return a});o(this,"heal",(e,i)=>this.setLp(this._lp+e,i,"Heal"));o(this,"setLp",(e,i,a)=>{const r={duelist:this,clock:this.duel.clock.getClone(),reason:a||"Set",beforeLp:this._lp,afterLp:e,entity:i};return this.lifeLog.push(r),this._lp=e,this.writeInfoLog(`ライフポイント変動：${r.afterLp-r.beforeLp}（${r.beforeLp} ⇒ ${r.afterLp}）`),r});o(this,"getOpponentPlayer",()=>this.duel.firstPlayer===this?this.duel.secondPlayer:this.duel.firstPlayer);o(this,"getCells",(...e)=>this.duel.field.getCells(...e).filter(i=>{var a;return i.owner===this||((a=i.cardEntities[0])==null?void 0:a.controller)===this}));o(this,"getHandCell",()=>this.getCells("Hand")[0]);o(this,"getDeckCell",()=>this.getCells("Deck")[0]);o(this,"getExtraDeck",()=>this.getCells("ExtraDeck")[0]);o(this,"getGraveyard",()=>this.getCells("Graveyard")[0]);o(this,"getFieldZone",()=>this.getCells("FieldSpellZone")[0]);o(this,"getBanished",()=>this.getCells("Banished")[0]);o(this,"getMonsterZones",()=>this.getCells("MonsterZone"));o(this,"getExtraMonsterZones",()=>this.getCells("ExtraMonsterZone"));o(this,"getSpellTrapZones",()=>this.getCells("SpellAndTrapZone"));o(this,"getXyzMaterialZone",()=>this.getCells("XyzMaterialZone")[0]);o(this,"getEmptyMonsterZones",()=>this.getMonsterZones().filter(e=>e.cardEntities.length===0));o(this,"getAvailableMonsterZones",()=>this.getMonsterZones().filter(e=>e.isAvailable));o(this,"getAvailableExtraMonsterZones",()=>this.getExtraMonsterZones().length===0?this.duel.field.getCells("ExtraMonsterZone").filter(e=>e.isAvailable):[]);o(this,"getAvailableSpellTrapZones",()=>this.getSpellTrapZones().filter(e=>e.isAvailable));o(this,"getMonstersOnField",()=>this.duel.field.getMonstersOnFieldStrictly().filter(e=>e.controller===this));o(this,"getSpellTrapsOnField",()=>this.duel.field.getSpellTrapsOnFieldStrictly().filter(e=>e.controller===this));o(this,"getPendingMonstersOnField",()=>this.duel.field.getPendingMonstersOnField().filter(e=>e.controller===this));o(this,"getPendulumScaleMonsters",()=>this.duel.field.getCardsOnFieldStrictly().filter(e=>e.isPendulumScale).filter(e=>e.controller===this));o(this,"getPendulumScales",()=>{const e=this.getPendulumScaleMonsters();if(e.length<2)return;const i=e.find(s=>s.cell.column===(this.seat==="Below"?1:5)),a=e.find(s=>s.cell.column===(this.seat==="Below"?5:1));if(!i||!a)throw new _("想定されない状態",e);const r=i.psR,n=a.psL;if(r===void 0||n===void 0)throw new _("想定されない状態",e);return r>n?{upperBound:r,lowerBound:n}:{upperBound:n,lowerBound:r}});o(this,"getEntiteisOnField",()=>this.duel.field.getCardsOnFieldStrictly().filter(e=>e.controller===this));o(this,"pushDeck",e=>{this.deckInfo.cardNames.map(i=>e[i]).filter(i=>i).forEach(i=>H.createCardEntity(this,i)),this.duel.log.info(`デッキをセット。メイン${this.getDeckCell().cardEntities.length}枚。エクストラ${this.getExtraDeck().cardEntities.length}枚。`,this)});o(this,"draw",async(e,i,a)=>{var s;if(e<1)return;const r=this.getDeckCell(),n=[];this.writeInfoLog(`デッキからカードを${e}枚ドロー。`);for(const l of Array(e)){if(!r.cardEntities.length)throw this.writeInfoLog(n.length>0?`デッキからカードを${e}枚ドローしようとしたが、${n.length}枚しかドローできなかった。${n}`:"デッキからカードをドローできなかった。"),new re(this.getOpponentPlayer(),`${this.name}がデッキからカードをドローできなかった。`);const c=r.cardEntities[0];await c.draw(i?["Effect"]:["Rule"],i,a),n.push(((s=c.origin)==null?void 0:s.name)||"!名称取得失敗!")}});o(this,"summon",async(e,i,a,r,n,s,l,c)=>(await this.summonMany(this,e,i,a,[{monster:r,posList:n,cells:s}],l,!1,1,d=>d.length===1,c)??[])[0]);o(this,"waitSelectNumberFromRange",(e,i,a,r)=>this.waitSelectNumber(e,sd(i,a),r));o(this,"waitSelectNumber",(e,i,a)=>this.duel.view.waitSelectNumber(this,e,i,a));o(this,"waitSelectEntities",(e,i,a,r,n=!1)=>this.duel.view.waitSelectEntities(this,{selectables:e,qty:i,validator:a,cancelable:n},r));o(this,"waitSelectEntity",async(e,i,a=!1)=>{const r=await this.waitSelectEntities(e,1,n=>n.length===1,i,a);return r?r[0]:void 0});o(this,"waitYesNo",e=>this.duel.view.waitYesOrNo(this,e));o(this,"waitSelectText",(e,i,a=!1)=>this.duel.view.waitSelectText(this,e,i,a));o(this,"getEnableActions",(e,i,a)=>{var n;const r=((n=a.slice(-1)[0])==null?void 0:n.nextChainBlockFilter)??(()=>!0);return[...this.duel.field.getAllCardEntities(),this.entity].flatMap(s=>s.actions).filter(s=>s.canExecute(this)).filter(s=>i.includes(s.spellSpeed)).filter(s=>e.includes(s.playType)).filter(s=>r(this,s)).map(s=>s.validate(this,a)).filter(s=>s!==void 0)});o(this,"discard",async(e,i,a=()=>!0,r,n,s,l=!1)=>{const c=this.getHandCell().cardEntities.filter(a);if(c.length<e)return[];let u=[];if(c.length===e)u=c;else if((s||this).duelistType==="NPC")u=c.randomPickMany(e);else{const d=await this.duel.view.waitSelectEntities(s||this,{selectables:c,qty:e,validator:f=>f.length===e,cancelable:l},`${e}枚カードを捨てる。`);if(!d)return;u=d}return this.writeInfoLog(`手札からカードを${u.length}枚捨てた。${u.map(d=>d.toString())}。`),await S.discardManyForTheSameReason(u,["Discard",i],r,n),u});o(this,"getEnableSummonList",(e,i,a,r,n,s,l)=>{const c=this.duel.field.getCells("ExtraMonsterZone"),u=c.filter(f=>!s.map(p=>p.material).includes(f.cardEntities[0])).filter(f=>f.owner===this),d=[];return u.length&&d.push(...c.filter(f=>!u.includes(f)).filter(f=>f.isAvailable)),n.map(f=>({...f,summoner:this})).map(f=>{var p;return(i!=="LinkSummon"||!this.duel.field.canExtraLink(f.monster,s))&&(f.cells=f.cells.filter(h=>!d.includes(h))),(p=f.monster.status.monsterCategories)!=null&&p.includes("Link")&&(f.posList=f.posList.filter(h=>h==="Attack")),f}).map(f=>({...f,cells:f.cells.filter(p=>p.cardEntities.length===0||s.some(h=>h.material===p.cardEntities[0]))})).map(f=>{var p,h;if(f.monster.cell.cellType==="ExtraDeck"){if((p=f.monster.status.monsterCategories)!=null&&p.includes("Link")||(h=f.monster.status.monsterCategories)!=null&&h.includes("Pendulum"))return{...f,cells:f.cells.filter(y=>y.cellType==="ExtraMonsterZone"||y.linkArrowSources.filter(v=>!s.map(g=>g.material).includes(v)).length)}}else return{...f,cells:f.cells.filter(y=>y.cellType!=="ExtraMonsterZone")};return f}).filter(f=>f.cells.length&&f.posList.length).map(f=>this.entity.summonFilterBundle.filter(e,i,a,r,f,s,l)).filter(f=>f.cells.length&&f.posList.length).map(f=>f.monster.summonFilterBundle.filter(e,i,a,r,f,s,l)).filter(f=>f.cells.length&&f.posList.length).map(f=>s.map(p=>p.material.summonFilterBundle).reduce((p,h)=>h.filter(e,i,a,r,p,s,l),f)).filter(f=>f.cells.length&&f.posList.length)});o(this,"prepareToSummonMany",async(e,i,a,r,n,s,l,c,u,d,f="特殊召喚するモンスターを選択。")=>{const p=this.getEnableSummonList(e,i,a,r,n,s,l);if(!p.length)return[];let h=p.map(v=>({...v,cells:[...v.cells],posList:[...v.posList]}));const y=[];for(;h.length&&y.length<(c??Number.MAX_SAFE_INTEGER);){const v=d&&!y.length||u(y.map(w=>w.monster));let g=h.randomPick();if(h.length>1){const w=await this.waitSelectEntity(h.map(A=>A.monster),f,v);if(!w)return y;g=h.find(A=>A.monster===w)??g}let m=[...g.posList].randomPick(),T=[...g.cells].randomPick();if((g.cells.length||g.posList.length)&&this.duelistType!=="NPC"){const w=await this.duel.view.waitSelectSummonDestination(g.summoner,g.monster,g.cells,g.posList,v);if(!w)return y;T=w.dest,m=w.battlePosition}y.push({summoner:this,monster:g.monster,pos:m,dest:T});const D=T.cellType==="ExtraMonsterZone";h.forEach(w=>{w.cells=w.cells.filter(A=>!y.map(J=>J.dest).includes(A)),D&&(w.cells=w.cells.filter(A=>A.cellType!=="ExtraMonsterZone"))}),h=h.filter(w=>w!==g).filter(w=>w.cells.length)}return y});o(this,"summonAll",(e,i,a,r,n,s,l,c,u)=>this.summonMany(e,i,a,r,n,s,l,n.length,d=>d.length===n.length,c,u));o(this,"summonOne",async(e,i,a,r,n,s,l,c,u)=>{const d=await this.summonMany(e,i,a,r,n,s,l,1,f=>f.length===1,c,u);if(d)return d[0]});o(this,"summonMany",(e,i,a,r,n,s,l,c,u,d,f)=>je.summonMany(e,i,a,r,n.map(p=>({...p,summoner:this})),s,l,c,u,d,f));o(this,"summonEachFields",(e,i,a,r,n,s,l,c,u,d)=>je._summonMany(e,i,a,r,[{duelist:this,msg:"自分"},{duelist:this.getOpponentPlayer(),msg:"相手"}].map(f=>({summoner:this,msg:`${f.msg}フィールドに特殊召喚するモンスターを選択。`,summonChoices:n.map(p=>({...p,cells:p.cells.filter(h=>h.owner===f.duelist)}))})),s,l,c,u,d));o(this,"selectAttackTargetForNPC",(e,i)=>{const a=e.atk??0,r=e.getAttackTargets();if(!r.length)return;const n=r.find(s=>s.entityType==="Duelist");return n&&(a>=Zi(1600,this.getOpponentPlayer().lp)||e.info.battlePotisionChangeCount>0)?n:r.find(s=>s.battlePosition==="Attack"?a>=(s.atk??0):a<(s.battlePosition==="Set"?1e3:s.def??0)?!1:s.validateDestroy("Battle",this,e,i))});o(this,"selectActionForNPC",(e,i)=>{if(!e.length)return;const a=e.filter(g=>g.action.isMandatory);if(a.length)return a.randomPick();let r=e.filter(g=>!this.actionBlackListForNPC.includes(g.action.playType));const n=r.filter(g=>!Number.isNaN(g.action.priorityForNPC)).shuffle().sort((g,m)=>g.action.priorityForNPC-m.action.priorityForNPC);if(n.length)return n[0];const s=r.filter(g=>g.action.playType==="TriggerEffect");if(s.length)return s.randomPick();if(this.duel.phase!=="main1"&&this.duel.phase!=="main2"){const g=r.filter(m=>m.action.playType==="IgnitionEffect");if(g.length)return g.randomPick()}const l=r.filter(g=>g.action.playType==="DeclareAttack").sort((g,m)=>(g.action.entity.atk??0)-(m.action.entity.atk??0));if(l.length)return l.find(g=>this.selectAttackTargetForNPC(g.action.entity,g.action));r=r.filter(g=>g.action.playType!=="DeclareAttack");const c=r.length?i.slice(-1)[0]:void 0,u=r.filter(g=>g.action.negatePreviousBlock);if(c&&c.activator!==this&&u.length)return u.randomPick();if(r=r.filter(g=>!g.action.negatePreviousBlock),!r.length)return;const d=Hi(...this.getOpponentPlayer().getMonstersOnField().filter(g=>g.battlePosition==="Attack").map(g=>g.atk??0),1600),f=Zi(...this.getOpponentPlayer().getMonstersOnField().map(g=>g.battlePosition==="Set"?1500:(g.battlePosition==="Attack"?g.atk:g.def)??0),1500),p=this.getMonstersOnField(),h=Hi(...p.filter(g=>g.battlePosition==="Attack").map(g=>g.atk??0),0);let y=r.filter(g=>g.action.playType!=="ChangeBattlePosition").filter(g=>g.action.entity.battlePosition!=="Attack").filter(g=>(g.action.entity.atk??0)>=d||(g.action.entity.atk??0)>f&&(g.action.entity.atk??0)>2300);if(y.length)return y.randomPick();r=r.filter(g=>g.action.playType!=="ChangeBattlePosition").filter(g=>g.action.playType!=="SpellTrapSet").filter(g=>g.action.entity.actions.filter(m=>m.playType!=="NormalSummon"&&m.playType!=="SpecialSummon").flatMap(m=>m.executableCells).every(m=>m!=="Hand")||g.action.playType!=="NormalSummon"&&g.action.playType!=="SpecialSummon");const v=[...r.filter(g=>g.action.playType==="NormalSummon").filter(g=>(g.action.entity.lvl??12)<5),...r.filter(g=>g.action.playType==="SpecialSummon"),...r.filter(g=>g.action.playType==="NormalSummon").filter(g=>(g.action.entity.atk??0)>2600||(g.action.entity.atk??0)>2300&&(g.action.entity.lvl??12)<7).filter(g=>(g.action.entity.atk??0)>=h),...r.filter(g=>g.action.entity.face==="FaceUp").filter(g=>g.action.entity.isOnFieldStrictly)];if(v.length)return v.randomPick();if(r=r.filter(g=>g.action.playType!=="NormalSummon").filter(g=>g.action.playType!=="SpecialSummon"),this.duel.phase==="main2"){if(y=e.filter(g=>g.action.playType==="ChangeBattlePosition").filter(g=>g.action.entity.battlePosition==="Attack").filter(g=>(g.action.entity.atk??0)<d||(g.action.entity.atk??0)>f&&(g.action.entity.atk??0)>2300),y.length)return y.randomPick();if(this.getAvailableSpellTrapZones().length>1)return e.filter(g=>g.action.playType==="SpellTrapSet").filter(g=>g.action.entity.kind!=="Spell"||g.action.entity.status.spellCategory==="QuickPlay").randomPick()}if(console.log(r),Math.random()<r.length/4)return r.randomPick()});this.duel=e,this.seat=i,this.profile=a,this.chainConfig=a.chainConfig??{noticeSelfChain:!0,noticeFreeChain:!0},this.duelistType=r,this.deckInfo=n,this.initHand=s,this.lifeLog=[],this.infoOrigin={maxRuleNormalSummonCount:1,ruleNormalSummonCount:0,ruleNormalSummonCountQty:0,effectNormalSummonCount:0,effectNormalSummonCountQty:0,specialSummonCount:0,specialSummonCountQty:0},this.info={...this.infoOrigin},this.statusOrigin={maxSpecialSummonCount:Number.MAX_VALUE,canDrawByEffect:!0,canSearchFromDeck:!0,canDiscardAsCost:!0,canDiscardAsEffect:!0},this.status={...this.statusOrigin},this._lp=8e3;const l=[];this.duelistType==="NPC"&&(this.profile.npcLvl<0&&l.push("NormalSummon","SpecialSummon","SpellTrapSet"),this.profile.npcLvl<1&&l.push("CardActivation","IgnitionEffect","TriggerEffect","QuickEffect"),this.profile.npcLvl<101&&l.push("DeclareAttack")),this.actionBlackListForNPC=l}get entity(){const e=this.getHandCell().entities.find(i=>i.entityType==="Duelist");return e||H.createPlayerEntity(this)}get name(){return this.profile.name}get lp(){return this._lp}get isTurnPlayer(){return this.duel.getTurnPlayer()===this}get canDraw(){return!0}get canAddToHandFromDeck(){return!0}get canAddToHandFromGraveyard(){return!0}get canSet(){return!0}};o(je,"summonMany",async(e,i,a,r,n,s,l,c,u,d,f="特殊召喚するモンスターを選択。")=>je._summonMany(e,i,a,r,n.map(p=>p.summoner).getDistinct().map(p=>({summoner:p,summonChoices:n.filter(h=>h.summoner===p)})),s,l,c,u,d,f)),o(je,"_summonMany",async(e,i,a,r,n,s,l,c,u,d,f="特殊召喚するモンスターを選択。")=>{const p=[];for(const h of n){const y={...h};y.summonChoices=y.summonChoices.filter(g=>!p.map(m=>m.monster).includes(g.monster));const v=await y.summoner.prepareToSummonMany(e,i,a,r,y.summonChoices.map(g=>({...g,summoner:y.summoner})),s,l,c,u,d,y.msg??f);p.push(...v)}if(p.length)return p.forEach(h=>h.monster.info.materials.reset(...s)),await S.moveToXyzOwner(p[0].dest,p[0].monster,s.map(h=>h.material).filter(h=>h.kind==="XyzMaterial"),["XyzMaterial","Rule"],p[0].monster,e),await H.summonMany(p,i,a,r.entity,e),p.map(h=>h.monster)}),o(je,"effectDamage",(e,i)=>{if(!e.length)return[];const a=e.flatMap(n=>n.to._effectDamage(n.point,i)),r=Object.values(e[0].to.duel.duelists).filter(n=>n.lp>0);if(r.length===1)throw new re(r[0],`${i.action.toFullString()}により、${r[0].getOpponentPlayer().name}のライフポイントが0になった。`);if(!r.length)throw new re(void 0,`${i.action.toFullString()}により、お互いのライフポイントが0になった。`);return a});let $i=je;const Gt=["Controller","Opponent"],ld=["IfNormarlSummonSucceed","IfAdvanceSummonSucceed","IfSpecialSummonSucceed","IfFusionSummonSucceed","IfRitualSummonSucceed","IfSynchroSummonSucceed","IfXyzSummonSucceed","IfPendulumSummonSucceed","IfLinkSummonSucceed","IfFlipSummonSucceed","IfFlip"],od=[...ld,"IfDestroyed","IfDoneByBattle","IfDoneByEffect"],Gr=["NormalSummon","AdvanceSummon","SpecialSummon","SpecialSummonFromDeck","SendToGraveyardFromDeck","Draw","SearchFromDeck","BanishFromDeck","BanishFromGraveyard","AddToHandFromGraveyard","ReturnToDeckFromGraveyard","SpecialSummonFromGraveyard","SpecialSummonFromBanished","ReturnToHandFromGraveyard","ReturnToHandFromField","BanishFromField","BanishFromHand","Destroy","DestroyMultiple","DestroyOnField","DestroyMultipleOnField","DestroyOnOpponentField","DestroyMultipleOnOpponentField","DestroyMonsterOnField","DestroyMonstersOnField","DestroySpellTrapOnField","DestroySpellTrapsOnField","SpecialSummonFromHand","SpecialSummonFromExtraDeck","SpecialSummonToken","DamageToOpponent","DamageToSelf","PayLifePoint","DiscordAsCost","DiscordAsEffect","RollDice","BounceToHand","NegateCardEffect","NegateCardActivation","NegateNormalSummon","NegateSpecialSummon",...od],Ui=["discard","banish","release","returnToDeck","returnToHand","sendToGraveyard","xyzMaterial"],cd=t=>t.triggerType==="Arrival",ud=t=>t.triggerType==="Departure",Ae=class Ae extends ai{constructor(i,a,r,n){super(i,a,r);o(this,"getTargetableEntities",(i,a)=>{if(this.definition.hasToTargetCards&&!this.definition.getTargetableEntities)throw new _(`処理定義が矛盾している。${this.toFullString()}`,this);return this.definition.getTargetableEntities?this.definition.getTargetableEntities(i,a):[]});o(this,"toString",()=>this.playType==="CardActivation"?"カードの発動":this.isWithChainBlock?`«${this.title}»`:this.title);o(this,"toFullString",()=>`${this.entity.toString()}の${this.toString()}`);o(this,"addhocMaterialLimitation");o(this,"getClone",i=>new Ae(this.seq,this.entity,this.definition,i));o(this,"validate",(i,a,r=[],n)=>{const s=r.includes("IgnoreRegularCosts"),l=r.includes("IgnoreConditions"),c=r.includes("CopyEffectOnly");if(this.isWithChainBlock&&!this.entity.status.canActivateEffect||s&&this.needsToPayRegularCosts||!this.validateCount(i,a,n))return;const u=Hi(0,...a.map(p=>p.chainNumber??-1)),d={index:a.length,chainNumber:this.isWithChainBlock?u+1:void 0,action:this,activator:i,targetChainBlock:a.slice(-1)[0],state:"unloaded",dest:void 0,ignoreCosts:!1};if(this.definition.canPayCosts&&!s&&!this.definition.canPayCosts(d,this.playType==="AfterChainBlock"?[]:a))return;if(this.definition.triggerPattern){if(cd(this.definition.triggerPattern)){if(!Ae.validateArrivalTrigger(this.entity,this.definition.triggerPattern))return}else if(ud(this.definition.triggerPattern)&&!Ae.validateDepartureTrigger(this.entity,this.definition.triggerPattern))return}if(this.definition.meetsConditions&&!l&&!this.definition.meetsConditions(d,this.playType==="AfterChainBlock"?[]:a))return;if(this.definition.canExecute){const p=this.definition.canExecute(d,this.playType==="AfterChainBlock"?[]:a,n);if(p==="RemoveMe"){this.entity.actions.reset(...this.entity.actions.filter(h=>h.seq!==this.seq));return}if(!p)return}const f=[];if(this.definition.getDests&&f.push(...this.definition.getDests(d,this.playType==="AfterChainBlock"?[]:a)),this.playType==="CardActivation"&&!c){const p=this.getDestForCardActivation(i);if(!p)return;f.push(...p)}else this.playType==="SpellTrapSet"&&(this.entity.status.spellCategory==="Field"?f.push(i.getFieldZone()):f.push(...i.getAvailableSpellTrapZones()));return{action:this,dests:f,originSeq:this.seq}});o(this,"validateCount",(i,a,r)=>{if(r)return!0;const n=a.filter(l=>this.isSameGroup(l.action)).length;if(this.isOnlyNTimesPerDuel>0&&this.entity.field.duel.chainBlockLog.records.filter(l=>!l.chainBlockInfo.isNegatedActivationBy).filter(l=>this.isSameGroup(l.chainBlockInfo.action)).filter(l=>l.chainBlockInfo.activator===i).length+n>=this.isOnlyNTimesPerDuel||this.isOnlyNTimesPerTurn>0&&this.entity.field.duel.chainBlockLog.records.filter(l=>!l.chainBlockInfo.isNegatedActivationBy).filter(l=>this.isSameGroup(l.chainBlockInfo.action)).filter(l=>l.clock.turn===this.entity.field.duel.clock.turn).filter(l=>l.chainBlockInfo.activator===i).length+n>=this.isOnlyNTimesPerTurn||this.isOnlyNTimesPerChain>0&&n>=this.isOnlyNTimesPerChain)return!1;const s=n+this.entity.counterHolder.getActionCount(this);return!(this.isOnlyNTimesPerTurnIfFaceup>0&&s>=this.isOnlyNTimesPerTurnIfFaceup||this.isOnlyNTimesIfFaceup>0&&s>=this.isOnlyNTimesIfFaceup)});o(this,"getDestForCardActivation",i=>{var r;if(this.entity.info.isPending||this.entity.info.isDying||this.entity.info.isSettingSickness)return;if(this.entity.isOnFieldAsSpellTrapStrictly)return this.entity.face==="FaceDown"?[]:void 0;if(this.entity.cell.cellType!=="Hand"||this.definition.canActivateCardDirectly||!i.isTurnPlayer)return;if(this.entity.status.spellCategory==="Field")return[i.getFieldZone()];let a=i.getAvailableSpellTrapZones();return(r=this.entity.status.monsterCategories)!=null&&r.includes("Pendulum")&&(a=a.filter(n=>n.isAvailableForPendulum)),a});o(this,"prepare",async(i,a,r,n,s,l)=>{var w,A;var J=[];try{let c=a;let u=s;const d=this.isWithChainBlock?Hi(0,...n.map(E=>E.chainNumber??-1))+1:void 0;let f="";const p=[];if(this.playType==="CardActivation"||this.playType==="SpellTrapSet")if(this.entity.cell.cellType==="Hand"){let E=this.entity.status.spellCategory==="Field"?[i.getFieldZone()]:i.getAvailableSpellTrapZones();if((w=this.entity.status.monsterCategories)!=null&&w.includes("Pendulum")&&(E=E.filter(I=>I.isAvailableForPendulum)),c&&E.includes(c)&&(E=[c],c=void 0),this.entity.status.spellCategory==="Field"){const I=i.getFieldZone().cardEntities;if(I.length){const ye=I[0];p.push(async()=>{await ye.sendToGraveyard(["Rule"],this.entity,i),i.writeInfoLog(`フィールド魔法の上書きにより、${ye.toString()}は墓地に送られた。`)}),u=!1}}let ie=E[0];if(E.length>1){ie=E.randomPick();const I=this.playType==="SpellTrapSet"?"セット":"カードの発動",ye=await this.duel.view.waitSelectDestination(i,this.entity,E,"カードを移動先へドラッグ",I,u);if(!ye)return;ie=ye}f+="手札から",this.playType==="SpellTrapSet"?f+="魔法・罠カードをセット。":f+=`${this.entity.toString()}を発動。`,u=!1,this.playType==="CardActivation"&&(this.entity.info.isPending=!0),(A=this.entity.status.monsterCategories)!=null&&A.includes("Pendulum")?p.push(()=>this.entity.activateAsPendulumScale(ie,["CardActivation"],this.entity,i)):this.playType==="CardActivation"?p.push(()=>this.entity.activateSpellTrapFromHand(ie,this.entity.kind,["CardActivation"],this.entity,i)):p.push(()=>this.entity.setAsSpellTrap(ie,this.entity.kind,["SpellTrapSet"],this.entity,i))}else this.entity.isOnField&&this.entity.face==="FaceDown"?(f+=`セットされていた${this.entity.toString()}を発動。`,u=!1,this.playType==="CardActivation"&&(this.entity.info.isPending=!0),p.push(()=>this.entity.setNonFieldMonsterPosition(this.entity.origin.kind,"FaceUp",["Rule"]))):f="";else d!==void 0&&(f+=`${this.toFullString()}を発動。`);const h=hr(J,this.duel.log.openTransaction());f&&d&&i.writeChainBlockHeaderLog(d,f);for(const E of p)await E();const y={index:n.length,chainNumber:d,action:this,activator:i,targetChainBlock:r,isActivatedIn:this.entity.cell,isActivatedAt:this.duel.clock.getClone(),enableCellTypes:[...this.entity.info.isEffectiveIn],costInfo:{},state:"ready",dest:c,ignoreCosts:!1};if(this.definition.payCosts&&!l){const E=await this.definition.payCosts(y,n,u);if(!E)return;y.costInfo=E,u=!1}const v=await this.definition.prepare(y,n,u);if(v===void 0)return;const g={...v};g.selectedEntities=g.selectedEntities??[];g.chainBlockTags=[...g.chainBlockTags??[],...this.definition.fixedTags??[]];g.chainBlockTags.some(E=>E.startsWith("SpecialSummon"))&&g.chainBlockTags.push("SpecialSummon");g.chainBlockTags=g.chainBlockTags.getDistinct();if(Rn.some(E=>E===this.playType)){const E=v.nextChainBlockFilter??(()=>!0);g.nextChainBlockFilter=(ie,I)=>I.negateSummon&&E(ie,I)}const m=new lu(y.state);const T={...g,...y};Object.keys(T).filter(E=>E!=="state").forEach(E=>{m[E]=T[E]});const D=m;h.commit();return D}catch(pe){var q=pe,N=!0}finally{yr(J,q,N)}});o(this,"execute",async(i,a,r)=>{const n=(r==null?void 0:r.indirectly)??!1;if(i.action.isLikeContinuousSpell&&(i.action.entity.face==="FaceDown"||!i.action.entity.isOnField))return this.entity.info.isPending=!1,i.state="failed",!1;i.state="processing";let s=!1;if(!n&&i.chainNumber&&i.activator.writeChainBlockHeaderLog(i.chainNumber,`${i.action.toFullString()}の効果処理。`),i.isNegatedActivationBy)i.state="nagated",i.chainNumber&&i.activator.writeInfoLog(`チェーン${i.chainNumber}: ${i.action.toFullString()}を${i.isNegatedActivationBy.toFullString()}によって発動が無効にされた。`);else{let l=i.action.entity.isEffective,c="";if(l){if(i.isNegatedEffectBy)c=`チェーン${i.chainNumber}: ${i.action.toFullString()}を${i.isNegatedEffectBy.toFullString()}によって効果を無効にした。`,l=!1;else if(this.isWithChainBlock&&!i.enableCellTypes.includes(i.isActivatedIn.cellType)){const u=i.action.entity.moveLog.records.findLast(d=>d.face==="FaceDown"&&d.orientation==="Horizontal");l=(u&&i.activator.duel.clock.isSameChain(u.movedAt))??!1}}l?(s=await this.definition.execute(i,a),i.state=s?"done":"failed"):(i.state="nagated",i.chainNumber&&(c=c||`チェーン${i.chainNumber}: カードの効果が無効となっているため${i.action.toFullString()}の効果処理を行えない。`),i.activator.writeInfoLog(c)),await this.entity.determine(),this.isOnlyNTimesPerTurnIfFaceup>0?this.entity.counterHolder.incrementActionCountPerTurn(this):this.isOnlyNTimesIfFaceup>0&&this.entity.counterHolder.incrementActionCount(this),this.definition.settle(i,a)}return s});o(this,"directExecute",async(i,a,r)=>{const n=await this.prepare(i,void 0,a,[],!1,r);if(!n)throw new _("想定されない状態",this,i,r);return i.duel.chainBlockLog.push(n),await this.execute(n,[])});o(this,"isSame",i=>this.entity.origin.name===i.entity.origin.name&&this.title===i.title);o(this,"isSameGroup",i=>this.actionGroupName?this.entity.origin.name===i.entity.origin.name&&this.actionGroupName===i.actionGroupName:this.isSame(i));o(this,"calcChainBlockTagsForDestroy",(i,a)=>{if(!Gr.length)return[];const r=["Destroy"];Gr.length>1&&r.push("DestroyMultiple");const n=a.filter(u=>u.isOnFieldStrictly);n.length&&(r.push("DestroyOnField"),n.length>1&&r.push("DestroyMultipleOnField"));const s=n.filter(u=>u.kind==="Monster");s.length&&(r.push("DestroyMonsterOnField"),s.length>1&&r.push("DestroyMonstersOnField")),n.filter(u=>u.kind!=="Monster").length&&(r.push("DestroySpellTrapOnField"),s.length>1&&r.push("DestroySpellTrapsOnField"));const c=n.filter(u=>u.controller!==i);return c.length&&(r.push("DestroyOnOpponentField"),c.length>1&&r.push("DestroyMultipleOnOpponentField")),r});this.addhocMaterialLimitation=n??(()=>!0)}get definition(){return super.definition}get playType(){return this.definition.playType}get spellSpeed(){return this.definition.spellSpeed}get needsToPayRegularCosts(){return this.definition.needsToPayRegularCost??!1}get hasToTargetCards(){return this.definition.hasToTargetCards??!1}get isWithChainBlock(){return rr.some(i=>i===this.playType)}get isChainable(){return yc.some(i=>i===this.playType)}get isLikeContinuousSpell(){return this.definition.isLikeContinuousSpell||this.entity.isLikeContinuousSpell&&this.playType==="CardActivation"}get isNoticedForcibly(){return this.definition.isNoticedForcibly||this.isMandatory||this.definition.playType==="TriggerEffect"||this.definition.playType==="LingeringEffect"||this.negatePreviousBlock||this.negateSummon}get negatePreviousBlock(){return this.definition.negatePreviousBlock??!1}get negateSummon(){return this.definition.negateSummon??!1}get priorityForNPC(){return this.definition.priorityForNPC??Number.NaN}*getEnableMaterialPatterns(i){this.definition.getEnableMaterialPatterns&&(yield*this.definition.getEnableMaterialPatterns(i).filter(this.addhocMaterialLimitation))}};o(Ae,"createNew",(i,a)=>new Ae("AutoSeq",i,a)),o(Ae,"validateArrivalTrigger",(i,a)=>{const r=a.needsJustNow??!1;if(!i.hasBeenArrivalNow(a.arrivalReasons,a.battlePositions??k,r))return!1;const n=i.moveLog.latestArrivalRecord;if(!n)throw new _("想定されない状態");return!(a.needsByOpponent&&n.chooser===i.controller||a.needsByEffect&&!n.movedAs.includes("Effect")||a.causerFilter&&(!n.movedBy||!a.causerFilter(i,n.movedBy)))}),o(Ae,"validateDepartureTrigger",(i,a)=>{const r=a.needsJustNow??!1,n=i.moveLog.latestRecord;if(console.log(i.toString(),i.duel.clock.toFullString(),n.movedAt),!i.duel.clock.isPreviousChain(n.movedAt)||r&&!i.duel.clock.isPreviousProc(n.movedAt)||a.from&&!a.from.includes(i.wasMovedFrom.cellType)||i.cell.cellType==="Graveyard"&&i.wasMovedFrom.cellType==="Banished"||a.needsByDestory&&!n.movedAs.includes("Destroy"))return!1;if(a.needsByBattle||a.needsByEffect){let s=!1;if((a.needsByBattle&&n.movedAs.includes("Battle")||a.needsByEffect&&n.movedAs.includes("Effect"))&&(s=!0),!s)return!1}return!(a.needsByOpponent&&(i.wasMovedFrom.owner===i.controller.getOpponentPlayer()||n.actionOwner===i.controller&&!n.movedAs.includes("Battle"))||a.causerFilter&&(!n.movedBy||!a.causerFilter(i,n.movedBy)))}),o(Ae,"createDummyAction",(i,a,r,n,s)=>({action:Ae.createNew(i,{title:a,isMandatory:!1,executableCells:[],executablePeriods:[],executableDuelistTypes:[],playType:"Dammy",spellSpeed:"Dammy",getDests:()=>r,prepare:async()=>{},execute:async()=>!1,settle:async()=>!1}),dests:r,battlePosition:n,originSeq:(s==null?void 0:s.seq)??-1}));let St=Ae;const C=async()=>({selectedEntities:[]}),$t=async(t,e,i)=>(t.activator.payLp(i,t.action.entity),{lifePoint:i}),dd=t=>t.activator.canSendToGraveyard([t.action.entity])&&t.action.entity.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsCost",t.action),fd=async t=>(await t.action.entity.sendToGraveyard(["Cost"],t.action.entity,t.activator),{sendToGraveyard:[t.action.entity]}),gi=t=>t.activator.canTryBanish(t.action.entity,"BanishAsCost",t.action)&&t.action.entity.canBeBanished("BanishAsCost",t.activator,t.action.entity,t.action),da=async t=>(await t.action.entity.banish(["Cost"],t.action.entity,t.activator),{banish:[t.action.entity]}),pd=(t,e,i=1)=>e.filter(a=>t.activator.canTryBanish(a,"BanishAsCost",t.action)).filter(a=>a.canBeBanished("BanishAsCost",t.activator,t.action.entity,t.action)).length>=i,gd=async(t,e,i,a=1,r=1)=>{const n=e.filter(c=>t.activator.canTryBanish(c,"BanishAsCost",t.action)).filter(c=>c.canBeBanished("BanishAsCost",t.activator,t.action.entity,t.action)),s=a===r?a:void 0,l=await t.activator.waitSelectEntities(n,s,c=>i(c,t),"コストとして除外するカードを選択",!1)??[];return await S.banishManyForTheSameReason(l,["Cost"],t.action.entity,t.activator),{banish:l}},cr=(t,e=()=>!0,i=1,a=1)=>({canPayCosts:(...r)=>pd(r[0],t(...r),i),payCosts:(...r)=>gd(r[0],t(r[0],r[1]),e,i,a)}),Ut=(t,e,i=()=>!0,a=1)=>t.activator.getHandCell().cardEntities.filter(i).filter(r=>t.activator.canDiscard([r])).length>=a,jt=async(t,e,i=!1,a=()=>!0,r=1)=>({discard:await t.activator.discard(r,"Cost",a,t.action.entity,t.activator,t.activator,i)}),hd=(t,e)=>Ut(t,e,i=>t.action.entity===i,1),yd=(t,e,i=!1)=>jt(t,e,i,a=>t.action.entity===a),vd=(t,e)=>t.action.getTargetableEntities(t,e).filter(i=>i.isOnField).map(i=>i.cell),Yn=(t,e,...i)=>{const[a,r,n]=i;return t.activator.getCells(...r??Se).flatMap(l=>l.cardEntities).filter(l=>l.kind==="Monster").filter(l=>l.canBeReleased(t.activator,t.action.entity,["ReleaseAsCost"],t.action)).filter(l=>!a||a(t,e,l)).length>=(n??1)},md=(t=()=>!0,e=Se,i=1)=>({canPayCosts:(...a)=>Yn(...a,t,e,i),payCosts:async(a,r,n)=>{const s=a.activator.getCells(...e).flatMap(c=>c.cardEntities).filter(c=>c.kind==="Monster").filter(c=>c.canBeReleased(a.activator,a.action.entity,["ReleaseAsCost"],a.action)).filter(c=>t(a,r,c)),l=await a.activator.waitSelectEntities(s,i,c=>c.length===i,"コストとするモンスターを選択",n);if(l)return await S.releaseManyForTheSameReason(l,["Cost"],a.action.entity,a.activator),{release:l}}}),$r=(t,e,i,a={})=>{const{posList:r,cells:n}={posList:k,cells:t.activator.getMonsterZones(),...a};return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,i(t,e).filter(s=>s.kind==="Monster").filter(s=>s.canBeTargetOfEffect(t)).map(s=>({monster:s,posList:r,cells:n})),[],!1)},Sd=async(t,e,i=k,a=n=>n.length===1,r=1)=>{const n=t.activator.getMonsterZones(),s=t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,e.filter(u=>u.kind==="Monster").filter(u=>u.canBeTargetOfEffect(t)).map(u=>({monster:u,posList:i,cells:n})),[],!1),l=await t.activator.waitSelectEntities(s.map(u=>u.monster),r,a,"特殊召喚するモンスターを選択",!1)??[];if(!l.length)throw new F(t);const c=l.map(u=>u.cell.cellType).getDistinct().filter(u=>u==="Graveyard"||u==="Banished").map(u=>u==="Graveyard"?"SpecialSummonFromGraveyard":"SpecialSummonFromBanished");return{selectedEntities:l,chainBlockTags:c}},Jn=async(t,e,i)=>{const{posList:a,allOrNothing:r,cells:n}={posList:k,allOrNothing:!0,cells:t.activator.getMonsterZones(),...i},s=t.selectedEntities.filter(l=>!l.wasMovedAfter(t.isActivatedAt)).map(l=>({monster:l,posList:a,cells:n}));return r&&(s.length!==t.selectedEntities.length||n.length<s.length)?!1:(await t.activator.summonAll(t.activator,"SpecialSummon",["Effect"],t.action,s,[],!1,!1),!0)},In=async(t,e,i)=>{const a=(i==null?void 0:i.cells)??t.activator.getMonsterZones(),r=(i==null?void 0:i.posList)??k,n=e.map(s=>({monster:s,posList:r,cells:a}));return await t.activator.summonAll(t.activator,"SpecialSummon",["Effect"],t.action,n,[],!1,!1),!0},He=(t,e={})=>{const i=e.qty??1;return{hasToTargetCards:!0,getTargetableEntities:t,canExecute:(a,r,n)=>(!e.canExecute||e.canExecute(a,r,n))&&$r(a,r,t,e).length>=i,prepare:async(a,r,n)=>{const s=e.tags??[],l=e.message??"特殊召喚するモンスターを選択。",c=$r(a,r,t,e),u=await a.activator.waitSelectEntities(c.map(d=>d.monster),i,d=>d.length===i,l,n);if(u)return s.push(...u.map(d=>d.cell.cellType).getDistinct().filter(d=>d==="Graveyard"||d==="Banished").map(d=>d==="Graveyard"?"SpecialSummonFromGraveyard":"SpecialSummonFromBanished")),{selectedEntities:u,chainBlockTags:s,appendix:[`対象：${u.map(d=>d.toString()).join(", ")}`]}},execute:async(...a)=>{const r=await Jn(...a,e);return e.afterExecute?e.afterExecute(r,...a):r}}},De=(t,e={})=>{const i=(a,r,n)=>t(a,r,n).filter(s=>s.canBeTargetOfEffect(a));return{hasToTargetCards:!0,getTargetableEntities:t,canExecute:(...a)=>i(...a).length>0&&(!e.canExecute||e.canExecute(...a)),getDests:vd,prepare:async(a,r,n)=>{let s=[];const l=e.tags??[],c=e.message??(e.do==="Destroy"?"破壊するカードを選択。":"対象とするカードを選択。");if(a.dest)s=[a.dest.cardEntities[0]];else{const u=await a.activator.waitSelectEntity(i(a,r),c,n);if(!u)return;s=[u]}return e.do==="Destroy"&&l.push(...a.action.calcChainBlockTagsForDestroy(a.activator,s)),{selectedEntities:s,chainBlockTags:l,appendix:[`対象：${s.map(u=>u.toString()).join(", ")}`]}}}},_d=(t,e,i)=>({title:t,playType:"SystemPeriodAction",spellSpeed:"Normal",executableCells:Me,executablePeriods:e,executableDuelistTypes:Gt,isMandatory:!0,canExecute:a=>(i(a),!1),prepare:C,execute:async()=>!0,settle:async()=>!0}),b={title:"セット",playType:"SpellTrapSet",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isMandatory:!1,prepare:C,execute:async()=>!0,settle:async()=>!0},lt={title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone","FieldSpellZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],prepare:C,execute:async()=>!0,settle:async()=>!0},Cd=async(t,e,i,a,r)=>{const n=t.action.getTargetableEntities(t,e);if(!n)throw new _("CardAction定義が正しくない",t);const s=await t.activator.waitSelectEntity(n,"装備対象モンスターを選択",i);if(s)return t.action.entity.info.equipedBy=s,t.action.entity.info.effectTargets[t.action.seq]=[s],{chainBlockTags:a??[],selectedEntities:[s],prepared:r}},es=async(t,e,i=()=>!0)=>{const a=t.selectedEntities[0];return t.action.entity.info.equipedBy=a,t.action.entity.info.effectTargets[t.action.seq]=[a],i(a,t.action.entity)?(t.action.entity.info.equipedBy=a,t.action.entity.info.validateEquipOwner=i,a.info.equipEntities.push(t.action.entity),!0):(await t.action.entity.ruleDestroy(),t.activator.writeInfoLog(`${a.toString()}が装備条件を満たさなくなったため、${t.action.entity.toString()}は破壊された。`),!1)},Ft=(t=()=>!0)=>({title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getTargetableEntities:e=>e.action.entity.field.getMonstersOnFieldStrictly().filter(i=>i.face==="FaceUp").filter(i=>i.canBeTargetOfEffect(e)).filter(i=>t(i,e.action.entity)),getDests:(e,i)=>e.action.getTargetableEntities(e,i).filter(a=>a.isOnFieldAsMonsterStrictly).map(a=>a.cell),prepare:(e,i,a)=>Cd(e,i,a,[],void 0),execute:es,settle:async()=>!0});function*Td(){yield{name:"連合軍",actions:[lt,b],continuousEffects:[Ri("発動","Spell",t=>[ne.createContinuous("発動",e=>e.isSpawnedBy.isOnFieldStrictly&&e.isSpawnedBy.face==="FaceUp",t,(e,i)=>i.controller===e.isSpawnedBy.controller&&i.types.includes("Warrior")&&i.isOnFieldStrictly&&i.face==="FaceUp","attack","wip","Addition",(e,i,a)=>{if(!e.isEffective||i.face==="FaceDown")return a;const r=e.controller.getMonstersOnField().filter(n=>n.face==="FaceUp").filter(n=>n.types.includes("Warrior")||n.types.includes("Spellcaster")).length;return a+r*200})])]}}const ts=Object.freeze(Object.defineProperty({__proto__:null,default:Td},Symbol.toStringTag,{value:"Module"}));function*wd(){const t=[{name:"リビングデッドの呼び声",pos:"Attack",filter:()=>!0},{name:"エンジェル・リフト",pos:"Attack",filter:e=>(e.lvl??12)<3},{name:"正統なる血統",pos:"Attack",filter:e=>{var i;return!!((i=e.status.monsterCategories)!=null&&i.includes("Normal"))}},{name:"蘇りし魂",pos:"Defense",filter:e=>{var i;return!!((i=e.status.monsterCategories)!=null&&i.includes("Normal"))}},{name:"リミット・リバース",pos:"Attack",filter:e=>(e.atk??9999)<=1e3,targetImmdAction:async(e,i)=>{if(i){if(!i.isOnFieldAsMonsterStrictly||i.face==="FaceDown")return"RemoveMe";if(e.entity.isEffective&&i.battlePosition==="Defense")return e.entity.controller.writeInfoLog(`${i.toString()}が守備表示になったため、${e.entity.toString()}とともに破壊される。`),await S.tryMarkForDestroy([i,e.entity],{action:e,activator:e.entity.controller,selectedEntities:[i]}),"RemoveMe"}}}];for(const e of t)yield{name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard","SpecialSummon"],...He(i=>i.activator.getGraveyard().cardEntities.filter(a=>a.kind==="Monster").filter(e.filter).filter(a=>a.canBeTargetOfEffect(i)),{posList:["Attack"],afterExecute:async(i,a)=>!i||!a.selectedEntities.length?!1:(a.action.entity.info.effectTargets[a.action.seq]=a.selectedEntities,!0)}),settle:async()=>!0},b],immediatelyActions:[{title:"自壊",executableCells:Me,executablePeriods:le,executableFaces:sr,execute:async(i,a,r)=>{if(e.targetImmdAction&&a&&Object.values(i.entity.info.effectTargets).flatMap(l=>l).includes(a)){e.targetImmdAction(i,a,r);return}if(console.log(i.entity.toString(),i,a,r),a!==i.entity||(console.log(i.entity.toString(),i,a,r),!r))return;console.log(i.entity.toString(),i,a,r);const n=Object.values(r.info.effectTargets).flatMap(l=>l);if(!n.length)return;console.log(i.entity.toString(),i,a,r);const s=n[0];s.isOnFieldAsMonsterStrictly&&s.face==="FaceUp"&&r.status.isEffective&&r.info.isEffectiveIn.includes(r.cell.cellType)&&(i.entity.controller.writeInfoLog(`${i.entity.toString()}がフィールドを離れたため、対象モンスター${s.toString()}を破壊。`),await S.tryMarkForDestroy([s],{action:i,activator:i.entity.controller,selectedEntities:n}))}}]}}const is=Object.freeze(Object.defineProperty({__proto__:null,default:wd},Symbol.toStringTag,{value:"Module"}));function*Ed(){yield{name:"昇天の黒角笛",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Counter",executableCells:["SpellAndTrapZone"],executablePeriods:le,executableDuelistTypes:["Controller"],negateSummon:!0,fixedTags:["NegateSpecialSummon"],canExecute:t=>(t.targetChainBlock&&t.targetChainBlock.action.playType==="SpecialSummon"&&t.targetChainBlock.activator!==t.activator&&t.activator.duel.field.getPendingMonstersOnField().length===1)??!1,prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=S.negateSummonMany(t.action.entity,t.activator);return await S.tryDestroy(e,t),!0},settle:async()=>!0},b]}}const as=Object.freeze(Object.defineProperty({__proto__:null,default:Ed},Symbol.toStringTag,{value:"Module"}));function*bd(){yield*[{name:"団結の力",filter:t=>t.isMonster&&t.face==="FaceUp",rate:800},{name:"魔導師の力",filter:t=>t.kind==="Spell"||t.kind==="Trap",rate:500}].map(t=>({name:t.name,actions:[Ft(),b],continuousEffects:[fi(t.name,"Spell",e=>e.info.equipedBy?[e.info.equipedBy]:[],e=>["attack","defense"].map(i=>ne.createContinuous("発動",a=>a.isSpawnedBy.isOnFieldStrictly&&a.isSpawnedBy.face==="FaceUp",e,(a,r)=>r.isOnFieldStrictly&&r.face==="FaceUp",i,"wip","Addition",(a,r,n)=>{if(!a.isEffective)return n;const s=a.controller.getEntiteisOnField().filter(t.filter).length;return n+s*t.rate})))]})),yield{name:"早すぎた埋葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard","PayLifePoint"],canPayCosts:t=>t.activator.lp>=800,payCosts:(t,e)=>$t(t,e,800),...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>e.canBeTargetOfEffect(t)),{posList:["Attack"],afterExecute:async(t,e,i)=>t?es(e,i,(a,r)=>{var n;return(n=r.info.effectTargets[e.action.seq])==null?void 0:n.includes(a)}):(await e.action.entity.ruleDestroy(),!1)}),settle:async()=>!0},b],immediatelyActions:[{title:"自壊",executableCells:["SpellAndTrapZone",...ca],executablePeriods:le,executableFaces:["FaceUp"],execute:async(t,e,i)=>{if(e!==t.entity||!i)return;const a=i.info.equipedBy;a&&a.isOnFieldStrictly&&a.face==="FaceUp"&&i.status.isEffective&&i.info.isEffectiveIn.includes(i.cell.cellType)&&!e.cell.isSpellTrapZoneLikeCell&&e.moveLog.latestRecord.movedAs.some(r=>r.endsWith("Destroy"))&&(t.entity.controller.writeInfoLog(`${t.entity.toString()}が破壊されたため、対象モンスター${a.toString()}を破壊。`),await S.tryMarkForDestroy([a],{action:t,activator:t.entity.controller,selectedEntities:[a]}))}}]},yield{name:"幻惑の巻物",actions:[Ft(),b],continuousEffects:[]}}const rs=Object.freeze(Object.defineProperty({__proto__:null,default:bd},Symbol.toStringTag,{value:"Module"}));function*kd(){yield*[{name:"伝説の剣",attr:void 0,monType:"Warrior",atk:200,def:200},{name:"秘術の書",attr:void 0,monType:"Spellcaster",atk:200,def:200},{name:"ポセイドンの力",attr:void 0,monType:"Aqua",atk:200,def:200},{name:"紫水晶",attr:void 0,monType:"Zombie",atk:200,def:200},{name:"猛獣の歯",attr:void 0,monType:"Beast",atk:200,def:200},{name:"機械改造工場",attr:void 0,monType:"Machine",atk:200,def:200},{name:"体温の上昇",attr:void 0,monType:"Reptile",atk:200,def:200},{name:"魔菌",attr:void 0,monType:"Plant",atk:200,def:200},{name:"闇・エネルギー",attr:void 0,monType:"Fiend",atk:200,def:200},{name:"レーザー砲機甲鎧",attr:void 0,monType:"Insect",atk:200,def:200},{name:"銀の弓矢",attr:void 0,monType:"Fairy",atk:200,def:200},{name:"電撃鞭",attr:void 0,monType:"Thunder",atk:200,def:200},{name:"ドラゴンの秘宝",attr:void 0,monType:"Dragon",atk:200,def:200},{name:"フォロー・ウィンド",attr:void 0,monType:"WingedBeast",atk:200,def:200},{name:"魔性の月",attr:void 0,monType:"BeastWarrior",atk:200,def:200},{name:"エルフの光",attr:"Light",monType:void 0,atk:400,def:-200},{name:"覚醒",attr:"Earth",monType:void 0,atk:400,def:-200},{name:"灼熱の槍",attr:"Fire",monType:void 0,atk:400,def:-200},{name:"突風の扇",attr:"Wind",monType:void 0,atk:400,def:-200},{name:"はがねの甲羅",attr:"Water",monType:void 0,atk:400,def:-200},{name:"闇の破神剣",attr:"Dark",monType:void 0,atk:400,def:-200},{name:"火器付機甲鎧",attr:void 0,monType:"Insect",atk:700,def:0},{name:"サラマンドラ",attr:"Fire",monType:void 0,atk:700,def:0},{name:"シャイン・キャッスル",attr:"Light",monType:void 0,atk:700,def:0}].map(t=>({name:t.name,actions:[Ft(e=>(!t.attr||e.attr.includes(t.attr))&&(!t.monType||e.types.includes(t.monType))),b],continuousEffects:[fi(t.name,"Spell",e=>e.info.equipedBy?[e.info.equipedBy]:[],e=>{const i=[];return t.atk!==0&&i.push(["attack",t.atk]),t.def!==0&&i.push(["defense",t.def]),i.map(([a,r])=>ne.createContinuous("発動",n=>n.isSpawnedBy.isOnFieldStrictly&&n.isSpawnedBy.face==="FaceUp",e,(n,s)=>s.isOnFieldStrictly&&s.face==="FaceUp"&&(!t.monType||s.types.includes(t.monType))&&(!t.attr||s.attr.includes(t.attr)),a,"wip","Addition",(n,s,l)=>n.isEffective?l+r:l))})]}))}const ns=Object.freeze(Object.defineProperty({__proto__:null,default:kd},Symbol.toStringTag,{value:"Module"}));function*Dd(){yield{name:"チキンレース",actions:[lt,b,{title:"②効果発動",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["FieldSpellZone"],executablePeriods:["main1","main2"],executableDuelistTypes:Gt,executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,canPayCosts:t=>t.activator.lp>=1e3,canExecute:t=>t.action.entity.face==="FaceUp",payCosts:(t,e)=>$t(t,e,1e3),prepare:async(t,e,i)=>{let a=[{seq:0,text:"●デッキから１枚ドローする。",tags:["Draw"]},{seq:1,text:"●このカードを破壊する。",tags:t.action.calcChainBlockTagsForDestroy(t.activator,[t.action.entity])},{seq:2,text:"●相手は1000LP回復する。",tags:[]}];t.activator.getDeckCell().cardEntities.length||(a=a.filter(n=>n.seq));const r=await t.activator.waitSelectText(a,"使用する効果を選択",i);if(r!==void 0)return t.data=r.seq,{selectedEntities:[],chainBlockTags:r.tags,nextChainBlockFilter:()=>!1}},execute:async t=>{if(t.data===0)await t.activator.draw(1,t.action.entity,t.activator);else if(t.data===1)await S.tryDestroy([t.action.entity],t);else if(t.data===2)t.activator.getOpponentPlayer().heal(1e3,t.action.entity);else throw new _("値が正しくない。",t,t.data);return!0},settle:async()=>!0}],continuousEffects:[Ac("①ダメージ無効","Spell",t=>[t.controller,t.controller.getOpponentPlayer()].map(e=>e.entity),t=>[new $n({title:"①ダメージ無効",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:()=>!0,calcType:"zero_typeA",filter:(e,i,a,r)=>e.isSpawnedBy.cell.cellType!=="FieldSpellZone"?{}:r.lp>=r.getOpponentPlayer().lp?{}:(a.writeInfoLog(`${r.profile.name}はチキンレースの効果でダメージを受けない。`),{zero_typeA:!0})})])]}}const ss=Object.freeze(Object.defineProperty({__proto__:null,default:Dd},Symbol.toStringTag,{value:"Module"}));function*xd(){yield*[{name:"草原",up:["Warrior","BeastWarrior"],down:[]},{name:"森",up:["Insect","Plant","Beast","BeastWarrior"],down:[]},{name:"山",up:["Dragon","WingedBeast","Thunder"],down:[]},{name:"荒野",up:["Dinosaur","Zombie","Rock"],down:[]},{name:"海",up:["Aqua","SeaSerpent","Fish"],down:["Machine","Pyro"]},{name:"闇",up:["Fiend","Spellcaster"],down:["Fairy"]}].map(t=>({name:t.name,actions:[lt,b],continuousEffects:[Ri("発動","Spell",e=>["attack","defense"].flatMap(i=>["up","down"].map(a=>ne.createContinuous("発動",r=>r.isSpawnedBy.isOnFieldStrictly&&r.isSpawnedBy.face==="FaceUp",e,(r,n)=>n.isOnFieldStrictly&&n.face==="FaceUp"&&(n.status.monsterCategories??!1)&&t[a].union(n.types).length>0,i,"wip","Addition",(r,n,s)=>!r.isEffective||n.face==="FaceDown"?s:s+(a==="up"?200:-200)))))]})),yield*[{name:"バーニングブラッド",attr:"Fire"},{name:"ウォーターワールド",attr:"Water"},{name:"ガイアパワー",attr:"Earth"},{name:"シャインスパーク",attr:"Light"},{name:"ダークゾーン",attr:"Dark"},{name:"デザートストーム",attr:"Wind"}].map(t=>({name:t.name,actions:[lt,b],continuousEffects:[Ri("発動","Spell",e=>["attack","defense"].flatMap(i=>ne.createContinuous("発動",a=>a.isSpawnedBy.isOnFieldStrictly&&a.isSpawnedBy.face==="FaceUp",e,(a,r)=>r.isOnFieldStrictly&&r.face==="FaceUp"&&r.attr.includes(t.attr),i,"wip","Addition",(a,r,n)=>!a.isEffective||r.face==="FaceDown"?n:n+(i==="attack"?500:-400))))]}))}const ls=Object.freeze(Object.defineProperty({__proto__:null,default:xd},Symbol.toStringTag,{value:"Module"}));function*Ad(){const t=[{name:"カルボナーラ戦士",materialInfos:[{type:"Name",cardName:"マグネッツ１号"},{type:"Name",cardName:"マグネッツ２号"}]},{name:"クリッチー",materialInfos:[{type:"Name",cardName:"クリッター"},{type:"Name",cardName:"黒き森のウィッチ"}]},{name:"スケルゴン",materialInfos:[{type:"Name",cardName:"メデューサの亡霊"},{type:"Name",cardName:"暗黒の竜王"}]},{name:"スチームジャイロイド",materialInfos:[{type:"Name",cardName:"ジャイロイド"},{type:"Name",cardName:"スチームロイド"}]},{name:"バラに棲む悪霊",materialInfos:[{type:"Name",cardName:"グレムリン"},{type:"Name",cardName:"スネーク・パーム"}]},{name:"バロックス",materialInfos:[{type:"Name",cardName:"キラーパンダ"},{type:"Name",cardName:"ガーゴイル"}]},{name:"フュージョニスト",materialInfos:[{type:"Name",cardName:"プチテンシ"},{type:"Name",cardName:"スリーピィ"}]},{name:"ブラキオレイドス",materialInfos:[{type:"Name",cardName:"二頭を持つキング・レックス"},{type:"Name",cardName:"屍を貪る竜"}]},{name:"プラグティカル",materialInfos:[{type:"Name",cardName:"トラコドン"},{type:"Name",cardName:"フレイム・ヴァイパー"}]},{name:"マブラス",materialInfos:[{type:"Name",cardName:"タイホーン"},{type:"Name",cardName:"邪炎の翼"}]},{name:"ミノケンタウロス",materialInfos:[{type:"Name",cardName:"ミノタウルス"},{type:"Name",cardName:"ケンタウロス"}]},{name:"暗黒火炎龍",materialInfos:[{type:"Name",cardName:"火炎草"},{type:"Name",cardName:"プチリュウ"}]},{name:"炎の騎士 キラー",materialInfos:[{type:"Name",cardName:"モンスター・エッグ"},{type:"Name",cardName:"スティング"}]},{name:"炎の剣士",materialInfos:[{type:"Name",cardName:"炎を操る者"},{type:"Name",cardName:"伝説の剣豪 ＭＡＳＡＫＩ"}]},{name:"音楽家の帝王",materialInfos:[{type:"Name",cardName:"黒き森のウィッチ"},{type:"Name",cardName:"ハイ・プリーステス"}]},{name:"金色の魔象",materialInfos:[{type:"Name",cardName:"メデューサの亡霊"},{type:"Name",cardName:"ドラゴン・ゾンビ"}]},{name:"紅陽鳥",materialInfos:[{type:"Name",cardName:"セイント・バード"},{type:"Name",cardName:"スカイ・ハンター"}]},{name:"轟きの大海蛇",materialInfos:[{type:"Name",cardName:"魔法のランプ"},{type:"Name",cardName:"ひょうすべ"}]},{name:"黒き人食い鮫",materialInfos:[{type:"Name",cardName:"シーカーメン"},{type:"Name",cardName:"キラー・ブロッブ"},{type:"Name",cardName:"海原の女戦士"}]},{name:"砂の魔女",materialInfos:[{type:"Name",cardName:"岩石の巨兵"},{type:"Name",cardName:"エンシェント・エルフ"}]},{name:"裁きの鷹",materialInfos:[{type:"Name",cardName:"冠を戴く蒼き翼"},{type:"Name",cardName:"コケ"}]},{name:"裁きを下す女帝",materialInfos:[{type:"Name",cardName:"女王の影武者"},{type:"Name",cardName:"響女"}]},{name:"朱雀",materialInfos:[{type:"Name",cardName:"赤き剣のライムンドス"},{type:"Name",cardName:"炎の魔神"}]},{name:"深海に潜むサメ",materialInfos:[{type:"Name",cardName:"神魚"},{type:"Name",cardName:"舌魚"}]},{name:"水陸両用バグロス",materialInfos:[{type:"Name",cardName:"陸戦型 バグロス"},{type:"Name",cardName:"海を守る戦士"}]},{name:"戦場の死装束",materialInfos:[{type:"Name",cardName:"音女"},{type:"Name",cardName:"斬首の美女"}]},{name:"魔装騎士ドラゴネス",materialInfos:[{type:"Name",cardName:"アーメイル"},{type:"Name",cardName:"一眼の盾竜"}]},{name:"魔導騎士ギルティア",materialInfos:[{type:"Name",cardName:"冥界の番人"},{type:"Name",cardName:"王座の守護者"}]},{name:"雷神の怒り",materialInfos:[{type:"Name",cardName:"エンゼル・イヤーズ"},{type:"Name",cardName:"メガ・サンダーボール"}]},{name:"カイザー・ドラゴン",materialInfos:[{type:"Name",cardName:"砦を守る翼竜"},{type:"Name",cardName:"フェアリー・ドラゴン"}]},{name:"スカルビショップ",materialInfos:[{type:"Name",cardName:"悪魔の知恵"},{type:"Name",cardName:"魔天老"}]},{name:"デビル・ボックス",materialInfos:[{type:"Name",cardName:"マーダーサーカス"},{type:"Name",cardName:"ドリーム・ピエロ"}]},{name:"ヒューマノイド・ドレイク",materialInfos:[{type:"Name",cardName:"ワームドレイク"},{type:"Name",cardName:"ヒューマノイド・スライム"}]},{name:"ブラック・デーモンズ・ドラゴン",materialInfos:[{type:"Name",cardName:"デーモンの召喚"},{type:"Name",cardName:"真紅眼の黒竜"}]},{name:"マスター・オブ・ＯＺ",materialInfos:[{type:"Name",cardName:"ビッグ・コアラ"},{type:"Name",cardName:"デス・カンガルー"}]},{name:"メテオ・ブラック・ドラゴン",materialInfos:[{type:"Name",cardName:"真紅眼の黒竜"},{type:"Name",cardName:"メテオ・ドラゴン"}]},{name:"召喚獣メガラニカ",materialInfos:[{type:"Name",cardName:"召喚師アレイスター"},{type:"Name",cardName:"地属性モンスター"}]},{name:"聖女ジャンヌ",materialInfos:[{type:"Name",cardName:"慈悲深き修道女"},{type:"Name",cardName:"堕天使マリー"}]},{name:"青眼の究極竜",materialInfos:[{type:"Name",cardName:"青眼の白龍"},{type:"Name",cardName:"青眼の白龍"},{type:"Name",cardName:"青眼の白龍"}]},{name:"千年竜",materialInfos:[{type:"Name",cardName:"時の魔術師"},{type:"Name",cardName:"ベビードラゴン"}]},{name:"双頭の雷龍",materialInfos:[{type:"Name",cardName:"サンダー・ドラゴン"},{type:"Name",cardName:"サンダー・ドラゴン"}]},{name:"迷宮の魔戦車",materialInfos:[{type:"Name",cardName:"ギガテック・ウルフ"},{type:"Name",cardName:"キャノン・ソルジャー"}]},{name:"竜騎士ガイア",materialInfos:[{type:"Name",cardName:"暗黒騎士ガイア"},{type:"Name",cardName:"カース・オブ・ドラゴン"}]},{name:"アクア・ドラゴン",materialInfos:[{type:"Name",cardName:"フェアリー・ドラゴン"},{type:"Name",cardName:"海原の女戦士"}]},{name:"アンデット・ウォーリアー",materialInfos:[{type:"Name",cardName:"ワイト"},{type:"Name",cardName:"格闘戦士アルティメーター"}]},{name:"カオス・ウィザード",materialInfos:[{type:"Name",cardName:"ホーリー・エルフ"},{type:"Name",cardName:"黒魔族のカーテン"}]},{name:"クワガー・ヘラクレス",materialInfos:[{type:"Name",cardName:"クワガタ・アルファ"},{type:"Name",cardName:"ヘラクレス・ビートル"}]},{name:"ソウル・ハンター",materialInfos:[{type:"Name",cardName:"ランプの魔人"},{type:"Name",cardName:"異次元からの侵略者"}]},{name:"デス・バード",materialInfos:[{type:"Name",cardName:"タクヒ"},{type:"Name",cardName:"髑髏の寺院"}]},{name:"フラワー・ウルフ",materialInfos:[{type:"Name",cardName:"シルバー・フォング"},{type:"Name",cardName:"魔界のイバラ"}]},{name:"フレイム・ゴースト",materialInfos:[{type:"Name",cardName:"ワイト"},{type:"Name",cardName:"マグマン"}]},{name:"マリン・ビースト",materialInfos:[{type:"Name",cardName:"水の魔導師"},{type:"Name",cardName:"ベヒゴン"}]},{name:"メカ・ザウルス",materialInfos:[{type:"Name",cardName:"ミスター・ボンバー"},{type:"Name",cardName:"二頭を持つキング・レックス"}]},{name:"メタル・ドラゴン",materialInfos:[{type:"Name",cardName:"鋼鉄の巨神像"},{type:"Name",cardName:"レッサー・ドラゴン"}]},{name:"レア・フィッシュ",materialInfos:[{type:"Name",cardName:"フュージョニスト"},{type:"Name",cardName:"恍惚の人魚"}]},{name:"無の畢竟 オールヴェイン",materialInfos:[{type:"Filter",filter:e=>{var i;return((i=e.status.monsterCategories)==null?void 0:i.includes("Normal"))??!1}},{type:"Filter",filter:e=>{var i;return((i=e.status.monsterCategories)==null?void 0:i.includes("Normal"))??!1}}]},{name:"テセウスの魔棲物",materialInfos:[{type:"Filter",filter:e=>{var i;return((i=e.status.monsterCategories)==null?void 0:i.includes("Tuner"))??!1}},{type:"Filter",filter:e=>{var i;return((i=e.status.monsterCategories)==null?void 0:i.includes("Tuner"))??!1}}]},{name:"ジェムナイト・ジルコニア",materialInfos:[{type:"Filter",filter:e=>{var i;return((i=e.status.nameTags)==null?void 0:i.includes("ジェムナイト"))??!1}},{type:"Filter",filter:e=>e.types.includes("Rock")??!1}]},{name:"メタルフォーゼ・アダマンテ",materialInfos:[{type:"Filter",filter:e=>{var i;return((i=e.status.nameTags)==null?void 0:i.includes("メタルフォーゼ"))??!1}},{type:"Filter",filter:e=>(e.atk??9999)<=2500}]},{name:"メタルフォーゼ・カーディナル",materialInfos:[{type:"Filter",filter:e=>{var i;return((i=e.status.nameTags)==null?void 0:i.includes("メタルフォーゼ"))??!1}},{type:"Filter",filter:e=>(e.atk??9999)<=3e3},{type:"Filter",filter:e=>(e.atk??9999)<=3e3}]}];for(const e of t)yield{name:e.name,actions:[],fusionMaterialInfos:e.materialInfos}}const os=Object.freeze(Object.defineProperty({__proto__:null,default:Ad},Symbol.toStringTag,{value:"Module"})),Pd=async(t,e,i=!1)=>{if(!t.action.entity.lvl)return;if(t.action.entity.lvl<5)return{};const a=t.activator.getAvailableMonsterZones();let r=t.activator.getMonstersOnField().filter(u=>u.canBeReleased(t.activator,t.action.entity,["AdvanceSummonRelease"],t.action));const n=t.activator.getExtraMonsterZones(),s=t.action.entity.lvl<7?1:2;n.length>=s&&(r=r.filter(u=>u.cell.cellType!=="ExtraMonsterZone"));const l=await t.activator.waitSelectEntities(r,s,u=>(i||u.length>0)&&(s<0||u.length===s)&&(a.length>0||u.some(d=>d.cell.cellType==="ExtraMonsterZone")),"リリースするモンスターを選択",i)??[];return l.length?(await S.releaseManyForTheSameReason(l,["Cost","AdvanceSummonRelease","Rule"],t.action.entity,t.activator),{summonMaterialInfos:l.map(u=>({material:u,cell:u.cell}))}):void 0},Md=async t=>{var r;const e=["Rule","NormalSummon"];let i="NormalSummon";(r=t.costInfo.summonMaterialInfos)!=null&&r.length&&(i="AdvanceSummon",e.push("AdvanceSummon"));const a=t.dest?[t.dest]:t.activator.getAvailableMonsterZones();return ot(t,i,e,["Attack","Set"],a)},ot=async(t,e,i,a,r)=>{let n=t.dest?[t.dest]:r;return n||(n=t.activator.getMonsterZones(),t.action.entity.cell.cellType==="ExtraDeck"&&n.push(...t.activator.duel.field.getCells("ExtraMonsterZone"))),await t.activator.summon(e,i,t.action,t.action.entity,a,n,t.costInfo.summonMaterialInfos??[],!1),{selectedEntities:[]}},ct=async t=>{var e,i;return t.action.entity.info.isRebornable=!((e=t.action.entity.origin.monsterCategories)!=null&&e.includes("RegularSpecialSummonOnly")),await t.action.entity.determine(),(i=t.costInfo.summonMaterialInfos)==null||i.map(a=>a.material).forEach(a=>a.onUsedAsMaterial(t,t.action.entity)),!0},Fd={title:"通常召喚",isMandatory:!1,playType:"NormalSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canPayCosts:t=>{if(!t.action.entity.lvl)return!1;if(t.action.entity.lvl<5)return t.activator.getEnableSummonList(t.activator,"NormalSummon",["Rule"],t.action,[{monster:t.action.entity,posList:["Attack","Set"],cells:t.activator.getMonsterZones()}],[],!1).length>0;const e=t.activator.getMonstersOnField().filter(r=>r.canBeReleased(t.activator,t.action.entity,["AdvanceSummonRelease"],t.action)),i=t.action.entity.lvl<7?1:2;return e.length<i?!1:e.getAllOnOffPattern().filter(r=>r.length===i).some(r=>t.activator.getEnableSummonList(t.activator,"AdvanceSummon",["Rule","NormalSummon"],t.action,[{monster:t.action.entity,posList:["Attack","Set"],cells:t.activator.getMonsterZones()}],r.map(n=>({material:n,cell:n.cell})),!1).length)},meetsConditions:t=>t.activator.info.ruleNormalSummonCount<t.activator.info.maxRuleNormalSummonCount&&!!t.action.entity.lvl,getDests:t=>t.action.entity.lvl?t.action.entity.lvl>4?[]:t.activator.getEnableSummonList(t.activator,"NormalSummon",["Rule"],t.action,[{monster:t.action.entity,posList:["Attack","Set"],cells:t.activator.getMonsterZones()}],[],!1).flatMap(i=>i.cells).getDistinct():[],payCosts:Pd,prepare:Md,execute:ct,settle:async()=>!0},Ot=(t,e,i,a)=>{const r=t.activator.getMonsterZones();return t.action.entity.cell.cellType==="ExtraDeck"&&r.push(...t.activator.getAvailableExtraMonsterZones()),t.activator.getEnableSummonList(t.activator,"SpecialSummon",a,t.action,[{monster:t.action.entity,posList:e,cells:r}],i,!1).flatMap(s=>s.cells)},he=(...t)=>Ot(...t).length>0,Od={title:"攻撃宣言",isMandatory:!1,playType:"DeclareAttack",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["b1Battle","b2Battle"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,getTargetableEntities:t=>t.action.entity.getAttackTargets(),canExecute:(t,e)=>!t.activator.isTurnPlayer||!t.action.entity.isMonster||!t.action.entity.status.canAttack||t.action.entity.info.attackDeclareCount>0||t.action.entity.battlePosition!=="Attack"?!1:t.action.getTargetableEntities(t,e).length>0,getDests:(t,e)=>t.action.getTargetableEntities(t,e).map(i=>i.cell),prepare:async(t,e)=>{var r,n;if(t.action.entity.info.attackDeclareCount>0||t.action.entity.battlePosition!=="Attack")return;const i=t.action.getTargetableEntities(t,e);if(i.length===0)throw new _("攻撃対象の選択肢がない状態で実行された。",t);let a=i[0];for(;i.length!==1;){if((r=t.dest)!=null&&r.targetForAttack){a=t.dest.entities.find(c=>c.entityType==="Duelist")??((n=t.dest)==null?void 0:n.targetForAttack);break}if(t.activator.duelistType==="NPC"){let l=t.activator.selectAttackTargetForNPC(t.action.entity,t.action);l||(t.activator.duel.log.warn("NPCの攻撃対象選択に失敗したため、ランダムに攻撃対象を選択。"),l=i.randomPick());break}const s=await t.activator.waitSelectEntity(i,"攻撃対象を選択。",!0);if(!s)return;a=s;break}return t.action.entity.field.duel.declareAttack(t.action.entity,a,!1),{selectedEntities:[a]}},execute:async()=>!0,settle:async()=>!0},Nd={title:"戦闘",isMandatory:!1,playType:"Battle",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["b1DDmgCalc","b2DDmgCalc"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,canExecute:t=>!!t.activator.duel.targetForAttack&&t.activator.duel.attackingMonster===t.action.entity&&t.action.entity.isMonster,prepare:async t=>{if(t.activator.duel.attackingMonster!==t.action.entity)throw new _("canExecuteの判定が正しく行われなかった",t,t.activator.duel.attackingMonster,t.activator.duel.targetForAttack);if(!t.activator.duel.targetForAttack)throw new _("canExecuteの判定が正しく行われなかった",t,t.activator.duel.attackingMonster,t.activator.duel.targetForAttack);return{selectedEntities:[t.activator.duel.targetForAttack]}},execute:async()=>!0,settle:async()=>!0},cs=async t=>{if(!(t.action.entity.info.battlePotisionChangeCount>0||!t.activator.isTurnPlayer))return await t.action.entity.setBattlePosition(t.action.entity.battlePosition==="Attack"?"Defense":"Attack",["Rule"],t.action.entity,t.activator),t.action.entity.info.battlePotisionChangeCount++,{selectedEntities:[]}},Bd={title:"反転召喚",isMandatory:!1,playType:"FlipSummon",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:t=>t.action.entity.info.battlePotisionChangeCount===0&&t.action.entity.info.attackDeclareCount===0&&t.activator.isTurnPlayer&&t.action.entity.face==="FaceDown"&&t.action.entity.isMonster,prepare:cs,execute:async t=>(await t.action.entity.determine(),!0),settle:async()=>!0},Ld={title:"表示形式変更",isMandatory:!1,playType:"ChangeBattlePosition",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],meetsConditions:t=>t.action.entity.info.battlePotisionChangeCount===0&&t.action.entity.info.attackDeclareCount===0&&t.action.entity.status.canBattlePositionChange,canExecute:t=>t.activator.isTurnPlayer&&t.action.entity.face==="FaceUp"&&t.action.entity.isOnFieldAsMonsterStrictly,prepare:cs,execute:async t=>(await t.action.entity.determine(),!0),settle:async()=>!0},Pe=async(t,e,i=["Attack","Defense"])=>{const a=t.activator.getMonsterZones();return t.action.entity.wasMovedAfter(t.isActivatedAt)?!1:(await t.activator.summon("SpecialSummon",["Effect"],t.action,t.action.entity,i,a,[],!1),!0)},us=[Od,Nd],ji=[...us,Ld,Bd],Ur=[Fd,...ji],Ga=(t,e,i,a,r,n,s,l,c,u,d)=>{const f={posList:c,cells:u},p={posList:[],cells:[]};return e!==s||!s.isMonster||!s.origin.monsterCategories?f:s.origin.monsterCategories.includes("NormalSummonOnly")?r.includes("NormalSummon")||r.includes("AdvanceSummon")?f:p:s.origin.monsterCategories.includes("SpecialSummon")?s.origin.monsterCategories.includes("FreeReborn")?r.includes("Effect")?f:p:s.isInTrashCell&&!s.origin.monsterCategories.includes("RegularSpecialSummonOnly")?s.info.isRebornable?f:p:r.union(zn).length?f:s.origin.monsterCategories.includes("RegularSpecialSummonOnly")?d?f:p:f:f},Ta={},qd=t=>(Ta[t]||(Ta[t]={title:`戦闘破壊耐性(${t})`,playType:"ContinuousEffect",isMandatory:!0,executableCells:["MonsterZone"],executablePeriods:["b1DDmgCalc","b2DDmgCalc"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurnIfFaceup:t,isApplicableTo:(e,i,a)=>a.includes(e.entity)?i!=="Battle"?[]:[e.entity]:[],substitute:async(e,i,a)=>a.includes(e.entity)?i!=="Battle"?[]:e.entity.isEffective?(e.entity.controller.writeInfoLog(`${e.entity.toString()}は１ターンに１度だけ戦闘では破壊されない。`),[e.entity]):[]:[]}),Ta[t]),fa=t=>t.activator.canRelease([t.action.entity])&&t.action.entity.canBeReleased(t.activator,t.action.entity,["ReleaseAsCost"],t.action),pa=async t=>(await t.action.entity.release(["Cost"],t.action.entity,t.activator),{release:[t.action.entity]}),ds=t=>({title:"シンクロ召喚",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerChain:1,meetsConditions:e=>!e.activator.isTurnPlayer,canExecute:e=>e.activator.getExtraDeck().cardEntities.filter(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Synchro")}).flatMap(i=>i.actions).filter(i=>i.playType==="SpecialSummon").map(i=>({index:-1,chainNumber:void 0,action:i,activator:e.activator,targetChainBlock:void 0,isActivatedIn:i.entity.cell,costInfo:{},state:"unloaded",dest:void 0,ignoreCosts:!1})).some(i=>i.action.getEnableMaterialPatterns(i).some(a=>{const r=a.map(n=>n.material);return r.every(n=>n.controller===e.activator)&&r.every(n=>n.isOnFieldAsMonsterStrictly)&&r.includes(e.action.entity)})),prepare:C,execute:async e=>{if(e.activator!==e.action.entity.controller||e.activator.getMonstersOnField().filter(s=>s.lvl!==void 0).length<2)return!1;const i=e.activator.getExtraDeck().cardEntities.filter(s=>{var l;return(l=s.status.monsterCategories)==null?void 0:l.includes("Synchro")}).flatMap(s=>s.actions).filter(s=>s.playType==="SpecialSummon").map(s=>({index:-1,chainNumber:void 0,action:s,activator:e.activator,targetChainBlock:void 0,isActivatedIn:s.entity.cell,isActivatedAt:e.isActivatedAt,costInfo:{},state:"unloaded",dest:void 0,ignoreCosts:!1})).filter(s=>s.action.getEnableMaterialPatterns(s).some(l=>{const c=l.map(u=>u.material);return c.every(u=>u.controller===e.activator)&&c.every(u=>u.isOnFieldAsMonsterStrictly)&&c.includes(e.action.entity)})).map(s=>s.action.entity).getDistinct();if(!i.length)return!1;const a=await e.activator.waitSelectEntities(i,1,s=>s.length===1,"シンクロ召喚するモンスターを選択。",!1)??[];if(!a.length)throw new _("想定されない状態",e);const r=a[0].actions.find(s=>s.playType==="SpecialSummon");if(!r)throw new _("想定されない状態",e);const n=r.getClone(s=>{const l=s.map(c=>c.material);return l.every(c=>c.controller===e.activator)&&l.every(c=>c.isOnFieldAsMonsterStrictly)&&l.includes(e.action.entity)});return e.nextActionInfo={action:n,originSeq:n.seq},!0},settle:async()=>!0,...t}),Rd=ri("直接攻撃","Monster",t=>[t],t=>[new oe({title:"直接攻撃",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:(e,i)=>e.isSpawnedBy===i,statusCalculator:()=>({canDirectAttack:!0})})]),wa={title:"融合素材代用",appliableCellTypes:["MonsterZone","ExtraMonsterZone","Hand","Graveyard "],appliableDuelPeriodKeys:le,faceList:["FaceUp","FaceDown"],canStart:()=>!0,start:async t=>{const e=new oe({title:"融合素材代用",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:(i,a,r)=>(a.isSpawnedBy.isEffective&&(r.fusionSubstitute=!0),r)});return t.statusOperatorBundle.push(e),{targets:[t],seq:e.seq}},finish:async(t,e)=>{e.targets.forEach(i=>i.statusOperatorBundle.removeItem(e.seq))}},Hd=(t,e,i,a)=>{if(!t.action.entity.origin.link||t.action.entity.origin.link<i.length)return;let r=i.map(s=>({material:s,cell:s.cell,link:1}));if(t.action.entity.origin.link>i.length){if(i.every(c=>(c.origin.link??1)<2))return;const s=[r];i.filter(c=>(c.origin.link??1)>1).forEach(c=>{[...s].forEach(u=>{s.push([...u.filter(d=>d.material!==c),{material:c,cell:c.cell,link:c.origin.link??1}])})});const l=s.find(c=>c.reduce((u,d)=>u+d.link,0)===t.action.entity.origin.link);if(!l)return;r=l}if(!a(i)||!t.activator.getEnableSummonList(t.activator,"LinkSummon",["Rule","SpecialSummon"],t.action,[{monster:t.action.entity,posList:["Attack"],cells:e}],r,!1).length)return;if(t.activator.getAvailableExtraMonsterZones().length)return r;const n=t.activator.duel.field.getCells("ExtraMonsterZone").map(s=>s.cardEntities[0]).filter(s=>s);if(n.filter(s=>s.controller===t.activator).length&&n.filter(s=>s.controller===t.activator).length===i.filter(s=>s.cell.cellType==="ExtraMonsterZone").length||t.activator.getMonsterZones().flatMap(s=>s.linkArrowSources).some(s=>!i.includes(s))||t.activator.duel.field.canExtraLink(t.action.entity,r))return r};function*Zd(t,e=()=>!0){let i=[...t.activator.getMonstersOnField().filter(r=>r.battlePosition!=="Set"),...t.activator.getHandCell().entities.filter(r=>r.origin.kind==="Monster")];if(i.every(r=>!r.status.allowHandLink)&&(i=i.filter(r=>r.cell.isPlayFieldCell)),i.length<1)return;const a=[...t.activator.getMonsterZones(),...t.activator.duel.field.getAvailableExtraMonsterZones()];yield*i.getAllOnOffPattern().filter(r=>r.some(n=>n.status.allowHandLink)||r.every(n=>n.isOnFieldAsMonsterStrictly)).map(r=>Hd(t,a,r,e)??[]).filter(r=>r.length)}const Gd=async(t,e,i)=>{var c;const a=t.action.getEnableMaterialPatterns(t).toArray(),r=a.map(u=>({infos:u,materialSeqList:u.map(d=>d.material.seq).sort()}));let n=a[0].map(u=>u.material);if(a.length>1){const u=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await t.activator.waitSelectEntities(u,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"リンク素材とするモンスターを選択",i);if(console.log(d),!d)return;n=d}const s=n.map(u=>u.seq).sort(),l=(c=r.find(u=>s.length===u.materialSeqList.length&&s.every((d,f)=>d===u.materialSeqList[f])))==null?void 0:c.infos;if(!l)throw new _("想定されない状態",t,n);return await S.sendManyToGraveyardForTheSameReason(n,["LinkMaterial","Cost","Rule","SpecialSummonMaterial"],t.action.entity,t.activator),{summonMaterialInfos:l}},ur=(t=()=>!0)=>({title:"リンク召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:e=>Zd(e,t),canPayCosts:e=>e.action.getEnableMaterialPatterns(e).some(i=>i.length),canExecute:e=>!e.ignoreCosts||e.activator.getAvailableExtraMonsterZones().length+e.activator.getAvailableMonsterZones().length>0,payCosts:Gd,prepare:e=>ot(e,"LinkSummon",["Rule","SpecialSummon","LinkSummon"],["Attack"]),execute:ct,settle:async()=>!0});function*$d(){yield*[{name:"ＬＡＮフォリンクス",validator:t=>t.length===2},{name:"トラフィックゴースト",validator:t=>t.length===3},{name:"天威の鬼神",validator:t=>t.length>1&&t.some(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Link")})},{name:"天威の拳僧",validator:t=>t.every(e=>{var i,a;return((i=e.status.nameTags)==null?void 0:i.includes("天威"))&&!((a=e.status.monsterCategories)!=null&&a.includes("Link"))})},{name:"電影の騎士ガイアセイバー",validator:t=>t.length>1}].map(t=>({name:t.name,actions:[ur(t.validator)]}))}const fs=Object.freeze(Object.defineProperty({__proto__:null,default:$d},Symbol.toStringTag,{value:"Module"}));function*Ud(){yield*["サイバー・ドラゴン","六武衆のご隠居","アンノウン・シンクロン"].map(t=>({name:t,actions:[{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:t==="アンノウン・シンクロン"?1:void 0,canExecute:e=>{const i=e.action.entity.field.getMonstersOnFieldStrictly();return i.length>0&&i.every(a=>a.controller!==e.activator)&&he(e,k,[],["Rule"])},getDests:e=>Ot(e,k,[],["Rule"]),prepare:e=>ot(e,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ct,settle:async()=>!0}]})),yield{name:"ジャンク・フォアード",actions:[{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:t=>t.activator.getMonstersOnField().length===0&&he(t,k,[],["Rule"]),getDests:t=>Ot(t,k,[],["Rule"]),prepare:t=>ot(t,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ct,settle:async()=>!0}]},yield{name:"ゾンビキャリア",actions:[{title:"①自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:t=>t.activator.getHandCell().cardEntities.length>0,canExecute:t=>he(t,k,[],["Effect"]),payCosts:async(t,e,i)=>{const a=t.activator.getHandCell().cardEntities,r=await t.activator.waitSelectEntity(a,"デッキトップに戻すカードを一枚選択。",i);if(!r)throw new F(t);return await r.returnToDeck("Top",["Cost"],t.action.entity,t.activator),{returnToDeck:[r]}},prepare:async()=>({selectedEntities:[]}),execute:async t=>await Pe(t)?(t.action.entity.statusOperatorBundle.push(new oe({title:"除外予定",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:(e,i)=>i.isOnFieldAsMonsterStrictly&&i.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})),!0):!1,settle:async()=>!0}]},yield{name:"グローアップ・バルブ",actions:[{title:"①自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerDuel:1,fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:t=>t.activator.getDeckCell().cardEntities.length>0,getDests:t=>Ot(t,k,[],["Effect"]),canExecute:t=>he(t,k,[],["Effect"]),payCosts:async t=>{const e=t.activator.getDeckCell().cardEntities[0];return await t.activator.getDeckCell().cardEntities[0].sendToGraveyard(["Cost"],t.action.entity,t.activator),{sendToGraveyard:[e]}},prepare:async()=>({selectedEntities:[]}),execute:t=>Pe(t),settle:async()=>!0}]},yield{name:"終末の騎士",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon","SpecialSummon","FlipSummon"]},canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.attr.includes("Dark")),prepare:async t=>{const e=["SendToGraveyardFromDeck"];return t.action.entity.moveLog.latestRecord.movedAs.includes("NormalSummon")?e.push("IfNormarlSummonSucceed"):t.action.entity.moveLog.latestRecord.movedAs.includes("SpecialSummon")&&e.push("IfSpecialSummonSucceed"),{selectedEntities:[],chainBlockTags:e}},execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.attr.includes("Dark"));if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送るモンスターを選択",!1);if(!i)throw new F(t);return await i.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]},yield{name:"マスマティシャン",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon"]},fixedTags:["IfNormarlSummonSucceed","SendToGraveyardFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.lvl&&e.lvl<5),prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.lvl&&a.lvl<5);if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送るモンスターを選択",!1);if(!i)throw new F(t);return await i.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"②ドロー",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",needsByBattle:!0,needsByDestory:!0},fixedTags:["Draw"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),!0),settle:async()=>!0}]},yield{name:"伝説の白石",actions:[{title:"①サーチ",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:le,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure"},fixedTags:["SearchFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.nm==="青眼の白龍")&&t.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=t.activator.getDeckCell().cardEntities.find(i=>i.nm==="青眼の白龍");return e?(await e.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]};for(const t of[{name:"灰流うらら",chainBlockTags:["Draw","SearchFromDeck","SendToGraveyardFromDeck","SpecialSummonFromDeck"]},{name:"屋敷わらし",chainBlockTags:["BanishFromGraveyard","SpecialSummonFromGraveyard","AddToHandFromGraveyard"]}])yield{name:t.name,actions:[{title:"①無効化",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["Hand"],executablePeriods:x,executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,negatePreviousBlock:!0,fixedTags:["NegateCardEffect"],canPayCosts:e=>e.activator.canDiscard([e.action.entity]),canExecute:e=>(e.targetChainBlock&&e.targetChainBlock.chainBlockTags.union(t.chainBlockTags).length>0)??!1,payCosts:async e=>(await e.action.entity.discard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[e.action.entity]}),prepare:C,execute:async(e,i)=>{const a=i[e.index-1];return a.isNegatedEffectBy=e.action,!0},settle:async()=>!0}]};for(const t of["翻弄するエルフの剣士","ロードランナー","氷結界の修験者"])yield{name:t,actions:[],continuousEffects:[nr("①戦闘破壊耐性","Monster",e=>[e],e=>[st.createContinuous("①戦闘破壊耐性",()=>!0,e,()=>!0,["BattleDestroy"],(i,a,r)=>!e.isEffective||(r.atk??0)<1900?!0:(e.duel.log.info(`${e.toString()}は攻撃力1900以上のモンスターとの先頭では破壊されない。`,e.controller),!1))])]}}const ps=Object.freeze(Object.defineProperty({__proto__:null,default:Ud},Symbol.toStringTag,{value:"Module"})),jd=(t,e,i,a,r,n)=>{if(!t.action.entity.origin.level||a.some(u=>!u.lvl)||a.map(u=>u.lvl??0).reduce((u,d)=>u+d,0)!==t.action.entity.origin.level)return;const s=a.filter(u=>{var d;return(d=u.status.monsterCategories)==null?void 0:d.some(f=>f==="Tuner")}),l=a.filter(u=>{var d;return(d=u.status.monsterCategories)==null?void 0:d.every(f=>f!=="Tuner")});if(!r(s)||!n(l))return;const c=[...s.map(u=>({material:u,cell:u.cell,isAsTuner:!0})),...l.map(u=>({material:u,cell:u.cell,isAsTuner:!1}))];if(t.activator.getEnableSummonList(t.activator,"SynchroSummon",["Rule","SpecialSummon"],t.action,[{monster:t.action.entity,posList:e,cells:i}],c,!1).length)return c};function*zd(t,e=a=>a.length===1,i=a=>a.length>0){let a=[...t.activator.getMonstersOnField().filter(s=>s.battlePosition!=="Set"),...t.activator.getHandCell().cardEntities.filter(s=>s.origin.kind==="Monster")];if(a.every(s=>!s.status.allowHandSynchro)&&(a=a.filter(s=>s.cell.isPlayFieldCell)),a.length<2)return;const r=[...t.activator.getMonsterZones(),...t.activator.duel.field.getCells("ExtraMonsterZone")],n=["Attack","Defense"];yield*a.getAllOnOffPattern().filter(s=>s.some(l=>l.status.allowHandSynchro)||s.every(l=>l.isOnFieldAsMonsterStrictly)).map(s=>jd(t,n,r,s,e,i)??[]).filter(s=>s.length)}const Vd=async(t,e,i)=>{var c;const a=t.action.getEnableMaterialPatterns(t).toArray(),r=a.map(u=>({infos:u,materialSeqList:u.map(d=>d.material.seq).sort()}));let n=a[0].map(u=>u.material);if(a.length>1){const u=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await t.activator.waitSelectEntities(u,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"シンクロ素材とするモンスターを選択",i);if(!d)return;n=d}const s=n.map(u=>u.seq).sort(),l=(c=r.find(u=>s.length===u.materialSeqList.length&&s.every((d,f)=>d===u.materialSeqList[f])))==null?void 0:c.infos;if(!l)throw new _("想定されない状態",t,n);return await S.sendManyToGraveyardForTheSameReason(n,["SynchroMaterial","Cost","Rule","SpecialSummonMaterial"],t.action.entity,t.activator),{summonMaterialInfos:l}},me=(t=i=>i.length===1,e=i=>i.length>0)=>({title:"シンクロ召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:i=>zd(i,t,e),canPayCosts:i=>i.action.getEnableMaterialPatterns(i).some(a=>a.length),canExecute:i=>!i.ignoreCosts||i.activator.getAvailableExtraMonsterZones().length+i.activator.getAvailableMonsterZones().length>0,payCosts:Vd,prepare:i=>ot(i,"SynchroSummon",["Rule","SpecialSummon","SynchroSummon"],["Attack","Defense"]),execute:ct,settle:async()=>!0}),jr=t=>({title:"射出",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],needsToPayRegularCost:!0,fixedTags:["DamageToOpponent"],canPayCosts:e=>e.activator.getMonstersOnField().filter(t.filter).some(i=>i.canBeReleased(e.activator,e.action.entity,["ReleaseAsCost"],e.action)),payCosts:async(e,i,a)=>{const r=await e.activator.waitSelectEntities(e.activator.getMonstersOnField().filter(t.filter).filter(n=>n.canBeReleased(e.activator,e.action.entity,["ReleaseAsCost"],e.action)),t.qty,n=>n.length===t.qty,"リリースするモンスターを選択。",a);if(r)return e.data=t.calcDamage(e,r),await S.releaseManyForTheSameReason(r,["Cost","Release"],e.action.entity,e.activator),{release:r}},prepare:C,execute:async e=>{if(!Gn(e.data))throw new _("値が正しくない。",e,e.data);return e.activator.getOpponentPlayer().effectDamage(e.data,e),!0},settle:async()=>!0,...t.otherActionProps});function*Wd(){const t=[{name:"キャノン・ソルジャー",qty:1,filter:()=>!0,calcDamage:()=>500,otherActionProps:{},otherActions:[]},{name:"アマゾネスの射手",qty:2,filter:()=>!0,calcDamage:()=>1200,otherActionProps:{},otherActions:[]},{name:"メガキャノン・ソルジャー",qty:2,filter:()=>!0,calcDamage:()=>1500,otherActionProps:{},otherActions:[]},{name:"プリーステス・オーム",qty:1,filter:e=>e.attr.includes("Dark"),calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"対空放花",qty:1,filter:e=>e.types.includes("Insect"),calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"人投げトロール",qty:1,filter:e=>{var i,a;return!!((i=e.status.monsterCategories)!=null&&i.includes("Normal")&&!((a=e.status.monsterCategories)!=null&&a.includes("Token")))},calcDamage:()=>800,otherActionProps:{},otherActions:[]},{name:"墓守の大筒持ち",qty:1,filter:e=>{var i;return!!((i=e.status.nameTags)!=null&&i.includes("墓守")&&e.nm!=="墓守の大筒持ち")},calcDamage:()=>700,otherActionProps:{},otherActions:[]},{name:"カタパルト・ウォリアー",qty:1,filter:e=>{var i;return!!((i=e.status.nameTags)!=null&&i.includes("ジャンク"))},calcDamage:(e,i)=>i.map(a=>a.origin.attack??0).reduce((a,r)=>a+r,0),otherActionProps:{isOnlyNTimesPerTurnIfFaceup:1},otherActions:[me()]},{name:"ダーク・ダイブ・ボンバー",qty:1,filter:e=>!!(e.lvl&&e.lvl>0),calcDamage:(e,i)=>i.map(a=>a.lvl??0).reduce((a,r)=>a+r,0)*200,otherActionProps:{isOnlyNTimesPerTurn:1,executablePeriods:["main1"]},otherActions:[me()]}];for(const e of t)yield{name:e.name,actions:[jr(e),...e.otherActions]};yield{name:"トゥーン・キャノン・ソルジャー",actions:[jr({qty:1,filter:()=>!0,calcDamage:()=>500,otherActionProps:{}})],immediatelyActions:[{title:"自壊",executableCells:["MonsterZone"],executablePeriods:le.filter(e=>e!=="b1DBeforeDmgCalc"&&e!=="b2DBeforeDmgCalc"&&e!=="b1DDmgCalc"&&e!=="b2DDmgCalc"),execute:async(e,i,a)=>{i&&a&&a.status.name==="トゥーン・ワールド"&&(i.moveLog.latestRecord.movedAs.every(r=>!r.endsWith("Destroy"))||(e.entity.controller.writeInfoLog(`${i.toString()}が破壊されたため、${e.entity.toString()}は破壊される。`),S.tryMarkForDestroy([e.entity],{activator:e.entity.controller,action:e,selectedEntities:[]}),e.entity.info.isDying=!0,e.entity.info.causeOfDeath=["Effect","Destroy"]))}}],continuousEffects:[ri("召喚酔い","Monster",e=>[e],e=>[new oe({title:"召喚酔い",validateAlive:i=>{const a=i.isSpawnedBy.moveLog.latestArrivalRecord;return!a||!i.duel.clock.isSameTurn(a.movedAt)?!1:a.movedAs.union(["NormalSummon","FlipSummon","SpecialSummon"]).length>0},isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:()=>({canAttack:!1})})]),ri("直接攻撃","Monster",e=>[e],e=>[new oe({title:"直接攻撃",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:e,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:i=>i.controller.getEntiteisOnField().filter(a=>a.nm==="トゥーン・ワールド").some(a=>a.face==="FaceUp")?i.controller.getOpponentPlayer().getMonstersOnField().filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Toon")}).some(a=>a.face==="FaceUp")?{}:{canDirectAttack:!0}:{}})])]}}const gs=Object.freeze(Object.defineProperty({__proto__:null,default:Wd},Symbol.toStringTag,{value:"Module"}));function*Qd(){yield*["ラージマウス","レインボー・フラワー","レッグル","女王の影武者","人造人間７号"].map(t=>({name:t,actions:[],continuousEffects:[Rd]}))}const hs=Object.freeze(Object.defineProperty({__proto__:null,default:Qd},Symbol.toStringTag,{value:"Module"}));function*Xd(){yield*[{name:"キラー・ポテト",filter:t=>t.attr.includes("Dark")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Effect"],executableCells:["Graveyard"]},{name:"キラー・トマト",filter:t=>t.attr.includes("Dark")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"巨大ネズミ",filter:t=>t.attr.includes("Earth")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"グリズリーマザー",filter:t=>t.attr.includes("Water")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"シャインエンジェル",filter:t=>t.attr.includes("Light")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ドラゴンフライ",filter:t=>t.attr.includes("Wind")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ＵＦＯタートル",filter:t=>t.attr.includes("Fire")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"荒野の女戦士",filter:t=>t.attr.includes("Earth")&&t.types.includes("Warrior")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"リトル・トルーパー",filter:t=>t.types.includes("Warrior")&&(t.lvl??9999)<3,qtyList:[1],posList:["Set"],destroyTypes:["Battle"],executableCells:["Graveyard","Banished"]},{name:"破面竜",filter:t=>t.types.includes("Warrior")&&(t.def??9999)<=1500,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"共鳴虫",filter:t=>t.types.includes("Insect")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ピラミッド・タートル",filter:t=>t.types.includes("Zombie")&&(t.def??9999)<=2e3,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ユーフォロイド",filter:t=>t.types.includes("Machine")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ヘル・セキュリティ",filter:t=>t.types.includes("Fiend")&&(t.lvl??9999)===1,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ガスタ・イグル",filter:t=>(t.status.nameTags??[]).includes("ガスタ")&&(t.status.monsterCategories??[]).includes("Tuner"),qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"幻影の魔術士",filter:t=>(t.status.nameTags??[]).includes("ＨＥＲＯ")&&(t.atk??9999)<=1e3,qtyList:[1],posList:["Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ジェネクス・サーチャー",filter:t=>(t.status.nameTags??[]).includes("ジェネクス")&&(t.atk??9999)<=1500,qtyList:[1],posList:["Attack"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"紫炎の足軽",filter:t=>(t.status.nameTags??[]).includes("六武衆")&&(t.lvl??12)<=3,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"スレイブ・エイプ",filter:t=>(t.status.nameTags??[]).includes("剣闘獣")&&(t.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ゼンマイハニー",filter:t=>(t.status.nameTags??[]).includes("ゼンマイ")&&(t.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ＸＸ－セイバー エマーズブレイド",filter:t=>(t.status.nameTags??[]).includes("Ｘ－セイバー")&&(t.lvl??12)<=4,qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"軍隊竜",filter:t=>t.nm==="軍隊竜",qtyList:[1],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"アサルト・ガンドッグ",filter:t=>t.nm==="アサルト・ガンドッグ",qtyList:[1,2,3,4,5],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]},{name:"ハイエナ",filter:t=>t.nm==="ハイエナ",qtyList:[1,2,3,4,5],posList:["Attack","Defense"],destroyTypes:["Battle"],executableCells:["Graveyard"]}].map(t=>({name:t.name,actions:[{title:"①リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:t.executableCells,executablePeriods:t.destroyTypes.includes("Effect")?[...x,...R]:["b1DEnd","b2DEnd"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],meetsConditions:e=>e.action.entity.wasMovedAtPreviousChain&&e.action.entity.moveLog.latestRecord.movedAs.includes("Destroy")&&e.action.entity.moveLog.latestRecord.movedAs.union(t.destroyTypes).length>0,canExecute:e=>{const i=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getDeckCell().cardEntities.filter(t.filter).filter(r=>r.kind==="Monster").filter(r=>r.canBeTargetOfEffect(e)).map(r=>({monster:r,posList:t.posList,cells:i})),[],!1).length>0},prepare:async()=>({selectedEntities:[]}),execute:async e=>{const i=e.activator.getDeckCell().cardEntities.filter(t.filter),a=e.activator.getMonsterZones();return e.activator.summonMany(e.activator,"SpecialSummon",["Effect"],e.action,i.map(n=>({monster:n,posList:t.posList,cells:a})),[],!1,t.qtyList.length>1?void 0:t.qtyList[0],n=>t.qtyList.includes(n.length),!1)?(e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]}))}const ys=Object.freeze(Object.defineProperty({__proto__:null,default:Xd},Symbol.toStringTag,{value:"Module"}));function*Kd(){yield{name:"死者蘇生",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],...He(e=>e.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Monster").filter(i=>i.canBeTargetOfEffect(e))),settle:async()=>!0},b]};for(const e of[{name:"大嵐",cellTypes:qi,isOnlyEnemies:!1},{name:"ハーピィの羽根帚",cellTypes:qi,isOnlyEnemies:!0},{name:"ブラック・ホール",cellTypes:U,isOnlyEnemies:!1},{name:"サンダー・ボルト",cellTypes:U,isOnlyEnemies:!0}])yield{name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["DestroyOnField"],canExecute:i=>{let a=i.action.entity.field.getCells(...e.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return e.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),a.length>0},prepare:async i=>{let a=i.action.entity.field.getCells(...e.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return e.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),{selectedEntities:[],chainBlockTags:i.action.calcChainBlockTagsForDestroy(i.activator,a)}},execute:async i=>{let a=i.action.entity.field.getCells(...e.cellTypes).flatMap(r=>r.cardEntities).filter(r=>r!==i.action.entity);return e.isOnlyEnemies&&(a=a.filter(r=>r.controller!==i.activator)),await S.tryDestroy(a,i),!0},settle:async()=>!0},b]};yield{name:"ハリケーン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["BounceToHand"],canExecute:e=>e.action.entity.field.getCells("SpellAndTrapZone","FieldSpellZone").flatMap(i=>i.cardEntities).some(i=>i!==e.action.entity),prepare:async()=>({selectedEntities:[]}),execute:async(e,i)=>{const a=i.map(n=>n.action).filter(n=>n.playType==="CardActivation").map(n=>n.entity).filter(n=>n.face==="FaceUp"),r=e.action.entity.field.getCells("SpellAndTrapZone","FieldSpellZone").flatMap(n=>n.cardEntities).filter(n=>!a.includes(n));return await S.returnManyToHandForTheSameReason(r,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},b]};const t=e=>e.activator.duel.field.getWaitingRoomCell().cardEntities.find(i=>i.parent===e.action.entity)??H.createTokenEntity(e.activator,e.action.entity,{name:"セキュリティトークン",actions:ji,staticInfo:{name:"セキュリティトークン",kind:"Monster",monsterCategories:["Normal","Token"],level:4,attack:2e3,defense:2e3,attributes:["Light"],types:["Cyberse"],wikiEncodedName:"%A5%BB%A5%AD%A5%E5%A5%EA%A5%C6%A5%A3%A5%C8%A1%BC%A5%AF%A5%F3"}});yield{name:"ワンタイム・パスコード",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummon","SpecialSummonToken"],canExecute:e=>{const i=t(e),a=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,[{monster:i,posList:["Defense"],cells:a}],[],!1).length>0},prepare:async()=>({selectedEntities:[]}),execute:async e=>{const i=t(e),a=e.activator.getMonsterZones();return!!await e.activator.summon("SpecialSummon",["Effect"],e.action,i,["Defense"],a,[],!1)},settle:async()=>!0},b]},yield{name:"ワン・フォー・ワン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],priorityForNPC:40,canPayCosts:e=>{if(e.activator.getDeckCell().cardEntities.every(i=>(i.lvl??12)>1)){if(e.activator.getHandCell().cardEntities.every(i=>(i.lvl??12)>1)||e.activator.getHandCell().cardEntities.filter(i=>i.kind==="Monster").length<2)return!1}else if(e.activator.getHandCell().cardEntities.filter(i=>i.kind==="Monster").length===0)return!1;return!0},canExecute:e=>{let i=[...e.activator.getDeckCell().cardEntities.filter(s=>(s.lvl??12)===1),...e.activator.getHandCell().cardEntities.filter(s=>(s.lvl??12)===1)];const a=e.activator.getHandCell().cardEntities;(a.length<2||!e.ignoreCosts)&&(i=i.filter(s=>!a.includes(s)));const r=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,i.map(s=>({monster:s,posList:k,cells:r})),[],!1).length>0},payCosts:async(e,i,a)=>{const r=[...e.activator.getDeckCell().cardEntities.filter(u=>(u.lvl??12)===1),...e.activator.getHandCell().cardEntities.filter(u=>(u.lvl??12)===1)],n=e.activator.getMonsterZones(),s=e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,r.map(u=>({monster:u,posList:k,cells:n})),[],!1);let l=e.activator.getHandCell().cardEntities.filter(u=>u.kind==="Monster");s.length===1&&(l=l.filter(u=>!s.map(d=>d.monster).includes(u)));const c=await e.activator.waitSelectEntity(l,"墓地へ送るモンスターを選択",a);if(!c)throw new F(e);return await c.sendToGraveyard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[c]}},prepare:async()=>({selectedEntities:[]}),execute:async e=>{const i=[...e.activator.getDeckCell().cardEntities.filter(n=>n.lvl===1),...e.activator.getHandCell().cardEntities.filter(n=>n.lvl===1)],a=e.activator.getMonsterZones();return await e.activator.summonOne(e.activator,"SpecialSummon",["Effect"],e.action,i.map(n=>({monster:n,posList:k,cells:a})),[],!1,!1)?(e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},b]},yield{name:"封印の黄金櫃",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["BanishFromDeck"],canExecute:e=>e.activator.getDeckCell().cardEntities.some(i=>e.activator.canTryBanish(i,"BanishAsEffect",e.action)),prepare:async()=>({selectedEntities:[]}),execute:async e=>{const i=e.activator.getDeckCell().cardEntities.filter(n=>e.activator.canTryBanish(n,"BanishAsEffect",e.action)),a=await e.activator.waitSelectEntity(i,"除外するカードを選択。",!1);if(!a)throw new F(e);return(await S.tryBanish("BanishAsEffect",[a],e)).forEach(n=>n.counterHolder.removeAll("GoldSarcophagus")),!0},settle:async()=>!0},_d("回収カウント進行",["stanby"],e=>{e.activator.isTurnPlayer&&e.action.entity.field.getCells("Banished").flatMap(i=>i.cardEntities).filter(i=>i.moveLog.latestRecord.movedBy===e.action.entity).filter(i=>i.moveLog.latestRecord.actionOwner===e.activator).forEach(i=>{i.counterHolder.add("GoldSarcophagus",1,e.action.entity);const a=i.counterHolder.getQty("GoldSarcophagus",e.action.entity);a<3&&e.activator.duel.log.info(`${i.toString()}のターンカウント：${a-1}⇒${a}`)})}),{title:"回収",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["stanby"],executableDuelistTypes:Gt,canExecute:e=>e.activator.isTurnPlayer&&e.action.entity.field.getCells("Banished").flatMap(i=>i.cardEntities).filter(i=>i.moveLog.latestRecord.movedBy===e.action.entity).filter(i=>i.moveLog.latestRecord.actionOwner===e.activator).some(i=>i.counterHolder.getQty("GoldSarcophagus")===2),prepare:C,execute:async e=>{const i=e.action.entity.field.getCells("Banished").flatMap(r=>r.cardEntities).filter(r=>r.moveLog.latestRecord.movedBy===e.action.entity).filter(r=>r.moveLog.latestRecord.actionOwner===e.activator).filter(r=>r.counterHolder.getQty("GoldSarcophagus")===2);if(!i.length)throw new _("想定されない状態",e);let a=i[0];if(i.length>1){const r=await e.activator.waitSelectEntity(i,"回収するカードを選択。",!1);if(!r)throw new F(e);a=r}return await a.addToHand(["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},b]},yield{name:"魔の試着部屋",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],canPayCosts:e=>e.activator.lp>=800,canExecute:e=>e.activator.getDeckCell().cardEntities.length>0&&e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getDeckCell().cardEntities.filter(i=>i.kind==="Monster").filter(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Normal")}).filter(i=>(i.lvl??12)<4).map(i=>({monster:i,posList:k,cells:e.activator.getMonsterZones()})),[],!1).length>0,payCosts:(e,i)=>$t(e,i,800),prepare:async()=>({selectedEntities:[]}),execute:async e=>{if(e.activator.getDeckCell().cardEntities.length<4)return!1;const i=await S.excavateManyFromDeck(e.activator,4,["Effect"],e.action.entity,e.activator),a=i.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Normal")}).filter(r=>(r.lvl??12)<4);if(a.length){const r=e.activator.getMonsterZones(),n=a.length>r.length?r.length:a.length;await e.activator.summonMany(e.activator,"SpecialSummon",["Effect","Excavate"],e.action,a.map(s=>({monster:s,cells:r,posList:k})),[],!1,n,s=>s.length===n,!1)}return await S.sendManyToGraveyardForTheSameReason(a.filter(r=>!r.isOnFieldAsMonsterStrictly),["Effect","Excavate"],e.action.entity,e.activator),await S.returnManyToDeckForTheSameReason("Random",i.filter(r=>r.cell.cellType==="Deck"),["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0},b]}}const vs=Object.freeze(Object.defineProperty({__proto__:null,default:Kd},Symbol.toStringTag,{value:"Module"}));function*Yd(){yield{name:"強欲な壺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:20,fixedTags:["Draw"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>1&&t.activator.canDraw&&t.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async t=>(await t.activator.draw(2,t.action.entity,t.activator),!0),settle:async()=>!0},b]},yield{name:"貪欲な壺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","ReturnToDeckFromGraveyard"],priorityForNPC:30,canExecute:t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>e.canBeTargetOfEffect(t)).length>4&&t.activator.canDraw&&t.activator.canAddToHandFromDeck,prepare:async t=>{const e=await t.activator.waitSelectEntities(t.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Monster").filter(i=>i.canBeTargetOfEffect(t)),5,i=>i.length===5,"デッキに戻すモンスターを選択。",!1);if(e)return{selectedEntities:e}},execute:async t=>t.selectedEntities.some(e=>e.wasMovedAtCurrentChain)?!1:(await S.returnManyToDeckForTheSameReason("Random",t.selectedEntities,["Effect"],t.action.entity,t.activator),await t.activator.draw(2,t.action.entity,t.activator),!0),settle:async()=>!0},b]},yield{name:"天使の施し",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],priorityForNPC:30,canExecute:t=>t.activator.getDeckCell().cardEntities.length>2&&t.activator.canDraw&&t.activator.canAddToHandFromDeck&&t.activator.status.canDiscardAsEffect,prepare:async()=>({selectedEntities:[]}),execute:async t=>(await t.activator.draw(3,t.action.entity,t.activator),await t.activator.discard(2,"Effect",()=>!0,t.action.entity,t.activator),!0),settle:async()=>!0},b]},yield{name:"成金ゴブリン",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],priorityForNPC:20,canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw&&t.activator.canAddToHandFromDeck,prepare:async()=>({selectedEntities:[]}),execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),t.action.entity.field.duel.clock.incrementProcSeq(),t.activator.getOpponentPlayer().heal(1e3,t.action.entity),!0),settle:async()=>!0},b]},yield{name:"手札抹殺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>=t.activator.getHandCell().cardEntities.filter(e=>e.seq!==t.action.entity.seq).length&&t.activator.canDraw&&t.activator.canAddToHandFromDeck&&t.activator.getOpponentPlayer().canDraw&&t.activator.getOpponentPlayer().canAddToHandFromDeck&&t.action.entity.field.getAllCells().filter(e=>e.cellType==="Hand").flatMap(e=>e.cardEntities).some(e=>e.seq!==t.action.entity.seq),prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=t.activator.getHandCell().cardEntities.length,i=t.activator.getOpponentPlayer().getHandCell().cardEntities.length;return await S.sendManyToGraveyardForTheSameReason(t.action.entity.field.getCells("Hand").flatMap(a=>a.cardEntities),["Effect","Discard"],t.action.entity,t.activator),t.activator.duel.clock.incrementProcSeq(),await S.drawAtSameTime(t.activator,t.action.entity,e,i),!0},settle:async()=>!0},b]},yield{name:"一時休戦",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw&&t.activator.getOpponentPlayer().getDeckCell().cardEntities.length>0&&t.activator.getOpponentPlayer().canDraw,prepare:C,execute:async t=>(await S.drawAtSameTime(t.activator,t.action.entity,1,1),[t.activator,t.activator.getOpponentPlayer()].forEach(e=>e.entity.damageFilterBundle.push(new $n({title:"ダメージ無効",validateAlive:i=>i.duel.clock.turn-i.isSpawnedAt.turn<2,isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:()=>!0,calcType:"zero_typeA",filter:(i,a,r,n)=>(r.writeInfoLog(`${n.profile.name}は${i.isSpawnedBy}の効果でダメージを受けない。`),{zero_typeA:!0})}))),!0),settle:async()=>!0},b]},yield{name:"打ち出の小槌",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:t=>t.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=t.activator.getHandCell().cardEntities;if(!e.length)return!1;let i=[...e];if(i.length>1&&!await t.activator.waitYesNo("全ての手札を入れ替える？")){const a=await t.activator.waitSelectEntities(e,void 0,r=>r.length>0,"デッキに戻すカードを選択。",!1);if(!a)throw new F(t);i=a}return await S.returnManyToDeckForTheSameReason("Random",i,["Effect"],t.action.entity,t.activator),t.activator.duel.clock.incrementProcSeq(),await t.activator.draw(i.length,t.action.entity,t.activator),!0},settle:async()=>!0},b]}}const ms=Object.freeze(Object.defineProperty({__proto__:null,default:Yd},Symbol.toStringTag,{value:"Module"}));function*Jd(){yield{name:"おろかな埋葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.kind==="Monster"),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster");if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送るモンスターを選択",!1);if(!i)throw new F(t);return await i.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},b]},yield{name:"おろかな副葬",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.kind!=="Monster"),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.kind!=="Monster");if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送る魔法罠を選択",!1);if(!i)throw new F(t);return await i.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},b]},yield{name:"苦渋の選択",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:40,fixedTags:["SendToGraveyardFromDeck","SearchFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>4,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities;if(e.length<5)return!1;const i=await t.activator.waitSelectEntities(e,5,r=>r.length===5,"相手に見せるカードを選択。",!1);if(!i)throw new F(t);const a=await t.activator.getOpponentPlayer().waitSelectEntity(i,"手札に加えさせるカードを選択。",!1);if(!a)throw new F(t,i);return t.activator.writeInfoLog(`${t.activator.getOpponentPlayer().name}は${a.toString()}を選択。`),await a.addToHand(["Effect"],t.action.entity,t.activator),await S.sendManyToGraveyardForTheSameReason(i.filter(r=>r!==a),["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},b]};for(const t of["モンスターゲート","名推理"]){let e={title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck","SendToGraveyardFromDeck","SpecialSummon"],canExecute:i=>i.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").some(a=>{var r;return!((r=a.status.monsterCategories)!=null&&r.includes("SpecialSummon"))}),prepare:C,execute:async i=>{var n,s;if(!i.activator.getDeckCell().cardEntities.length||!i.activator.getAvailableMonsterZones().length)return!1;let a=-1;if(t==="名推理"){const l=await i.activator.getOpponentPlayer().waitSelectNumberFromRange("レベルを選択",1,12,!1);if(l===void 0)throw new F(i);a=l,i.activator.writeInfoLog(`${i.activator.getOpponentPlayer().name}は${a}を選択。`)}const r=[...i.activator.getDeckCell().cardEntities];for(const l of i.activator.getDeckCell().cardEntities){if(await l.excavate(["Effect"],i.action.entity,i.activator),l.kind!=="Monster"){await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator);continue}if((n=l.status.monsterCategories)!=null&&n.includes("SpecialSummon")){await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator);continue}return(s=l.status.monsterCategories)!=null&&s.includes("NormalSummonOnly")?(await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator),i.activator.writeInfoLog(`${l.toString()}は通常召喚可能だが特殊召喚できないため、墓地に送られた。`),!1):l.lvl===a?(await l.sendToGraveyard(["Effect","Excavate"],i.action.entity,i.activator),i.activator.writeInfoLog(`${l.toString()}のレベルは${a}のため、墓地に送られた。`),!1):!!await i.activator.summon("SpecialSummon",["Effect","Excavate"],i.action,l,k,i.activator.getAvailableMonsterZones(),[],!1)}return i.activator.writeInfoLog("通常召喚可能なモンスターがめくられなかったため、全てのカードをデッキに戻す。"),await S.returnManyToDeckForTheSameReason("Random",r,["Effect"],i.action.entity,i.activator),!1},settle:async()=>!0};t==="モンスターゲート"&&(e={...e,...md()}),yield{name:t,actions:[e,b]}}}const Ss=Object.freeze(Object.defineProperty({__proto__:null,default:Jd},Symbol.toStringTag,{value:"Module"}));function*Id(){const t=[{name:"魔法石の採掘",filter:()=>!0,discard:!0},{name:"魔法再生",filter:e=>e.kind==="Spell",discard:!1}];for(const e of t)yield{name:e.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["AddToHandFromGraveyard"],canPayCosts:i=>i.activator.getHandCell().cardEntities.filter(e.filter).length>1,payCosts:async(i,a,r)=>{const n=i.activator.getHandCell().cardEntities.filter(e.filter),s=await i.activator.waitSelectEntities(n,2,l=>l.length===2,"コストとするカードを選択",r);if(s)return e.discard?(await S.discardManyForTheSameReason(s,["Cost"],i.action.entity,i.activator),{discard:s}):(await S.sendManyToGraveyardForTheSameReason(s,["Cost"],i.action.entity,i.activator),{sendToGraveyard:s})},...De(i=>i.activator.getGraveyard().cardEntities.filter(a=>a.kind==="Spell"),{message:"手札に加える魔法カードを選択"}),execute:async i=>{if(!i.selectedEntities.length)throw new _("想定されない状態",i);const a=i.selectedEntities[0];return a.wasMovedAfter(i.isActivatedAt)?!1:(await a.addToHand(["Effect"],i.action.entity,i.activator),!0)},settle:async()=>!0},b]}}const _s=Object.freeze(Object.defineProperty({__proto__:null,default:Id},Symbol.toStringTag,{value:"Module"}));function*ef(){for(const t of[{name:"トゲトゲ神の殺虫剤",type:"Insect"},{name:"戦士抹殺",type:"Warrior"},{name:"酸の嵐",type:"Machine"},{name:"永遠の渇水",type:"Fish"},{name:"神の息吹",type:"Rock"},{name:"魔女狩り",type:"Spellcaster"},{name:"悪魔払い",type:"Fiend"}])yield{name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:e=>e.action.entity.field.getMonstersOnFieldStrictly().some(i=>i.types.includes(t.type)),prepare:async e=>{const i=e.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.types.includes(t.type));return{selectedEntities:[],chainBlockTags:e.action.calcChainBlockTagsForDestroy(e.activator,i)}},execute:async e=>{const i=e.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.types.includes(t.type));return await S.tryDestroy(i,e),!0},settle:async()=>!0},b]};yield*[{name:"増援",filter:t=>t.origin.kind==="Monster"&&t.types.includes("Warrior")&&(t.origin.level??5)<5},{name:"化石調査",filter:t=>t.origin.kind==="Monster"&&t.types.includes("Dinosaur")&&(t.origin.level??6)<6},{name:"Ｅ－エマージェンシーコール",filter:t=>t.origin.kind==="Monster"&&(t.origin.nameTags??[]).includes("Ｅ・ＨＥＲＯ")},{name:"召集の聖刻印",filter:t=>t.origin.kind==="Monster"&&(t.origin.nameTags??[]).includes("聖刻")},{name:"召喚師のスキル",filter:t=>t.origin.kind==="Monster"&&(t.origin.monsterCategories??[]).includes("Normal")&&(t.origin.level??4)>4},{name:"トゥーンのもくじ",filter:t=>(t.origin.nameTags??[]).includes("トゥーン")},{name:"融合賢者",filter:t=>t.origin.name==="融合"},{name:"虹の架け橋",filter:t=>t.origin.kind!=="Monster"&&(t.origin.nameTags??[]).includes("宝玉")},{name:"紫炎の狼煙",filter:t=>t.origin.kind==="Monster"&&(t.origin.nameTags??[]).includes("六武衆")&&(t.origin.level??4)<4},{name:"テラ・フォーミング",filter:t=>t.origin.kind==="Spell"&&t.origin.spellCategory==="Field"},{name:"コール・リゾネーター",filter:t=>t.origin.kind==="Monster"&&(t.origin.nameTags??[]).includes("リゾネーター")}].map(t=>({name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],priorityForNPC:40,canExecute:e=>e.activator.getDeckCell().cardEntities.some(t.filter)&&e.activator.canAddToHandFromDeck,prepare:C,execute:async e=>{const i=e.activator.getDeckCell().cardEntities.filter(t.filter);if(!i.length)return!1;const a=await e.activator.waitSelectEntity(i,"手札に加えるカードを選択",!1);return a?(await a.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},b]})),yield*[{name:"戦士の生還",filter:t=>t.kind==="Monster"&&t.types.includes("Warrior"),qty:1},{name:"ダーク・バースト",filter:t=>t.kind==="Monster"&&t.attr.includes("Dark")&&(t.atk??9999)<=1500,qty:1},{name:"悪夢再び",filter:t=>t.kind==="Monster"&&t.attr.includes("Dark")&&(t.def??9999)===0,qty:2},{name:"サルベージ",filter:t=>t.kind==="Monster"&&t.attr.includes("Water")&&(t.atk??9999)<=1500,qty:2},{name:"バッテリーリサイクル",filter:t=>t.kind==="Monster"&&t.types.includes("Thunder")&&(t.atk??9999)<=1500,qty:2},{name:"闇の量産工場",filter:t=>t.kind==="Monster"&&(t.status.monsterCategories??[]).includes("Normal"),qty:2}].map(t=>({name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,fixedTags:["AddToHandFromGraveyard"],priorityForNPC:40,canExecute:e=>e.activator.getGraveyard().cardEntities.filter(t.filter).length>=t.qty,prepare:C,execute:async e=>{const i=e.activator.getGraveyard().cardEntities.filter(t.filter);if(i.length===0)return!1;const a=await e.activator.waitSelectEntities(i,t.qty,r=>r.length===t.qty,"手札に加えるカードを選択",!1);for(const r of a??[])await r.addToHand(["Effect"],e.action.entity,e.activator);return!0},settle:async()=>!0},b]})),yield*[{name:"トレード・イン",filter:t=>t.kind==="Monster"&&(t.lvl??0)===8},{name:"調和の宝札",filter:t=>t.kind==="Monster"&&(t.origin.monsterCategories??[]).includes("Tuner")&&t.types.includes("Dragon")&&(t.atk??9999)<=1e3},{name:"デステニー・ドロー",filter:t=>t.kind==="Monster"&&(t.origin.nameTags??[]).includes("Ｄ－ＨＥＲＯ")}].map(t=>({name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw"],priorityForNPC:40,canPayCosts:(...e)=>Ut(...e,t.filter),canExecute:e=>e.activator.getDeckCell().cardEntities.length>1,payCosts:async(...e)=>jt(...e,t.filter),prepare:async()=>({selectedEntities:[]}),execute:async e=>(await e.activator.draw(2,e.action.entity,e.activator),!0),settle:async()=>!0},b]})),yield*[{name:"火の粉",calcHeal:()=>[0,-200]},{name:"雷鳴",calcHeal:()=>[0,-300]},{name:"ファイヤー・ボール",calcHeal:()=>[0,-500]},{name:"火あぶりの刑",calcHeal:()=>[0,-600]},{name:"昼夜の大火事",calcHeal:()=>[0,-800]},{name:"火炎地獄",calcHeal:()=>[-500,-1e3]},{name:"盗人ゴブリン",calcHeal:()=>[500,-500]},{name:"ブルー・ポーション",calcHeal:()=>[400,0]},{name:"レッド・ポーション",calcHeal:()=>[500,0]},{name:"ゴブリンの秘薬",calcHeal:()=>[600,0]},{name:"天使の生き血",calcHeal:()=>[800,0]},{name:"治療の神 ディアン・ケト",calcHeal:()=>[1e3,0]},{name:"恵みの雨",calcHeal:()=>[1e3,1e3]}].map(t=>({name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],prepare:async()=>{const[e,i]=t.calcHeal(),a=[];return e<0&&a.push("DamageToSelf"),i<0&&a.push("DamageToOpponent"),{selectedEntities:[],chainBlockTags:a}},execute:async e=>{const[i,a]=t.calcHeal();return a>0?e.activator.getOpponentPlayer().heal(a,e.action.entity):a<0&&e.activator.getOpponentPlayer().effectDamage(Math.abs(a),e),i>0?e.activator.heal(i,e.action.entity):i<0&&e.activator.effectDamage(Math.abs(i),e),!0},settle:async()=>!0},b]}))}const Cs=Object.freeze(Object.defineProperty({__proto__:null,default:ef},Symbol.toStringTag,{value:"Module"}));function*tf(){yield{name:"強欲な瓶",actions:[b,{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>1&&t.activator.canDraw&&t.activator.canAddToHandFromDeck,prepare:C,execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),!0),settle:async()=>!0}]},yield{name:"戦線復帰",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>e.canBeTargetOfEffect(t)),{posList:["Defense"]}),settle:async()=>!0},b]},yield{name:"サンダー・ブレイク",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],canPayCosts:Ut,payCosts:jt,...De((t,e,i)=>t.action.entity.field.getCardsOnFieldStrictly().filter(a=>a!==t.action.entity).filter(a=>a.canBeTargetOfEffect(t)).filter(a=>{if(!i)return!0;const r=Ui.flatMap(n=>i.costInfo[n]??[]);return r.push(...r.flatMap(n=>n.info.equipEntities)),!r.includes(a)}),{message:"対象とするカードを選択。",do:"Destroy"}),execute:async t=>t.selectedEntities.every(e=>!e.isOnField)?!1:(await S.tryDestroy(t.selectedEntities,t),!0),settle:async()=>!0},b]},yield{name:"ギブ＆テイク",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],hasToTargetCards:!0,fixedTags:["SpecialSummonFromGraveyard"],canExecute:(e,i,a)=>{const r=e.activator.getOpponentPlayer().getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getGraveyard().cardEntities.filter(s=>s.lvl).filter(s=>s.canBeTargetOfEffect(e)).map(s=>({monster:s,posList:["Defense"],cells:r})),[],!1).length?e.activator.getMonstersOnField().filter(s=>s.lvl).filter(s=>{if(!a)return!0;const l=Ui.flatMap(c=>a.costInfo[c]??[]);return l.push(...l.flatMap(c=>c.info.equipEntities)),!l.includes(s)}).some(s=>s.canBeTargetOfEffect(e)):!1},prepare:async(e,i,a)=>{const r=await e.activator.waitSelectEntity(e.activator.getMonstersOnField().filter(l=>l.lvl),"レベルを上げるモンスターを選択。",a);if(!r)return;const n=await Sd(e,e.activator.getGraveyard().cardEntities.filter(l=>l.lvl).filter(l=>l.canBeTargetOfEffect(e)),["Defense"]),s=[r,...n.selectedEntities];return e.data={give:n.selectedEntities[0],take:r},{...n,selectedEntities:s}},execute:async e=>{if(!e.data)throw new _("正しくない形でギブ＆テイクの効果処理を実行しようとした。");const{give:i,take:a}=e.data;if(!a.isOnFieldAsMonsterStrictly||!await In(e,[i],{cells:e.activator.getOpponentPlayer().getMonsterZones(),posList:["Defense"]}))return!1;const n=i.lvl??0;return a.numericOprsBundle.push(ne.createLingeringAddition("ギブ＆テイク",s=>s.duel.clock.isSameTurn(s.isSpawnedAt),e.action.entity,e.action,"level",(s,l,c)=>c+n)),!0},settle:async()=>!0},b]}}const Ts=Object.freeze(Object.defineProperty({__proto__:null,default:tf},Symbol.toStringTag,{value:"Module"}));function*af(){for(const t of["炸裂装甲","次元幽閉"])yield{name:t,actions:[b,{title:"発動",playType:"CardActivation",spellSpeed:"Quick",isMandatory:!1,executableCells:["SpellAndTrapZone"],executablePeriods:["b1Battle","b2Battle"],executableDuelistTypes:["Controller"],hasToTargetCards:!0,isNoticedForcibly:!0,meetsConditions:(e,i)=>i.some(a=>a.action.playType==="DeclareAttack"),canExecute:e=>{if(e.activator.isTurnPlayer)return!1;const i=e.activator.duel.attackingMonster;return!(!i||!i.canBeTargetOfEffect(e)||!i.isOnFieldAsMonsterStrictly||t==="次元幽閉"&&!e.activator.canTryBanish(i,"BanishAsEffect",e.action))},prepare:async e=>{const i=e.activator.duel.attackingMonster;if(!i)throw new _("想定されない状態",e,i);const a=t==="炸裂装甲"?e.action.calcChainBlockTagsForDestroy(e.activator,[i]):["BanishFromField"];return{selectedEntities:[i],chainBlockTags:a}},execute:async e=>(t==="炸裂装甲"?await S.tryDestroy(e.selectedEntities,e):await S.tryBanish("BanishAsEffect",e.selectedEntities,e),!0),settle:async()=>!0}]}}const ws=Object.freeze(Object.defineProperty({__proto__:null,default:af},Symbol.toStringTag,{value:"Module"}));function*rf(){yield{name:"ご隠居の猛毒薬",actions:[b,{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],prepare:async(t,e,i)=>{const a=[{seq:0,text:"●自分は１２００ＬＰ回復する。",tags:[]},{seq:1,text:"●相手に８００ダメージを与える。",tags:["DamageToOpponent"]}],r=await t.activator.waitSelectText(a,"使用する効果を選択",i);if(r!==void 0)return{selectedEntities:[],chainBlockTags:r.tags}},execute:async t=>{if(t.data===0)t.activator.heal(1200,t.action.entity);else if(t.data===1)t.activator.getOpponentPlayer().effectDamage(800,t);else throw new _("値が正しくない。",t,t.data);return!0},settle:async()=>!0}]},yield{name:"月の書",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],...De(t=>t.action.entity.field.getMonstersOnFieldStrictly().filter(e=>e.canBeTargetOfEffect(t)).filter(e=>e.canBeSet).filter(e=>e.face==="FaceUp"),{message:"対象とするモンスターを選択。"}),execute:async t=>{const e=t.selectedEntities[0];return!e.isOnFieldAsMonsterStrictly||e.battlePosition==="Set"?!1:e.canBeEffected(t.activator,t.action.entity,t.action)?(await e.setBattlePosition("Set",["Effect"],t.action.entity,t.activator),!0):(t.activator.duel.log.info(`${e.toString()}は${t.action.entity.toString()}の効果を受けない。`),!1)},settle:async()=>!0},b]},yield{name:"突進",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],...De(t=>t.action.entity.field.getMonstersOnFieldStrictly().filter(e=>e.face==="FaceUp").filter(e=>e.canBeTargetOfEffect(t)),{message:"対象とするモンスターを選択。"}),execute:async t=>{const e=t.selectedEntities[0];return!e.isOnFieldAsMonsterStrictly||e.battlePosition==="Set"?!1:e.canBeEffected(t.activator,t.action.entity,t.action)?(e.numericOprsBundle.push(ne.createLingeringAddition("攻撃力上昇",i=>i.duel.clock.isSameTurn(i.isSpawnedAt),t.action.entity,t.action,"attack",(i,a,r)=>r+700)),!0):(t.activator.duel.log.info(`${e.toString()}は${t.action.entity.toString()}の効果を受けない。`),!1)},settle:async()=>!0},b]},yield{name:"手札断殺",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["Draw"],canExecute:t=>{for(const e of[t.activator,t.activator.getOpponentPlayer()])if(!e.canDraw||e.getHandCell().cardEntities.filter(i=>i.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsEffect",t.action)).filter(i=>i!==t.action.entity).length<2||e.getDeckCell().cardEntities.length<2)return!1;return!0},prepare:C,execute:async t=>{if(t.activator.getHandCell().cardEntities.length<2||t.activator.getOpponentPlayer().getHandCell().cardEntities.length<2)return!1;let e=0;for(const i of[t.activator,t.activator.getOpponentPlayer()]){const a=await i.waitSelectEntities(i.getHandCell().cardEntities,2,n=>n.length===2,"墓地に送るカードを２枚選択。",!1);if(!a)throw new F(t,i);const r=await S.sendManyToGraveyardForTheSameReason(a,["Effect"],t.action.entity,t.activator);e+=r.length}return e?(t.activator.duel.clock.incrementProcSeq(),await S.drawAtSameTime(t.activator,t.action.entity,2,2),!0):!1},settle:async()=>!0},b]},yield{name:"リロード",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["Draw"],hasToTargetCards:!0,canExecute:t=>t.activator.canDraw,prepare:C,execute:async t=>{const e=t.activator.getHandCell().cardEntities;return e.length?(await S.returnManyToDeckForTheSameReason("Random",e,["Effect"],t.action.entity,t.activator),t.activator.duel.clock.incrementProcSeq(),await t.activator.draw(e.length,t.action.entity,t.activator),!0):!1},settle:async()=>!0},b]}}const Es=Object.freeze(Object.defineProperty({__proto__:null,default:rf},Symbol.toStringTag,{value:"Module"})),nf=(t,e,i,a,r,n,s)=>{if(!t.lvl||r.some(d=>!d.lvl))return;const l=r.map(d=>d.lvl??0).reduce((d,f)=>d+f,0),c=Zi(...r.map(d=>d.lvl??0));if(l<t.lvl||s==="Equal"&&l!==t.lvl||s==="OrMore"&&l-c>=t.lvl||!n(r))return;const u=[...r.map(d=>({material:d,cell:d.cell}))];if(e.activator.getEnableSummonList(e.activator,"RitualSummon",["Effect","SpecialSummon"],e.action,[{monster:e.action.entity,posList:i,cells:a}],u,!1).length)return u};function*bs(t,...e){const[i,a,r,n,s]=e,l=t.activator.getCells(...i).flatMap(f=>f.cardEntities).filter(f=>{var p;return(p=f.status.monsterCategories)==null?void 0:p.includes("Ritual")}).filter(a);if(!l.length)return;const c=t.activator.getCells(...r).flatMap(f=>f.cardEntities).filter(f=>f.lvl).filter(f=>f.canBeReleased(t.activator,t.action.entity,["RitualMaterial","ReleaseAsEffect"],t.action));if(!c.length)return;const u=t.activator.getMonsterZones(),d=["Attack","Defense"];for(const f of l)for(const p of c.filter(h=>h!==f).getAllOnOffPattern()){const h=nf(f,t,d,u,p,n,s);h&&(yield{monster:f,materialInfos:h})}}const sf=async(t,...e)=>{var d,f;const i=bs(t,...e).toArray(),a=i.map(p=>p.monster).getDistinct(),r=await t.activator.waitSelectEntity(a,"儀式召喚するモンスターを選択。");if(!r)return!1;const n=i.filter(p=>p.monster===r).map(p=>p.materialInfos),s=n.map(p=>({infos:p,materialSeqList:p.map(h=>h.material.seq).sort()}));let l=n[0].map(p=>p.material);if(n.length>1){const p=n.flatMap(h=>h.map(y=>y.material)).getDistinct();l=await t.activator.waitSelectEntities(p,void 0,h=>{const y=h.map(v=>v.seq).sort();return s.some(v=>y.length===v.materialSeqList.length&&y.every((g,m)=>g===v.materialSeqList[m]))},"リリースするモンスターを選択",!1)??l}const c=l.map(p=>p.seq).sort(),u=(d=s.find(p=>c.length===p.materialSeqList.length&&c.every((h,y)=>h===p.materialSeqList[y])))==null?void 0:d.infos;if(!u)throw new _("想定されない状態",t,l);return await S.releaseManyForTheSameReason(l,["RitualMaterial","Effect","SpecialSummonMaterial"],t.action.entity,t.activator),await t.activator.summon("RitualSummon",["Effect","SpecialSummon"],t.action,r,k,t.activator.getMonsterZones(),u,!1),r.info.isRebornable=!((f=r.origin.monsterCategories)!=null&&f.includes("RegularSpecialSummonOnly")),u.map(p=>p.material).forEach(p=>p.onUsedAsMaterial(t,t.action.entity)),!0},lf=(t,e,i,a,r)=>({canExecute:n=>bs(n,t,e,i,a,r).some(s=>s.materialInfos.length),prepare:async()=>{const n=[];return t.includes("Hand")&&n.push("SpecialSummonFromHand"),t.includes("Graveyard")&&n.push("SpecialSummonFromGraveyard"),t.includes("ExtraDeck")&&n.push("SpecialSummonFromExtraDeck"),t.includes("Banished")&&n.push("SpecialSummonFromBanished"),t.includes("Deck")&&n.push("SpecialSummonFromDeck"),{selectedEntities:[],chainBlockTags:n}},execute:n=>sf(n,t,e,i,a,r),settle:async()=>!0});function*of(){for(const t of[{spellName:"カオスの儀式",monsterName:"カオス・ソルジャー"},{spellName:"仮面魔獣の儀式",monsterName:"仮面魔獣マスクド・ヘルレイザー"},{spellName:"亀の誓い",monsterName:"クラブ・タートル"},{spellName:"ジャベリンビートルの契約",monsterName:"ジャベリンビートル"},{spellName:"ゼラの儀式",monsterName:"ゼラ"},{spellName:"カオス－黒魔術の儀式",monsterName:"マジシャン・オブ・ブラックカオス"},{spellName:"ガルマソードの誓い",monsterName:"ガルマソード"},{spellName:"ライオンの儀式",monsterName:"スーパー・ウォー・ライオン"},{spellName:"チャクラの復活",monsterName:"チャクラ"},{spellName:"要塞クジラの誓い",monsterName:"要塞クジラ"},{spellName:"ローの祈り",monsterName:"ローガーディアン"},{spellName:"スカルライダーの復活",monsterName:"スカルライダー"},{spellName:"踊りによる誘発",monsterName:"ダンシング・ソルジャー"},{spellName:"悪魔鏡の儀式",monsterName:"デビルズ・ミラー"},{spellName:"ハンバーガーのレシピ",monsterName:"ハングリーバーガー"}])yield{name:t.spellName,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...lf(["Hand"],e=>e.nm===t.monsterName,["Hand","MonsterZone","ExtraMonsterZone"],()=>!0,"OrMore")},b]}}const ks=Object.freeze(Object.defineProperty({__proto__:null,default:of},Symbol.toStringTag,{value:"Module"}));function*cf(){for(const t of["大地の騎士ガイアナイト","スクラップ・デスデーモン"])yield{name:t,actions:[me()]};yield{name:"ナチュル・ガオドレイク",actions:[me(t=>t.length===1&&t.every(e=>e.attr.some(i=>i==="Earth")),t=>t.length>0&&t.every(e=>e.attr.some(i=>i==="Earth")))]},yield{name:"マジカル・アンドロイド",actions:[me(),{title:"回復",isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:t=>t.activator.isTurnPlayer&&t.action.entity.face==="FaceUp",prepare:C,execute:async t=>(t.activator.heal(t.activator.getMonstersOnField().filter(e=>e.face==="FaceUp").filter(e=>e.types.includes("Psychic")).length*600,t.action.entity),!0),settle:async()=>!0}]}}const Ds=Object.freeze(Object.defineProperty({__proto__:null,default:cf},Symbol.toStringTag,{value:"Module"}));function*uf(){yield{name:"にせアバター",actions:[],continuousEffects:[fi("THE_DEVILS_AVATAR","Monster",t=>[t],t=>["attack","defense"].map(e=>ne.createContinuous("THE_DEVILS_AVATAR",i=>i.isSpawnedBy.isOnFieldStrictly&&i.isSpawnedBy.face==="FaceUp",t,(i,a)=>a.isOnFieldStrictly&&a.face==="FaceUp",e,"calculated","THE_DEVILS_AVATAR",()=>Number.MIN_VALUE)))]},yield{name:"にせドレッド・ルート",actions:[],continuousEffects:[Ri("THE_DEVILS_DREAD-ROOT","Monster",t=>["attack","defense"].map(e=>ne.createContinuous("THE_DEVILS_DREAD-ROOT",i=>i.isSpawnedBy.isOnFieldStrictly&&i.isSpawnedBy.face==="FaceUp",t,(i,a)=>a.isMonster&&a.isOnFieldStrictly&&a.face==="FaceUp"&&a!==i.isSpawnedBy,e,"calculated","THE_DEVILS_DREAD-ROOT",(i,a,r)=>Math.round(r/2))))]}}const xs=Object.freeze(Object.defineProperty({__proto__:null,default:uf},Symbol.toStringTag,{value:"Module"})),df=(t,e,i,a,r=2,n=2,s)=>{if(!t.action.entity.origin.rank||a.length<r||a.length>n||a.some(c=>!c.lvl)||a.some(c=>c.lvl!==t.action.entity.rank)||!s(a))return;const l=a.map(c=>({material:c,cell:c.cell,level:c.status.level}));if(t.activator.getEnableSummonList(t.activator,"XyzSummon",["Rule","XyzSummon","SpecialSummon"],t.action,[{monster:t.action.entity,posList:e,cells:i}],l,!1).length)return l};function*ff(t,e=2,i=2,a=r=>r.length>1){const r=t.activator.getMonstersOnField().filter(s=>s.battlePosition!=="Set");if(r.length<e)return;const n=[...t.activator.getMonsterZones(),...t.activator.getAvailableExtraMonsterZones()];yield*r.getAllOnOffPattern().filter(s=>s.length>=e).filter(s=>s.length<=i).map(s=>df(t,k,n,s,e,i,a)??[]).filter(s=>s.length)}const pf=async(t,e,i)=>{var c;const a=t.action.getEnableMaterialPatterns(t).toArray(),r=a.map(u=>({infos:u,materialSeqList:u.map(d=>d.material.seq).sort()}));let n=a[0].map(u=>u.material);if(a.length>1){const u=a.flatMap(f=>f.map(p=>p.material)).getDistinct(),d=await t.activator.waitSelectEntities(u,void 0,f=>{const p=f.map(h=>h.seq).sort();return r.some(h=>p.length===h.materialSeqList.length&&p.every((y,v)=>y===h.materialSeqList[v]))},"エクシーズ素材とするモンスターを選択",i);if(!d)return;n=d}const s=n.map(u=>u.seq).sort(),l=(c=r.find(u=>s.length===u.materialSeqList.length&&s.every((d,f)=>d===u.materialSeqList[f])))==null?void 0:c.infos;if(!l)throw new _("想定されない状態",t,n);return await S.convertManyToXyzMaterials(l.map(u=>u.material),["XyzMaterial","Rule","Cost"],t.action.entity,t.activator),{summonMaterialInfos:l}},As=(t=2,e=2,i=a=>a.length>1)=>({title:"エクシーズ召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],getEnableMaterialPatterns:a=>ff(a,t,e,i),canPayCosts:a=>a.action.getEnableMaterialPatterns(a).some(r=>r.length),canExecute:a=>!a.ignoreCosts||a.activator.getAvailableExtraMonsterZones().length+a.activator.getAvailableMonsterZones().length>0,payCosts:pf,prepare:a=>ot(a,"XyzSummon",["Rule","SpecialSummon","XyzSummon"],["Attack","Defense"]),execute:ct,settle:async()=>!0}),gf=(t=1,e=1,i=()=>!0)=>({canPayCosts:(...a)=>{const[r]=a;return r.action.entity.getXyzMaterials().filter(n=>i(...a,n)).length>=t},payCosts:async(a,r,n)=>{const s=a.action.entity.getXyzMaterials().filter(c=>i(a,r,c));let l=s.slice(0,t);if(s.length>t){const c=t===e?t:void 0,u=await a.activator.waitSelectEntities(s,c,d=>d.length>=t&&d.length<=e,"コストとするXYZ素材を選択",n);if(!u)return;l=u}return await S.releaseManyForTheSameReason(l,["Cost"],a.action.entity,a.activator),{xyzMaterial:l}}});function*hf(){yield*[{name:"ジェムナイト・パール",qty:2},{name:"覚醒の勇士 ガガギゴ",qty:3}].map(t=>({name:t.name,actions:[As(t.qty,t.qty)]}))}const Ps=Object.freeze(Object.defineProperty({__proto__:null,default:hf},Symbol.toStringTag,{value:"Module"}));function*yf(){yield{name:"シューティング・ライザー・ドラゴン",actions:[me(),{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["SynchroSummon"]},fixedTags:["SendToGraveyardFromDeck","IfSpecialSummonSucceed"],isOnlyNTimesPerTurn:1,canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>(e.lvl??12)<(t.action.entity.lvl??0)),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(r=>(r.lvl??12)<(t.action.entity.lvl??0));if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送るモンスターを選択",!1);if(!i)throw new _("想定されない状況",t);await i.sendToGraveyard(["Effect"],t.action.entity,t.activator);const a=i.lvl??0;return t.action.entity.numericOprsBundle.push(ne.createLingeringAddition("レベル減少",()=>!0,t.action.entity,t.action,"level",(r,n,s)=>s-a)),!0},settle:async()=>!0},ds({title:"②シンクロ召喚",isOnlyNTimesPerChain:1})]}}const Ms=Object.freeze(Object.defineProperty({__proto__:null,default:yf},Symbol.toStringTag,{value:"Module"})),vf=(t,e,i,a,r,n)=>{const s=t.fusionMaterialInfos.filter(u=>u.type!=="Overmuch");if(!s.length||!r.length||s.length!==r.length||!n(e,t,r)||!t.validateFusionMaterials(r))return;const l=s.map(u=>{const d=[];return rt(u)?d.push(...r.filter(f=>u.cardName===f.nm||f.status.fusionSubstitute)):d.push(...r.filter(u.filter)),{require:u,materials:d}});if(l.some(u=>!u.materials.length)||l.flatMap(u=>u.materials).getDistinct().length<r.length)return;let c=[[]];for(const u of l)c=[...c.flatMap(d=>u.materials.map(f=>{if(d.some(h=>h.material===f))return[...d];const p={material:f,cell:f.cell};return rt(u.require)&&(p.name=u.require.cardName),[...d,p]}))];return c=c.filter(u=>u.length===r.length).filter(u=>u.filter(d=>d.name&&d.material.nm!==d.name).length<2),c.find(u=>e.activator.getEnableSummonList(e.activator,"FusionSummon",["Effect","SpecialSummon"],e.action,[{monster:e.action.entity,posList:i,cells:a}],u,!1).length)};function*Fs(t,...e){const[i,a,r,n,s]=e,l=t.activator.getCells(...i).flatMap(f=>f.cardEntities).filter(f=>{var p;return(p=f.status.monsterCategories)==null?void 0:p.includes("Fusion")}).filter(f=>a(t,f));if(!l.length)return;const c=t.activator.getCells(...r).flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>f.face==="FaceUp"||f.cell.cellType!=="Banished").filter(f=>f.canBeEffected(t.activator,t.action.entity,t.action));if(s!=null&&s.requisitionFrom&&c.push(...t.activator.getOpponentPlayer().getCells(...s.requisitionFrom).flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>f.face==="FaceUp").filter(f=>f.canBeEffected(t.activator,t.action.entity,t.action))),!c.length)return;const u=[...t.activator.getMonsterZones(),...t.activator.duel.field.getCells("ExtraMonsterZone")],d=["Attack","Defense"];for(const f of l){const p=f.fusionMaterialInfos.filter(h=>h.type!=="Overmuch");if(p.length&&!(c.every(h=>!h.status.fusionSubstitute)&&p.filter(rt).some(h=>c.every(y=>y.nm!==h.cardName)))&&!p.filter(dp).some(h=>c.every(y=>!h.filter(y))))for(const h of c.filter(y=>y!==f).getAllOnOffPattern().filter(y=>y.length===p.length)){const y=vf(f,t,d,u,h,n);y&&(yield{monster:f,materialInfos:y},console.log(f,y))}}}const mf=async(t,...e)=>{var y;const i=Fs(t,...e).toArray(),a=i.map(v=>v.monster).getDistinct(),r=await t.activator.waitSelectEntity(a,"融合召喚するモンスターを選択。");if(!r)return!1;const n=r.fusionMaterialInfos.filter(fp),s=i.filter(v=>v.monster===r).map(v=>v.materialInfos),l=s.map(v=>({infos:v,requiredSeqList:v.map(g=>g.material.seq)}));let c=s[0].map(v=>v.material);if(s.length>1||n.length){const v=s.flatMap(g=>g.map(m=>m.material)).getDistinct();c=await t.activator.waitSelectEntities(v,void 0,g=>l.some(m=>m.requiredSeqList.every(T=>g.map(D=>D.seq).includes(T))&&g.filter(T=>!m.requiredSeqList.includes(T.seq)).every(T=>n.some(D=>D.filter(T)))),"融合素材とするモンスターを選択",!1)??c}const u=l.find(v=>v.requiredSeqList.every(g=>c.map(m=>m.seq).includes(g))&&c.filter(g=>!v.requiredSeqList.includes(g.seq)).every(g=>n.some(m=>m.filter(g))));if(!u)throw new _("想定されない状態",t,c);const d=u.infos;d.push(...c.filter(v=>!u.requiredSeqList.includes(v.seq)).map(v=>({material:v,cell:v.cell})));const[,,,,f]=e,p={...Me.reduce((v,g)=>{const m={...v};return m[g]=g==="Graveyard"?{to:"Banished"}:{to:"Graveyard"},m},{}),...f.materialDestMapper},h=Object.groupBy(c,v=>v.cell.cellType);for(const v of Hn(h)){const g=p[v].to,m=p[v].position??pc[g],T=gc[g];h[v]&&await S.bringManyToSameCellForTheSameReason(g,m,h[v],T,"Vertical",["FusionMaterial","Effect","SpecialSummonMaterial"],t.action.entity,t.activator)}return await t.activator.summon("FusionSummon",["Effect","SpecialSummon"],t.action,r,k,[...t.activator.getMonsterZones(),...t.activator.duel.field.getCells("ExtraMonsterZone")],d,!1),r.info.isRebornable=!((y=r.origin.monsterCategories)!=null&&y.includes("RegularSpecialSummonOnly")),d.map(v=>v.material).forEach(v=>v.onUsedAsMaterial(t,t.action.entity)),!0},hi=(t,e,i,a,r={})=>({fixedTags:["SpecialSummonFromExtraDeck"],canExecute:n=>Fs(n,t,e,i,a,r).some(s=>s.materialInfos.length),prepare:C,execute:n=>mf(n,t,e,i,a,r),settle:async()=>!0});function*Sf(){for(const t of["心眼の女神","沼地の魔獣王","イリュージョン・シープ","破壊神 ヴァサーゴ"])yield{name:t,actions:[],continuousEffects:[wa]};yield{name:"沼地の魔神王",actions:[{title:"融合サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],canPayCosts:hd,canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.nm==="融合")&&t.activator.canAddToHandFromDeck,getDests:t=>[t.activator.getGraveyard()],payCosts:yd,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.nm==="融合");if(!e.length)return!1;const i=await t.activator.waitSelectEntity(e,"手札に加えるカードを選択",!1);return i?(await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}],continuousEffects:[wa]},yield{name:"パラサイト・フュージョナー",actions:[{title:"融合",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["SpecialSummon"]},...hi(["ExtraDeck"],()=>!0,["MonsterZone","ExtraMonsterZone"],(t,e,i)=>i.includes(t.action.entity)),settle:async()=>!0}],summonFilter:(t,e,i,a,r,n,s,l,c,u)=>{const d={posList:c,cells:u},f={posList:[],cells:[]};if(!r.includes("FusionSummon"))return d;const p=l.find(h=>h.material===t.isSpawnedBy);return p?p.name&&p.name!==t.isSpawnedBy.nm?d:f:d},continuousEffects:[wa]}}const Os=Object.freeze(Object.defineProperty({__proto__:null,default:Sf},Symbol.toStringTag,{value:"Module"}));function*_f(){yield{name:"魔導サイエンティスト",actions:[{title:"特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromExtraDeck"],canPayCosts:t=>t.activator.lp>=1e3,canExecute:t=>{const e=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getExtraDeck().cardEntities.filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Fusion")}).filter(a=>a.lvl&&a.lvl<7).map(a=>({monster:a,posList:k,cells:e})),[],!1).length>0},payCosts:(t,e)=>$t(t,e,1e3),prepare:C,execute:async t=>{const e=t.activator.getMonsterZones(),i=await t.activator.summonOne(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getExtraDeck().cardEntities.filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Fusion")}).filter(a=>a.lvl&&a.lvl<7).map(a=>({monster:a,posList:k,cells:e})),[],!1,!1);return i?(i.procFilterBundle.push(st.createLingering("直接攻撃不可",()=>!0,t.action.entity,t.action,(a,r)=>r.face==="FaceUp"&&r.isOnFieldAsMonsterStrictly,["BattleTarget"],(a,r,n,s,l)=>a!==n?!0:l.every(c=>c.entityType!=="Duelist"))),i.counterHolder.setCurfewFlg(t.action.entity),!0):!1},settle:async()=>!0},{title:"自発帰還",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,canExecute:t=>t.action.entity.field.getMonstersOnFieldStrictly().some(e=>e.counterHolder.getCurfewFlg(t.action.entity)),prepare:C,execute:async t=>{const e=t.action.entity.field.getMonstersOnFieldStrictly().filter(a=>a.counterHolder.getCurfewFlg(t.action.entity));if(!e.length)throw new _("想定されない状態",t);let i=e[0];if(e.length>1){const a=await t.activator.waitSelectEntity(e,"帰還させるカードを選択。",!1);if(!a)throw new F(t);i=a}return await i.returnToDeck("Bottom",["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0}]}}const Ns=Object.freeze(Object.defineProperty({__proto__:null,default:_f},Symbol.toStringTag,{value:"Module"}));function*Cf(){for(const t of[{name:"マンジュ・ゴッド",kinds:["Monster","Spell"]},{name:"センジュ・ゴッド",kinds:["Monster"]},{name:"ソニックバード",kinds:["Spell"]}])yield{name:t.name,actions:[{title:"①儀式サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],meetsConditions:e=>e.action.entity.hasBeenArrivalNow(["NormalSummon","FlipSummon"]),canExecute:e=>e.activator.canAddToHandFromDeck&&e.activator.getDeckCell().cardEntities.filter(i=>t.kinds.includes(i.kind)).some(i=>{var a;return i.status.spellCategory==="Ritual"||((a=i.status.monsterCategories)==null?void 0:a.includes("Ritual"))}),prepare:C,execute:async e=>{if(!e.activator.canAddToHandFromDeck)return!1;const i=e.activator.getDeckCell().cardEntities.filter(r=>t.kinds.includes(r.kind)).filter(r=>{var n;return r.status.spellCategory==="Ritual"||((n=r.status.monsterCategories)==null?void 0:n.includes("Ritual"))});if(!i.length)return!1;const a=await e.activator.waitSelectEntity(i,"手札に加えるカードを選択",!1);if(!a)throw new F(e,i);return await a.addToHand(["Effect"],e.action.entity,e.activator),e.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]}}const Bs=Object.freeze(Object.defineProperty({__proto__:null,default:Cf},Symbol.toStringTag,{value:"Module"}));function*Tf(){yield{name:"儀式の準備",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck","ReturnToHandFromGraveyard"],canExecute:t=>t.activator.getDeckCell().cardEntities.filter(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Ritual")}).some(e=>e.lvl&&e.lvl<8)&&t.activator.canAddToHandFromDeck,prepare:C,execute:async t=>{if(!t.activator.canAddToHandFromDeck)return!1;const e=t.activator.getDeckCell().cardEntities.filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Ritual")}).filter(n=>n.lvl&&n.lvl<8);if(!e.length)return!1;const i=await t.activator.waitSelectEntity(e,"手札に加えるカードを選択",!1);if(!i)return!1;if(await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!t.activator.canAddToHandFromGraveyard)return!0;const a=t.activator.getGraveyard().cardEntities.filter(n=>n.status.spellCategory==="Ritual");if(a.length===1&&!await t.activator.waitYesNo("儀式カードをサルベージする？"))return!0;const r=await t.activator.waitSelectEntity(a,"手札に加えるカードを選択",!0);return r&&(t.activator.duel.clock.incrementProcSeq(),await r.addToHand(["Effect"],t.action.entity,t.activator)),!0},settle:async()=>!0},b]},yield{name:"儀式の下準備",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck","ReturnToHandFromGraveyard"],canExecute:t=>{if(!t.activator.canAddToHandFromDeck)return!1;const e=t.activator.getDeckCell().cardEntities.filter(a=>a.status.spellCategory==="Ritual").flatMap(a=>a.status.textTags??[]),i=["Deck"];return t.activator.canAddToHandFromGraveyard&&i.push("Graveyard"),t.activator.getCells(...i).flatMap(a=>a.cardEntities).filter(a=>{var r;return(r=a.status.monsterCategories)==null?void 0:r.includes("Ritual")}).some(a=>e.includes(a.nm))},prepare:C,execute:async t=>{if(!t.activator.canAddToHandFromDeck)return!1;let e=t.activator.getDeckCell().cardEntities.filter(l=>l.status.spellCategory==="Ritual").flatMap(l=>l.status.textTags??[]);if(!e.length)return!1;const i=["Deck"];if(t.activator.canAddToHandFromGraveyard&&i.push("Graveyard"),e=t.activator.getCells(...i).flatMap(l=>l.cardEntities).filter(l=>{var c;return(c=l.status.monsterCategories)==null?void 0:c.includes("Ritual")}).filter(l=>e.includes(l.nm)).map(l=>l.nm),!e.length)return!1;const a=t.activator.getDeckCell().cardEntities.filter(l=>l.status.spellCategory==="Ritual").filter(l=>l.status.textTags&&l.status.textTags.union(e).length);if(!a.length)return!1;const r=await t.activator.waitSelectEntity(a,"手札に加えるカードを選択",!1);if(!r)throw new F(t);const n=t.activator.getCells(...i).flatMap(l=>l.cardEntities).filter(l=>{var c;return(c=l.status.monsterCategories)==null?void 0:c.includes("Ritual")}).filter(l=>{var c;return(c=r.status.textTags)==null?void 0:c.includes(l.nm)});if(!n.length)throw console.error(r.status.textTags),new _("想定されない状態",t,r,r.status.textTags);const s=await t.activator.waitSelectEntity(n,"手札に加えるカードを選択",!1);if(!s)throw new F(t,a);return await S.addManyToHand([r,s],["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},b]}}const Ls=Object.freeze(Object.defineProperty({__proto__:null,default:Tf},Symbol.toStringTag,{value:"Module"}));function*wf(){yield{name:"折れ竹光",actions:[Ft(),b]},yield{name:"妖刀竹光",actions:[Ft(),b,{title:"②直接攻撃付与",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,...De(t=>t.activator.getSpellTrapsOnField().filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("竹光")}).filter(e=>e!==t.action.entity).filter(e=>e.status.spellCategory==="Equip"),{message:"手札に戻すカードを選択。",tags:["BounceToHand"]}),execute:async t=>{const e=t.action.entity.info.equipedBy;return e?(await S.returnManyToHandForTheSameReason(t.selectedEntities,["Effect"],t.action.entity,t.activator),e.statusOperatorBundle.push(new oe({title:"直接攻撃",validateAlive:i=>i.duel.clock.isSameTurn(i.isSpawnedAt),isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:(i,a)=>a.isOnFieldAsMonsterStrictly&&a.face==="FaceUp",statusCalculator:()=>({canDirectAttack:!0})})),!0):!1},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain&&t.action.entity.wasMovedFrom.cellType!=="Banished",canExecute:t=>t.activator.canAddToHandFromDeck&&t.activator.getDeckCell().cardEntities.filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("竹光")}).some(e=>e.status.name!=="妖刀竹光"),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("竹光")}).filter(a=>a.status.name!=="妖刀竹光");if(!e.length)return!1;const i=await t.activator.waitSelectEntity(e,"手札に加えるカードを選択。",!1);if(!i)throw new F(t);return await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0}]},yield{name:"真刀竹光",actions:[Ft(),b,{title:"②相手モンスター破壊",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["b1DAfterDmgCalc","b2DAfterDmgCalc"],executableDuelistTypes:["Controller"],canExecute:t=>{const e=t.action.entity.info.equipedBy;return!(!e||!e.info.battleLog.filter(i=>t.activator.duel.clock.isPreviousStage(i.timestamp)).some(i=>i.enemy.entityType==="Duelist")||!t.activator.getOpponentPlayer().getMonstersOnField().length||!t.activator.getOpponentPlayer().lifeLog.filter(i=>t.activator.duel.clock.isPreviousStage(i.clock)).some(i=>i.entity===e))},prepare:async t=>({selectedEntities:[],chainBlockTags:t.action.calcChainBlockTagsForDestroy(t.activator,t.activator.getOpponentPlayer().getMonstersOnField()),prepared:void 0}),execute:async t=>(await S.tryDestroy(t.activator.getOpponentPlayer().getMonstersOnField(),t)).length>0,settle:async()=>!0},{title:"③竹光入替",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:t=>t.action.entity.info.equipedBy?dd(t):!1,canExecute:t=>!!(t.action.entity.info.equipedBy&&t.activator.getDeckCell().cardEntities.filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("竹光")}).filter(e=>e.status.name!=="真刀竹光").some(e=>e.status.spellCategory==="Equip"))&&t.activator.duel.field.getMonstersOnFieldStrictly().some(e=>e.canBeTargetOfEffect(t)),payCosts:fd,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(l=>{var c;return(c=l.status.nameTags)==null?void 0:c.includes("竹光")}).filter(l=>l.status.name!=="真刀竹光").filter(l=>l.status.spellCategory==="Equip");if(!e.length)return!1;const i=t.activator.getAvailableSpellTrapZones();if(!i.length)return!1;const a=t.activator.duel.field.getMonstersOnFieldStrictly().filter(l=>l.canBeTargetOfEffect(t));if(!a.length)return!1;const r=await t.activator.waitSelectEntity(e,"装備するカードを選択。",!1);if(!r)throw new F("竹光選択",t);const n=await t.activator.duel.view.waitSelectDestination(t.activator,r,i,"装備カードを置く場所を選択。","装備",!1);if(!n)throw new F("配置場所選択",t);await r.putDirectly(n,"Spell",["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle();const s=await t.activator.waitSelectEntity(a,"装備する対象を選択。",!1);if(!s)throw new F("装備対象選択",t);return r.info.equipedBy=s,r.info.effectTargets[t.action.seq]=[s],s.info.equipEntities.push(r),!0},settle:async()=>!0}]}}const qs=Object.freeze(Object.defineProperty({__proto__:null,default:wf},Symbol.toStringTag,{value:"Module"}));function*Ef(){yield{name:"黄金色の竹光",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],priorityForNPC:20,fixedTags:["Draw"],meetsConditions:t=>t.activator.getSpellTrapsOnField().filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("竹光")}).filter(e=>e.face==="FaceUp").some(e=>e.status.spellCategory==="Equip"),canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw,prepare:C,execute:async t=>(await t.activator.draw(2,t.action.entity,t.activator),!0),settle:async()=>!0},b]}}const Rs=Object.freeze(Object.defineProperty({__proto__:null,default:Ef},Symbol.toStringTag,{value:"Module"}));function*bf(){yield{name:"ＢＦ－疾風のゲイル",actions:[{title:"①特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],canExecute:t=>t.activator.getMonstersOnField().filter(e=>(e.status.nameTags??[]).includes("ＢＦ")).some(e=>e.nm!==t.action.entity.origin.name)&&he(t,k,[],["Rule"]),getDests:t=>Ot(t,k,[],["Rule"]),prepare:t=>ot(t,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ct,settle:async()=>!0},{title:"②攻守半減",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,...De(t=>t.activator.getOpponentPlayer().getMonstersOnField().filter(e=>e.face==="FaceUp").filter(e=>e.canBeTargetOfEffect(t)),{message:"対象モンスターを選択。"}),execute:async t=>{const e=t.selectedEntities.filter(i=>i.isOnFieldAsMonsterStrictly).filter(i=>i.face==="FaceUp").find(i=>i.canBeEffected(t.activator,t.action.entity,t.action));return e?(["attack","defense"].map(i=>ne.createLingeringFixation("②攻守半減",()=>!0,t.action.entity,t.action,i,(a,r,n)=>Math.round(n/2))).forEach(i=>e.numericOprsBundle.push(i)),!0):!1},settle:async()=>!0}]}}const Hs=Object.freeze(Object.defineProperty({__proto__:null,default:bf},Symbol.toStringTag,{value:"Module"}));function*kf(){yield{name:"水晶機巧－ハリファイバー",actions:[ur(t=>t.length===2&&t.some(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Tuner")})),{title:"①リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromDeck"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["LinkSummon"]),canExecute:t=>{const e=[t.activator.getHandCell(),t.activator.getDeckCell()].flatMap(r=>r.cardEntities).filter(r=>(r.lvl??12)<4).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")}),i=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,cells:i,posList:["Defense"]})),[],!1).length>0},prepare:C,execute:async t=>{const e=[t.activator.getHandCell(),t.activator.getDeckCell()].flatMap(r=>r.cardEntities).filter(r=>(r.lvl??12)<4).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")}),i=t.activator.getMonsterZones(),a=await t.activator.summonOne(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,cells:i,posList:["Defense"]})),[],!1,!1);if(!a)throw new F(t);return a.statusOperatorBundle.push(new oe({title:"効果発動不可",validateAlive:r=>r.duel.clock.isSameTurn(r.isSpawnedAt),isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:(r,n)=>r.duel.clock.isSameTurn(r.isSpawnedAt)&&n.isOnFieldAsMonsterStrictly&&n.face==="FaceUp",statusCalculator:()=>({canActivateEffect:!1})})),!0},settle:async()=>!0},{title:"②シンクロ召喚",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerChain:1,canPayCosts:gi,meetsConditions:t=>!t.activator.isTurnPlayer,canExecute:t=>{const e=[...t.activator.getMonsterZones(),...t.activator.duel.field.getCells("ExtraMonsterZone")],i=t.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Synchro")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});return t.activator.getEnableSummonList(t.activator,"SynchroSummon",["SpecialSummon","Effect"],t.action,i.map(r=>({monster:r,cells:e,posList:k})),[{material:t.action.entity,cell:t.action.entity.cell}],!1).length>0},payCosts:da,prepare:C,execute:async t=>{const e=[...t.activator.getMonsterZones(),...t.activator.duel.field.getCells("ExtraMonsterZone")],i=t.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Synchro")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});return!!await t.activator.summonOne(t.activator,"SynchroSummon",["SpecialSummon","Effect"],t.action,i.map(r=>({monster:r,cells:e,posList:k})),[],!1,!1)},settle:async()=>!0}]}}const Zs=Object.freeze(Object.defineProperty({__proto__:null,default:kf},Symbol.toStringTag,{value:"Module"}));function*Df(){yield{name:"Ｄ－ＨＥＲＯ ディアボリックガイ",actions:[{title:"①リクルート",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromDeck"],priorityForNPC:10,canPayCosts:gi,canExecute:t=>{const e=t.activator.getDeckCell().cardEntities.find(r=>r.nm==="Ｄ－ＨＥＲＯ ディアボリックガイ");if(!e)return!1;const i=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,[{monster:e,posList:k,cells:i}],[],!1).length>0},payCosts:da,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.find(i=>i.nm==="Ｄ－ＨＥＲＯ ディアボリックガイ");return e?In(t,[e]):!1},settle:async()=>!0}]},yield{name:"Ｄ－ＨＥＲＯ ダイヤモンドガイ",actions:[{title:"魔法効果予約",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,canExecute:t=>t.action.entity.face==="FaceUp"&&t.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async t=>{const e=await S.excavateFromDeck(t.activator,["Effect"],t.action.entity,t.activator);if(!e)return!1;if(e.kind!=="Spell"||e.status.spellCategory!=="Normal")return t.activator.duel.view.requireUpdate(),await Gi(500),t.activator.writeInfoLog(`${e.toString()}は通常魔法ではないため、デッキボトムに戻った。`),await e.returnToDeck("Bottom",["Effect"],t.action.entity,t.activator),!1;await e.sendToGraveyard(["Effect"],t.action.entity,t.activator);const i=e.actions.filter(n=>n.playType==="CardActivation").find(n=>!n.needsToPayRegularCosts);if(!i)return t.activator.writeInfoLog(`${e.toString()}は${t.action.entity.toString()}の効果では発動できない。`),!0;const a=t.activator.duel.clock.getClone(),r={...i.definition};return r.title+=`(${t.action.entity.toString()})`,r.playType="IgnitionEffect",r.canExecute=(n,s)=>n.activator.duel.clock.turn>a.turn+2||n.action.entity.wasMovedAfter(a)?"RemoveMe":n.activator.duel.clock.turn<a.turn+2?!1:!i.definition.canExecute||i.definition.canExecute(n,s),r.executableCells=["Graveyard"],r.meetsConditions=void 0,r.canPayCosts=void 0,r.payCosts=void 0,r.settle=async()=>!0,r.isOnlyNTimesPerTurn=1,e.actions.push(St.createNew(e,r)),!0},settle:async()=>!0}]}}const Gs=Object.freeze(Object.defineProperty({__proto__:null,default:Df},Symbol.toStringTag,{value:"Module"}));function*xf(){yield{name:"Ｅ・ＨＥＲＯ プリズマー",actions:[{title:"リフレクト・チェンジ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,needsToPayRegularCost:!0,canPayCosts:t=>{const e=t.activator.getExtraDeck().cardEntities.flatMap(i=>i.fusionMaterialInfos).filter(rt).map(i=>i.cardName).getDistinct();return t.activator.getDeckCell().cardEntities.filter(i=>e.includes(i.nm)).some(i=>i.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsCost",t.action))},canExecute:t=>t.action.entity.face==="FaceUp",payCosts:async(t,e,i)=>{const a=t.activator.getExtraDeck().cardEntities.flatMap(c=>c.fusionMaterialInfos).filter(rt).map(c=>c.cardName).getDistinct(),r=t.activator.getDeckCell().cardEntities.filter(c=>a.includes(c.nm)).filter(c=>c.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsCost",t.action));if(r.length===0)throw new _("想定されない状態",t);const n=await t.activator.waitSelectEntity(r,"墓地に送るモンスターを選択",i);if(!n){if(!i)throw new F(t);return}const s=t.activator.getExtraDeck().cardEntities.filter(c=>c.fusionMaterialInfos.filter(rt).some(u=>u.cardName===n.nm)),l=await t.activator.waitSelectEntity(s,"公開するモンスターを選択",i);if(!l)throw new _("想定されない状態",t);return t.activator.writeInfoLog(`公開：${l.toString()}`),await n.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),{sendToGraveyard:[n]}},prepare:C,execute:async t=>{const e=t.costInfo.sendToGraveyard;if(!e||!e.length)throw new _("コスト情報が取得できない",t);const i=e[0];return t.action.entity.statusOperatorBundle.push(new oe({title:t.action.title,validateAlive:a=>a.duel.clock.isSameTurn(a.isSpawnedAt),isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:(a,r)=>r.isOnFieldAsMonsterStrictly&&r.face==="FaceUp",statusCalculator:()=>({name:i.origin.name})})),!0},settle:async()=>!0}]}}const $s=Object.freeze(Object.defineProperty({__proto__:null,default:xf},Symbol.toStringTag,{value:"Module"}));function*Af(){yield{name:"封印されしエクゾディア",actions:[{title:"封印開放",isMandatory:!0,playType:"Exodia",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:le,executableDuelistTypes:["Controller"],canExecute:t=>t.activator.getHandCell().cardEntities.filter(i=>{var a;return(a=i.origin.nameTags)==null?void 0:a.includes("封印されし")}).map(i=>i.origin.name).getDistinct().length===5,prepare:async t=>(await S.sendManyToGraveyardForTheSameReason(t.activator.duel.field.getCardsOnFieldStrictly(),["Rule"],t.action.entity,t.activator),{selectedEntities:[],chainBlockTags:[],nextChainBlockFilter:()=>!1}),execute:async t=>{const e=t.activator.getOpponentPlayer().getHandCell().cardEntities.filter(a=>{var r;return(r=a.origin.nameTags)==null?void 0:r.includes("封印されし")}).map(a=>a.origin.name).getDistinct().length===5,i=[{name:"封印されし者の左足",column:4},{name:"封印されし者の右足",column:2},{name:"封印されし者の左腕",column:5},{name:"封印されし者の右腕",column:1},{name:"封印されしエクゾディア",column:3}];for(const a of i){const r=[t.activator.getHandCell().cardEntities.find(n=>n.origin.name===a.name),t.activator.getOpponentPlayer().getHandCell().cardEntities.find(n=>n.origin.name===a.name)].filter(n=>n!==void 0);if(!r.length)throw new _("想定されない状態",t.activator.getHandCell().cardEntities,a.name);await H.moveMany(r.map(n=>({entity:n,to:n.controller.getMonsterZones().find(s=>s.column===(n.controller.seat==="Above"?6-a.column:a.column))??n.controller.getFieldZone(),kind:"Monster",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:["Rule"],movedBy:void 0,actionOwner:void 0,chooser:void 0})))}throw e?new re(void 0,`お互いが、${t.action.entity.toString()}の特殊勝利条件を同時に満たした。`):new re(t.activator,`${t.activator.name}が${t.action.entity.toString()}の特殊勝利条件を満たした。`)},settle:async()=>!0}]}}const Us=Object.freeze(Object.defineProperty({__proto__:null,default:Af},Symbol.toStringTag,{value:"Module"}));function*Pf(){{const t=i=>{const a="selectedEntities"in i?i.selectedEntities:i.action.entity.field.getCells("Graveyard").flatMap(n=>n.cardEntities).filter(n=>n.isMonster).filter(n=>n.canBeTargetOfEffect(i));if(a.length<2)return;let r=[i.activator,i.activator.getOpponentPlayer()].map(n=>i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,a.map(s=>({monster:s,cells:n.getMonsterZones(),posList:k})),[],!1));if(!r.some(n=>!n.length)){if(r.every(n=>n.length===1)){if(r.flat().map(n=>n.monster.seq).getDistinct().length===1)return}else if(r.some(n=>n.length===1)){const n=r.filter(s=>s.length===1).flat().map(s=>s.monster);r=r.map(s=>s.length<2?s:s.filter(l=>!n.includes(l.monster)))}return r}},e=i=>i.activator.duel.field.getCells(...U).filter(a=>a.row===3||a.column===3).filter(a=>a.cardEntities.length).map(a=>a.cardEntities[0]).filter(a=>a.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action));yield{name:"真炎竜アルビオン",fusionMaterialInfos:[{type:"Name",cardName:"アルバスの落胤"},{type:"Filter",filter:i=>i.attr.includes("Light")&&i.types.includes("Spellcaster")}],actions:[{title:"②蘇生",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:Se,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canExecute:i=>!i.activator.isTurnPlayer&&!!t(i),prepare:async(i,a,r)=>{const n=t(i);if(!n)throw new _("想定されない状態");return{selectedEntities:await i.activator.waitSelectEntities(n.flat().map(l=>l.monster).getDistinct(),2,l=>l.length==2&&n.every(c=>c.map(u=>u.monster).some(u=>l.includes(u))),"蘇生するモンスターを選択。",r)}},execute:async i=>{if(i.selectedEntities.some(r=>r.wasMovedAfter(i.isActivatedAt)))return!1;const a=t(i);return a?(await i.activator.summonEachFields(i.activator,"SpecialSummon",["Effect"],i.action,a.flat(),[],!1,1,r=>r.length===1,!1),!0):!1},settle:async()=>!0},{title:"③自己再生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canPayCosts:i=>e(i).length===4,canExecute:i=>he(i,k,e(i).map(a=>({material:a,cell:a.cell,isAsEffectCost:!0})),["Effect"]),payCosts:async i=>{const a=e(i);return await S.releaseManyForTheSameReason(a,["Release","Cost"],i.action.entity,i.activator),{release:a}},prepare:C,execute:Pe,settle:async()=>!0}],continuousEffects:[nr("①対象耐性","Monster",i=>[i],i=>[st.createContinuous("①対象耐性",()=>!0,i,()=>!0,["EffectTarget"],(a,r)=>a.controller===r)])],summonFilter:(...i)=>{const[a,,,,r,,,n]=i,s={posList:[],cells:[]};return r.includes("FusionSummon")?n.some(l=>l.material===a.isSpawnedBy)?s:Ga(...i):Ga(...i)}}}}const js=Object.freeze(Object.defineProperty({__proto__:null,default:Pf},Symbol.toStringTag,{value:"Module"}));function*Mf(){{yield{name:"アルバスの落胤",actions:[{title:"融合",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:x,executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon","SpecialSummon"]},canPayCosts:Ut,payCosts:jt,...hi(["ExtraDeck"],()=>!0,["MonsterZone"],(t,e,i)=>i.includes(t.action.entity)&&i.every(a=>a===t.action.entity||a.controller!==t.activator),{requisitionFrom:U}),settle:async()=>!0}]};{const t=e=>{const i=[];return he(e,k,[],["Effect"])&&i.push("Hand"),(e.activator.canDraw||e.action.entity.cell.cellType==="Graveyard")&&i.push("Deck"),e.activator.getCells(...i).flatMap(a=>a.cardEntities).filter(a=>{var r;return a.nm==="アルバスの落胤"||((r=a.status.nameTags)==null?void 0:r.includes("烙印"))&&a.kind!=="Monster"}).filter(a=>a.canBeSentToGraveyard(e.activator,e.action.entity,"SendToGraveyardAsCost",e.action))};yield{name:"黒衣竜アルビオン",actions:[{title:"②自己特殊召喚or自己デッキバウンス",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand","Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,needsToPayRegularCost:!0,canPayCosts:e=>t(e).length>0,payCosts:async(e,i,a)=>{const r=await e.activator.waitSelectEntity(t(e),"墓地に送るカードを選択。",a);if(r)return e.data=r.cell.cellType,await r.sendToGraveyard(["Cost"],e.action.entity,e.activator),{sendToGraveyard:[r]}},prepare:async e=>{const i=[];return e.data==="Hand"?(i.push("SpecialSummon"),e.action.entity.cell.cellType==="Graveyard"&&i.push("SpecialSummonFromGraveyard")):e.data==="Deck"&&e.action.entity.cell.cellType==="Hand"&&i.push("Draw"),{chainBlockTags:i}},execute:async e=>{if(e.action.entity.wasMovedAfter(e.isActivatedAt))return!1;if(e.data==="Hand")return!!await e.activator.summon("SpecialSummon",["Effect"],e.action,e.action.entity,k,e.activator.getMonsterZones(),[],!1);if(e.data==="Deck"){const i=e.action.entity.cell.cellType==="Hand";return await e.action.entity.returnToDeck("Bottom",["Effect"],e.action.entity,e.activator),i&&await e.activator.draw(1,e.action.entity,e.activator),!0}throw new _(`${e.action.entity}の効果を不正な方法で実行しようとした。${e.data}`)},settle:async()=>!0}],continuousEffects:[{title:"①名称変更",appliableCellTypes:["MonsterZone","Graveyard"],appliableDuelPeriodKeys:le,faceList:sr,canStart:e=>e.isEffective&&!e.info.isPending&&!e.info.isDying,start:async e=>{const i=[new oe({title:"①名称変更",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:e,actionAttr:{},isApplicableTo:()=>!0,statusCalculator:()=>({name:"アルバスの落胤"})})],a=[e];return console.info(`start : ${e.toString()} ⇒ ${a.map(r=>r.toString()).join(" ")} (${i.map(r=>r.title).join(" ")})`),a.forEach(r=>i.forEach(r.statusOperatorBundle.push)),{targets:a,seqList:i.map(r=>r.seq)}},finish:async(e,i)=>{i.targets.forEach(a=>i.seqList.forEach(a.statusOperatorBundle.removeItem))}}]}}}}const zs=Object.freeze(Object.defineProperty({__proto__:null,default:Mf},Symbol.toStringTag,{value:"Module"})),Ea={},Ff=t=>(Ea[t]||(Ea[t]={title:`${t}自己セット`,isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,isNoticedForcibly:!0,meetsConditions:e=>{var a;const i=e.action.entity.moveLog.latestRecord;return!(!i.movedAs.includes("Cost")||((a=i.movedBy)==null?void 0:a.nm)!=="アルバスの落胤"||!e.activator.duel.clock.isSameTurn(i.movedAt))},canExecute:e=>e.activator.getAvailableSpellTrapZones().length?e.activator.canSet:!1,prepare:C,execute:async e=>{if(e.action.entity.wasMovedAfter(e.isActivatedAt))return!1;const i=e.activator.getAvailableSpellTrapZones();if(!i.length||!e.activator.canSet)return!1;const a=await e.activator.duel.view.waitSelectDestination(e.activator,e.action.entity,i,"セットする場所を選択。","セット",!1);if(!a)throw new F("配置場所選択",e);return await e.action.entity.setAsSpellTrap(a,e.action.entity.origin.kind,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0}),Ea[t]);function*Of(){yield{name:"白の烙印",actions:[{title:"①発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],()=>!0,["Hand","MonsterZone","ExtraMonsterZone","Graveyard"],(t,e,i)=>i.flatMap(a=>a.types??[]).includes("Dragon")&&(i.map(a=>a.nm).includes("アルバスの落胤")||!i.map(a=>a.cell.cellType).includes("Graveyard")))},Ff("②"),b]}}const Vs=Object.freeze(Object.defineProperty({__proto__:null,default:Of},Symbol.toStringTag,{value:"Module"}));function*Nf(){{const t=i=>!!(i.share||i.takeAll),e=(i,a,r)=>{var d;const n=r||i.activator.duel.field.getCells("Graveyard","Banished").flatMap(f=>f.cardEntities).filter(f=>f.isMonster).filter(f=>{var p;return!((p=f.status.monsterCategories)!=null&&p.includes("Fusion"))}).filter(f=>f.canBeTargetOfEffect(i));if(n.length<2)return;const s=!!((d=a.release)!=null&&d.flatMap(f=>f.fusionMaterialInfos).filter(rt).map(f=>f.cardName).includes("アルバスの落胤")),l=Ui.flatMap(f=>a[f]??[]).map(f=>({material:f,isAsEffectCost:!0,cell:f.cell})),c={};if(s){const f=i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,n.map(p=>({monster:p,cells:i.activator.getMonsterZones(),posList:["Defense"]})),l,!1);f.length>1&&f.flatMap(p=>p.cells).getDistinct().length>1&&(c.takeAll=f)}const u=[i.activator,i.activator.getOpponentPlayer()].map(f=>i.activator.getEnableSummonList(i.activator,"SpecialSummon",["Effect"],i.action,n.map(p=>({monster:p,cells:f.getMonsterZones(),posList:k})),l,!1));if(!u.some(f=>!f.length))if(u.every(f=>f.length===1))u.flat().map(f=>f.monster.seq).getDistinct().length!==1&&(c.share=u);else if(u.some(f=>f.length===1)){const f=u.filter(p=>p.length===1).flat().map(p=>p.monster);c.share=u.map(p=>p.length<2?p:p.filter(h=>!f.includes(h.monster)))}else c.share=u;return t(c)?c:void 0};yield{name:"分かつ烙印",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Quick",executableCells:["SpellAndTrapZone"],executablePeriods:x,executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],isOnlyNTimesPerTurn:1,canPayCosts:(...i)=>Yn(...i,(a,r,n)=>{var s;return!!((s=n.status.monsterCategories)!=null&&s.includes("Fusion"))}),canExecute:(i,a,r)=>r?!!e(i,r.costInfo):i.activator.getMonstersOnField().filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Fusion")}).filter(n=>n.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action)).some(n=>e(i,{release:[n]})),payCosts:async(i,a,r)=>{const n=await i.activator.waitSelectEntity(i.activator.getMonstersOnField().filter(s=>{var l;return(l=s.status.monsterCategories)==null?void 0:l.includes("Fusion")}).filter(s=>s.canBeReleased(i.activator,i.action.entity,["ReleaseAsCost"],i.action)).filter(s=>e(i,{release:[s]})),"リリースするモンスターを選択。",r);if(n)return await n.release(["Cost"],i.action.entity,i.activator),{release:[n]}},prepare:async(i,a,r)=>{const n=e(i,i.costInfo);if(!n)throw new _("想定されない状態");const s=[];return n.share&&s.push(...n.share.flat().map(c=>c.monster)),n.takeAll&&s.push(...n.takeAll.map(c=>c.monster)),{selectedEntities:await i.activator.waitSelectEntities(s.getDistinct(),2,c=>{if(c.length!==2)return!1;if(n.share&&n.share.every(u=>u.map(d=>d.monster).some(d=>c.includes(d))))return!0;if(n.takeAll){const u=n.takeAll;if(c.every(d=>u.map(f=>f.monster).includes(d)))return!0}return!1},"蘇生するモンスターを選択。",r)}},execute:async(i,a)=>{if(i.selectedEntities.some(s=>s.wasMovedAfter(i.isActivatedAt)))return!1;const r=e(i,i.costInfo,i.selectedEntities);if(!r)return!1;let n=!!r.takeAll;if(r.share&&r.takeAll&&(n=await i.activator.waitYesNo("自分の場に両方のモンスターを特殊召喚する？")),n)return Jn(i,a,{posList:["Defense"],allOrNothing:!0});if(!r.share)throw new _("想定されない状態");return await i.activator.summonEachFields(i.activator,"SpecialSummon",["Effect"],i.action,r.share.flat(),Ui.flatMap(s=>i.costInfo[s]??[]).map(s=>({material:s,isAsEffectCost:!0,cell:s.cell})),!1,1,s=>s.length===1,!1),!0},settle:async()=>!0},b]}}}const Ws=Object.freeze(Object.defineProperty({__proto__:null,default:Nf},Symbol.toStringTag,{value:"Module"}));function*Bf(){yield{name:"ファイアウォール・ドラゴン・シンギュラリティ",actions:[ur(t=>t.length>2),{title:"①バウンス＆自己強化",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,hasToTargetCards:!0,fixedTags:["BounceToHand"],canExecute:t=>[...t.activator.getGraveyard().cardEntities,...t.activator.getMonstersOnField()].flatMap(r=>r.status.monsterCategories??[]).getDistinct().union(["Ritual","Fusion","Synchro","Xyz"]).length<1?!1:[...t.activator.getOpponentPlayer().getGraveyard().cardEntities,...t.activator.getOpponentPlayer().getEntiteisOnField()].filter(r=>r.canBeTargetOfEffect(t)).length>0,prepare:async(t,e,i)=>{const r=[...t.activator.getGraveyard().cardEntities,...t.activator.getMonstersOnField()].flatMap(c=>c.status.monsterCategories??[]).getDistinct().union(["Ritual","Fusion","Synchro","Xyz"]).length;if(r<1)return;const n=[...t.activator.getOpponentPlayer().getGraveyard().cardEntities,...t.activator.getOpponentPlayer().getEntiteisOnField()].filter(c=>c.canBeTargetOfEffect(t));if(n.length<1)return;const s=n.length===1?1:void 0,l=await t.activator.waitSelectEntities(n,s,c=>c.length>0&&c.length<=r,"手札に戻すカードを選択。",i);if(l)return{selectedEntities:l}},execute:async t=>{const e=t.selectedEntities.filter(a=>a.isOnFieldStrictly||a.cell.cellType==="Graveyard").filter(a=>a.canBeEffected(t.activator,t.action.entity,t.action));await S.returnManyToHandForTheSameReason(e,["Effect"],t.action.entity,t.activator);const i=e.filter(a=>a.cell.cellType==="Hand"||a.cell.cellType==="ExtraDeck").length;return t.action.entity.numericOprsBundle.push(ne.createLingeringAddition(t.action.title,a=>a.isSpawnedBy.isEffective,t.action.entity,t.action,"attack",(a,r,n)=>n+500*i)),!0},settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:le,executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:t=>{const e=t.action.entity.moveLog.latestRecord.movedAt,i=t.action.duel.field.moveLog.getPriviousChainLog().filter(a=>a.entity.cell.cellType==="Graveyard"||a.movedAs.includes("Battle")&&a.movedAs.includes("Destroy")).filter(a=>a.movedAt.totalProcSeq>e.totalProcSeq).map(a=>a.entity.wasMovedFrom).toArray();return t.action.entity.linkArrowDests.union(i).length>0},...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>e.types.includes("Cyberse")).filter(e=>e.canBeTargetOfEffect(t))),settle:async()=>!0}]}}const Qs=Object.freeze(Object.defineProperty({__proto__:null,default:Bf},Symbol.toStringTag,{value:"Module"}));function*Lf(){yield{name:"融合",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],()=>!0,["Hand","MonsterZone","ExtraMonsterZone"],()=>!0)},b]};for(const t of[{name:"簡易融合",lvlUpperBound:5,filter:()=>!0},{name:"簡素融合",lvlUpperBound:6,filter:e=>{var i;return!((i=e.status.monsterCategories)!=null&&i.includes("Effect"))}}])yield{name:t.name,actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SpecialSummonFromExtraDeck"],canPayCosts:e=>e.activator.lp>=1e3,canExecute:e=>{const i=e.activator.getMonsterZones();return e.activator.getEnableSummonList(e.activator,"SpecialSummon",["Effect"],e.action,e.activator.getExtraDeck().cardEntities.filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Fusion")}).filter(r=>r.lvl&&r.lvl<=t.lvlUpperBound).filter(t.filter).map(r=>({monster:r,posList:k,cells:i})),[],!1).length>0},payCosts:(e,i)=>$t(e,i,1e3),prepare:C,execute:async e=>{var r;const i=e.activator.getMonsterZones(),a=await e.activator.summonOne(e.activator,"FusionSummon",["Effect"],e.action,e.activator.getExtraDeck().cardEntities.filter(n=>{var s;return(s=n.status.monsterCategories)==null?void 0:s.includes("Fusion")}).filter(n=>n.lvl&&n.lvl<=t.lvlUpperBound).filter(t.filter).map(n=>({monster:n,posList:k,cells:i})),[],!1,!1);return a?(a.statusOperatorBundle.push(new oe({title:"攻撃不可",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:e.action.entity,actionAttr:e.action,isApplicableTo:(n,s)=>s.face==="FaceUp"&&s.isOnFieldAsMonsterStrictly,statusCalculator:()=>({canAttack:!1})})),a.counterHolder.setSelfDestructionFlg(e.action.entity),a.info.isRebornable=!((r=a.origin.monsterCategories)!=null&&r.includes("RegularSpecialSummonOnly")),!0):!1},settle:async()=>!0},b,{title:"自壊",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,canExecute:e=>e.action.entity.field.getMonstersOnFieldStrictly().some(i=>i.counterHolder.getSelfDestructionFlg(e.action.entity)),prepare:C,execute:async e=>{const i=e.action.entity.field.getMonstersOnFieldStrictly().filter(r=>r.counterHolder.getSelfDestructionFlg(e.action.entity));if(!i.length)throw new _("想定されない状態",e);let a=i[0];if(i.length>1){const r=await e.activator.waitSelectEntity(i,"自壊させるカードを選択。",!1);if(!r)throw new F(e);a=r}return await S.tryDestroy([a],e),!0},settle:async()=>!0}]}}const Xs=Object.freeze(Object.defineProperty({__proto__:null,default:Lf},Symbol.toStringTag,{value:"Module"}));function*qf(){yield*["イグナイト・イーグル","イグナイト・マグナム","イグナイト・ドラグノフ","イグナイト・マスケット","イグナイト・デリンジャー","イグナイト・ライオット","イグナイト・ウージー","イグナイト・キャリバー"].map(t=>({name:t,actions:[lt,{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyMultiple","DestroyMultipleOnField","DestroySpellTrapOnField","DestroySpellTrapsOnField"],meetsConditions:e=>{var a;const i=e.activator.getPendulumScaleMonsters().find(r=>r!==e.action.entity);return!(!i||!((a=i.status.nameTags)!=null&&a.includes("イグナイト")))},canExecute:e=>e.activator.getDeckCell().cardEntities.some(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("イグナイト")}),prepare:async e=>({selectedEntities:[],chainBlockTags:["SearchFromDeck",...e.action.calcChainBlockTagsForDestroy(e.activator,e.activator.getPendulumScaleMonsters())],prepared:void 0}),execute:async e=>{if(!(await S.tryDestroy(e.activator.getPendulumScaleMonsters(),e)).length)return!1;const a=e.activator.getDeckCell().cardEntities.filter(n=>{var s;return(s=n.status.nameTags)==null?void 0:s.includes("イグナイト")});if(!a.length)return!1;const r=await e.activator.waitSelectEntity(a,"手札に加えるカードを選択。",!1);return r?(await r.addToHand(["Effect"],e.action.entity,e.activator),!0):!1},settle:async()=>!0}]}))}const Ks=Object.freeze(Object.defineProperty({__proto__:null,default:qf},Symbol.toStringTag,{value:"Module"}));function*Rf(){{const t=e=>e.activator.getGraveyard().cardEntities.filter(i=>i.kind==="Trap").filter(i=>i.status.trapCategory==="Normal").filter(i=>e.activator.canTryBanish(i,"BanishAsCost",e.action)).filter(i=>i.canBeBanished("BanishAsCost",e.activator,e.action.entity,e.action)).flatMap(i=>i.actions).filter(i=>i.playType==="CardActivation").filter(i=>!i.needsToPayRegularCosts).filter(i=>i.validate(e.activator,[],["IgnoreRegularCosts","CopyEffectOnly"],{executeBy:e.action.entity,costInfo:{banish:[e.action.entity]}}));yield{name:"ジャンク・コレクター",actions:[{title:"罠コピー",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],needsToPayRegularCost:!0,canPayCosts:e=>gi(e)&&t(e).length>0,payCosts:async(e,i,a)=>{const r=t(e).map(l=>l.entity),n=await e.activator.waitSelectEntity(r,"コピーする罠を選択。",a);if(!n)return;const s=[e.action.entity,n];return await S.banishManyForTheSameReason(s,["Cost"],e.action.entity,e.activator),{banish:s}},prepare:async(e,i)=>{var s;const a=(s=e.costInfo.banish)==null?void 0:s.find(l=>l!==e.action.entity);if(!a)throw new _("正規のコストを支払わずにジャンク・コレクターの効果処理を行おうとした。",e,e.costInfo);const r=a.actions.find(l=>l.playType==="CardActivation");if(!r)throw new _("カードの効果の発動を持たないカードをジャンク・コレクターでコピーしようとした。",e,e.costInfo,a);const n={...await r.prepare(e.activator,void 0,void 0,i,!1,!0)};return n.appendix=[`コピー対象：${a.toString()}`,...n.appendix??[]],n},execute:async(e,i)=>{var n;const a=(n=e.costInfo.banish)==null?void 0:n.find(s=>s!==e.action.entity);if(!a)throw new _("想定されない状況",e,e.costInfo);const r=a.actions.find(s=>s.playType==="CardActivation");if(!r)throw new _("想定されない状況",e,e.costInfo,a);return await r.execute(e,i,{indirectly:!0})},settle:async()=>!0}]}}}const Ys=Object.freeze(Object.defineProperty({__proto__:null,default:Rf},Symbol.toStringTag,{value:"Module"}));function*Hf(){yield{name:"ソーラー・エクスチェンジ",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","SendToGraveyardFromDeck","DiscordAsCost"],priorityForNPC:40,canPayCosts:(...t)=>Ut(...t,e=>{var i;return e.kind==="Monster"&&!!((i=e.status.nameTags)!=null&&i.includes("ライトロード"))}),canExecute:t=>t.activator.getDeckCell().cardEntities.length>3,payCosts:(...t)=>jt(...t,e=>{var i;return e.kind==="Monster"&&!!((i=e.status.nameTags)!=null&&i.includes("ライトロード"))}),prepare:async()=>({selectedEntities:[]}),execute:async t=>{await t.activator.draw(2,t.action.entity,t.activator),t.activator.duel.clock.incrementProcSeq();const e=t.activator.getDeckCell().cardEntities.slice(0,2);return await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},b]},yield{name:"光の援軍",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck"],priorityForNPC:40,canPayCosts:t=>t.activator.getDeckCell().cardEntities.length>3,canExecute:t=>t.activator.getDeckCell().cardEntities.filter(e=>e.kind==="Monster").filter(e=>(e.lvl??13)<5).some(e=>e.status.nameTags&&e.status.nameTags.includes("ライトロード")),payCosts:async t=>{const e=t.activator.getDeckCell().cardEntities.slice(0,3);return await S.sendManyToGraveyardForTheSameReason(e,["Cost"],t.action.entity,t.activator),{sendToGraveyard:e}},prepare:async()=>({selectedEntities:[]}),execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>(a.lvl??13)<5).filter(a=>a.status.nameTags&&a.status.nameTags.includes("ライトロード"));if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"手札に加えるモンスターを選択",!1);if(!i)throw new F(t);return await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},b]}}const Js=Object.freeze(Object.defineProperty({__proto__:null,default:Hf},Symbol.toStringTag,{value:"Module"}));function*Zf(){yield{name:"ライトロード・セイント ミネルバ",actions:[As(2,2),{title:"①墓地送り＆ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SendToGraveyardFromDeck"],isOnlyNTimesPerTurn:1,...gf(),canExecute:t=>t.activator.getDeckCell().cardEntities.length>2,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.slice(0,3);await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator);const i=e.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).length;return i&&await t.activator.draw(i,t.action.entity,t.activator),!0},settle:async()=>!0},{title:"②墓地送り＆破壊",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",needsByBattle:!0,needsByEffect:!0,needsByOpponent:!0,needsByDestory:!0},fixedTags:["SendToGraveyardFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.length>2,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.slice(0,3);await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator);const i=e.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).length;if(i){const a=i===1?1:void 0,r=await t.activator.waitSelectEntities(t.action.entity.field.getCardsOnFieldStrictly(),a,n=>n.length<=i,"カードを破壊する場合、破壊するカードを選択。",!0)??[];r.length&&await S.tryDestroy(r,t)}return!0},settle:async()=>!0}]}}const Is=Object.freeze(Object.defineProperty({__proto__:null,default:Zf},Symbol.toStringTag,{value:"Module"})),zi=(t,e)=>({title:`${t}墓地送り(${e})`,isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:i=>i.activator.isTurnPlayer,prepare:C,execute:async i=>{const a=i.activator.getDeckCell().cardEntities.slice(0,e);return await S.sendManyToGraveyardForTheSameReason(a,["Effect"],i.action.entity,i.activator),!0},settle:async()=>!0}),Gf=(t,e)=>({title:`${t}墓地送り(${e})`,isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,meetsConditions:i=>i.activator.duel.chainBlockLog.records.filter(a=>{var r;return(r=a.chainBlockInfo.action.entity.status.nameTags)==null?void 0:r.includes("ライトロード")}).filter(a=>a.chainBlockInfo.action.entity.kind==="Monster").filter(a=>a.chainBlockInfo.action.entity!==i.action.entity).filter(a=>a.chainBlockInfo.action.isWithChainBlock).filter(a=>i.activator.duel.clock.isPreviousChain(a.clock)).filter(a=>a.clock.totalProcSeq>i.action.entity.moveLog.latestRecord.movedAt.totalProcSeq).filter(a=>!a.chainBlockInfo.isNegatedActivationBy).some(a=>a.chainBlockInfo.activator===i.activator),prepare:C,execute:async i=>{const a=i.activator.getDeckCell().cardEntities.slice(0,e);return await S.sendManyToGraveyardForTheSameReason(a,["Effect"],i.action.entity,i.activator),!0},settle:async()=>!0});function*$f(){yield{name:"ライトロード・サモナー ルミナス",actions:[{title:"①蘇生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromGraveyard","DiscordAsCost"],canPayCosts:Ut,payCosts:jt,...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>(e.lvl??12)<5).filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")})),settle:async()=>!0},zi("②",3)]},yield{name:"トワイライトロード・シャーマン ルミナス",actions:[{title:"①蘇生帰還",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromGraveyard","DiscordAsCost"],...cr(t=>t.activator.getCells("Hand","Graveyard").flatMap(e=>e.cardEntities).filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}).filter(e=>e.kind==="Monster")),...He(t=>t.activator.getBanished().cardEntities.filter(e=>e.kind==="Monster").filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")})),settle:async()=>!0},Gf("②",3)]},yield{name:"ライトロード・メイデン ミネルバ",actions:[{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,triggerPattern:{triggerType:"Arrival",arrivalReasons:["NormalSummon"]},fixedTags:["SearchFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.filter(e=>e.attr.includes("Light")).filter(e=>e.types.includes("Dragon")).some(e=>e.lvl&&e.lvl<=t.activator.getGraveyard().cardEntities.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("ライトロード")}).filter(i=>i.kind).map(i=>i.nm).getDistinct().length),prepare:C,execute:async t=>{if(!t.activator.canAddToHandFromDeck)return!1;const e=t.activator.getDeckCell().cardEntities.filter(a=>a.attr.includes("Light")).filter(a=>a.types.includes("Dragon")).filter(a=>a.lvl&&a.lvl<=t.activator.getGraveyard().cardEntities.filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("ライトロード")}).filter(r=>r.kind).map(r=>r.nm).getDistinct().length),i=await t.activator.waitSelectEntity(e,"手札に加えるモンスターを選択",!1);return i?(await i.addToHand(["Effect"],t.action.entity,t.activator),!0):!1},settle:async()=>!0},{title:"②墓地送り",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck","Hand"]},fixedTags:["SendToGraveyardFromDeck"],prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities[0];return e?(await e.sendToGraveyard(["Effect"],t.action.entity,t.activator),!0):!1},settle:async()=>!0},zi("③",2)]}}const el=Object.freeze(Object.defineProperty({__proto__:null,default:$f},Symbol.toStringTag,{value:"Module"}));function*Uf(){yield{name:"ライトロード・アサシン ライデン",actions:[{title:"①墓地送り＆自己強化",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canExecute:t=>t.activator.getDeckCell().cardEntities.length>1,prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.slice(0,2);await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator);const i=e.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).length;return i&&t.action.entity.numericOprsBundle.push(ne.createLingeringAddition(t.action.title,a=>a.isSpawnedBy.isEffective&&a.duel.clock.turn-a.isSpawnedAt.turn<2,t.action.entity,t.action,"attack",(a,r,n)=>n+200*i)),!0},settle:async()=>!0},zi("②",2)]},yield{name:"ライトロード・ビースト ウォルフ",actions:[{title:"①自己再生",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck"]},fixedTags:["SpecialSummonFromGraveyard"],canExecute:t=>he(t,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}]},yield{name:"ライトロード・アーチャー フェリス",actions:[{title:"①自己再生",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:["Deck"],needsByEffect:!0,causerFilter:(t,e)=>e.kind==="Monster"},fixedTags:["SpecialSummonFromGraveyard"],canExecute:t=>he(t,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0},{title:"②モンスター破壊＆墓地送り",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyMonsterOnField","DestroyOnOpponentField","DestroyOnField"],canPayCosts:fa,canExecute:t=>t.activator.getDeckCell().cardEntities.length>2,payCosts:pa,...De(t=>t.activator.getOpponentPlayer().getMonstersOnField().filter(e=>e.canBeTargetOfEffect(t)),{do:"Destroy"}),execute:async t=>{if(t.selectedEntities.every(a=>!a.isOnField)||!await S.tryDestroy(t.selectedEntities,t))return!1;t.activator.duel.clock.incrementProcSeq();const i=t.activator.getDeckCell().cardEntities.slice(0,3);return await S.sendManyToGraveyardForTheSameReason(i,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0}]},yield{name:"光道の龍",actions:[{title:"①自己特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand","SpecialSummon"],isOnlyNTimesPerTurn:1,canExecute:t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").some(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}),prepare:C,execute:Pe,settle:async()=>!0},{title:"②墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,triggerPattern:{triggerType:"Arrival",arrivalReasons:["SpecialSummon"]},fixedTags:["SendToGraveyardFromDeck","IfSpecialSummonSucceed"],canExecute:t=>t.activator.getDeckCell().cardEntities.filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}).some(e=>e.nm!=="光道の龍"),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("ライトロード")}).filter(a=>a.nm!=="光道の龍");if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"墓地に送るカードを選択",!1);if(!i)throw new F(t);return await i.sendToGraveyard(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure"},isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck"],canExecute:t=>t.activator.getDeckCell().cardEntities.some(e=>e.atk===3e3&&e.def===2600),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.atk===3e3&&a.def===2600),i=await t.activator.waitSelectEntity(e,"手札に加えるモンスターを選択",!1);return i?(await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0}]},yield{name:"ライトロード・デーモン ヴァイス",actions:[{title:"①自己特殊召喚",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand"],isOnlyNTimesPerTurn:1,canPayCosts:t=>t.activator.getHandCell().cardEntities.length>1,canExecute:t=>t.activator.getDeckCell().cardEntities.length>1,payCosts:async(t,e,i)=>{const a=t.activator.getHandCell().cardEntities.filter(n=>n!==t.action.entity),r=await t.activator.waitSelectEntity(a,"デッキトップに戻すカードを一枚選択。",i);if(!r)throw new F(t);return await r.returnToDeck("Top",["Cost"],t.action.entity,t.activator),{returnToDeck:[r]}},prepare:C,execute:async t=>{if(!await Pe(t))return!1;t.activator.duel.clock.incrementProcSeq();const e=t.activator.getDeckCell().cardEntities.slice(0,2);return await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,triggerPattern:{triggerType:"Departure",from:["Deck"]},fixedTags:["SpecialSummonFromGraveyard"],...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}).filter(e=>e.nm!=="ライトロード・デーモン ヴァイス")),settle:async()=>!0}]},yield{name:"ライトロード・マジシャン ライラ",actions:[{title:"③魔法罠破壊",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyOnField","DestroySpellTrapOnField"],...De(t=>t.activator.getOpponentPlayer().getSpellTrapsOnField().filter(e=>e.canBeTargetOfEffect(t)),{message:"破壊する対象を選択。",do:"Destroy",canExecute:t=>t.action.entity.battlePosition==="Attack"}),execute:async t=>(t.action.entity.battlePosition==="Attack"&&(await S.tryDestroy(t.selectedEntities,t),await t.action.entity.setBattlePosition("Defense",["Effect"],t.action.entity,t.activator)),t.action.entity.statusOperatorBundle.push(new oe({title:"表示形式変更不可",validateAlive:e=>e.duel.clock.turn-e.isSpawnedAt.turn<3,isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:()=>!0,statusCalculator:()=>({canBattlePositionChange:!1})})),!0),settle:async()=>!0},zi("②",3)]}}const tl=Object.freeze(Object.defineProperty({__proto__:null,default:Uf},Symbol.toStringTag,{value:"Module"}));function*jf(){yield{name:"ライトロード・アテナ ミネルバ",actions:[me(),{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,triggerPattern:{triggerType:"Arrival",arrivalReasons:["SynchroSummon"]},canExecute:t=>t.activator.getDeckCell().cardEntities.filter(e=>e.kind==="Monster").some(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")})&&t.action.entity.info.materials.map(e=>e.material).filter(e=>e.kind==="Monster").some(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}),prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(n=>n.kind==="Monster").filter(n=>{var s;return(s=n.status.nameTags)==null?void 0:s.includes("ライトロード")});if(!e.length)return!1;const i=t.action.entity.info.materials.map(n=>n.material).filter(n=>n.kind==="Monster").filter(n=>{var s;return(s=n.status.nameTags)==null?void 0:s.includes("ライトロード")}).length,a=i===1?1:void 0,r=await t.activator.waitSelectEntities(e,a,n=>n.length>0&&n.length<=i&&n.length===n.flatMap(s=>s.types).getDistinct().length,"墓地に送るカードを選択",!1);if(!r)throw new F(t);return await S.sendManyToGraveyardForTheSameReason(r,["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"③墓地送り",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,needsToPayRegularCost:!0,...cr(t=>t.activator.getGraveyard().cardEntities.filter(e=>e.kind==="Monster").filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("ライトロード")}),(t,e)=>t.length>0&&t.length<5&&t.length<=e.activator.getDeckCell().cardEntities.length,1,4),canExecute:t=>t.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async t=>{var a;const e=((a=t.costInfo.banish)==null?void 0:a.length)??0;if(!e)throw new _(`${t.action.entity}の効果を不正な方法で実行しようとした。${t.costInfo}`);const i=t.activator.getDeckCell().cardEntities.slice(0,e);return await S.sendManyToGraveyardForTheSameReason(i,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0}],continuousEffects:[xc("②除外不可","Monster",t=>[st.createContinuous("②除外不可",e=>e.isSpawnedBy.isOnFieldStrictly&&e.isSpawnedBy.face==="FaceUp",t,(e,i)=>{var a;return i.controller===e.isSpawnedBy.controller&&!!((a=i.status.nameTags)!=null&&a.includes("ライトロード"))&&i.isOnFieldAsMonsterStrictly&&i.face==="FaceUp"},["BanishAsEffect"],()=>!1)])]}}const il=Object.freeze(Object.defineProperty({__proto__:null,default:jf},Symbol.toStringTag,{value:"Module"}));function*zf(){for(const t of["メタルフォーゼ・ゴルドライバー","メタルフォーゼ・シルバード","メタルフォーゼ・スティエレン","メタルフォーゼ・ヴォルフレイム"])yield{name:t,actions:[lt,{title:"①サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["Destroy"],...De(e=>{let i=e.activator.getEntiteisOnField().filter(a=>a.face==="FaceUp").filter(a=>a.canBeTargetOfEffect(e)).filter(a=>a!==e.action.entity);return e.activator.getAvailableSpellTrapZones.length||(i=i.filter(a=>a.cell.cellType==="SpellAndTrapZone")),i},{message:"破壊するカードを選択。",do:"Destroy",canExecute:e=>e.activator.canSet&&e.activator.getDeckCell().cardEntities.filter(i=>i.kind==="Spell"||i.kind==="Trap").some(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("メタルフォーゼ")})}),execute:async e=>{if(!(await S.tryDestroy(e.selectedEntities,e)).length||!e.activator.canSet)return!1;const a=e.activator.getAvailableSpellTrapZones();if(!a.length)return!1;const r=e.activator.getDeckCell().cardEntities.filter(l=>l.kind==="Spell"||l.kind==="Trap").filter(l=>{var c;return(c=l.status.nameTags)==null?void 0:c.includes("メタルフォーゼ")});if(!r.length)return!1;const n=await e.activator.waitSelectEntity(r,"セットするカードを選択。",!1);if(!n)return!1;const s=await e.activator.duel.view.waitSelectDestination(e.activator,n,a,"セットする先を選択","セット",!1);if(!s)throw new F("セット先選択",e);return await n.setAsSpellTrap(s,n.kind,["Effect"],e.action.entity,e.activator),!0},settle:async()=>!0}]}}const al=Object.freeze(Object.defineProperty({__proto__:null,default:zf},Symbol.toStringTag,{value:"Module"}));function*Vf(){yield{name:"錬装融合",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],...hi(["ExtraDeck"],(t,e)=>{var i;return!!((i=e.status.nameTags)!=null&&i.includes("メタルフォーゼ"))},["Hand","MonsterZone","ExtraMonsterZone"],()=>!0)},{title:"②ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw,prepare:async t=>(await t.action.entity.returnToDeck("Random",["Effect"],t.action.entity,t.activator),{selectedEntities:[],chainBlockTags:["Draw"]}),execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),!0),settle:async()=>!0},b]}}const rl=Object.freeze(Object.defineProperty({__proto__:null,default:Vf},Symbol.toStringTag,{value:"Module"}));function*Wf(){yield{name:"ダーク・リゾネーター",actions:[],substituteEffects:[qd(1)]},yield{name:"レッド・リゾネーター",actions:[{title:"①特殊召喚",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromHand","IfNormarlSummonSucceed","SpecialSummon"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["NormalSummon"]),canExecute:t=>{const e=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,t.activator.getHandCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>(a.lvl??12)<5).map(a=>({monster:a,posList:k,cells:e})),[],!1).length>0},prepare:C,execute:async t=>{const e=t.activator.getMonsterZones(),i=t.activator.getHandCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>(r.lvl??12)<5).map(r=>({monster:r,posList:k,cells:e}));return!!await t.activator.summonOne(t.activator,"SpecialSummon",["Effect"],t.action,i,[],!1,!1)},settle:async()=>!0},{title:"②回復",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["SpecialSummon"]),...De(t=>t.activator.getMonstersOnField().filter(e=>e.canBeTargetOfEffect(t)).filter(e=>(e.atk??0)>0).filter(e=>e.info.summonKinds.includes("SpecialSummon")),{message:"対象モンスターを選択。"}),execute:async t=>{const e=t.activator.lp;return t.selectedEntities.filter(i=>i.isOnFieldAsMonsterStrictly).forEach(i=>t.activator.heal(i.atk??0,t.action.entity)),t.activator.lp!==e},settle:async()=>!0}]}}const nl=Object.freeze(Object.defineProperty({__proto__:null,default:Wf},Symbol.toStringTag,{value:"Module"})),zr=(t,e)=>{const i=e?`魔力充填可能(${e})`:"魔力充填可能";return ri(i,t,a=>[a],a=>[new oe({title:i,validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:a,actionAttr:{},isApplicableTo:(r,n)=>r.isSpawnedBy===n,statusCalculator:(r,n,s)=>(s.maxCounterQty.SpellCounter=e??Number.MAX_VALUE,{maxCounterQty:s.maxCounterQty})})])},ba={},Qf=(t,e=1)=>(ba[e]||(ba[e]={title:`魔力回収(${e})`,isMandatory:!0,playType:"AfterChainBlock",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:le,executableDuelistTypes:["Controller"],canExecute:i=>!!(i.targetChainBlock&&i.targetChainBlock.action.playType==="CardActivation"&&i.targetChainBlock.action.entity.kind==="Spell"&&i.action.entity.isEffective&&i.action.entity.face==="FaceUp"&&i.action.entity.counterHolder.getQty("SpellCounter")<(i.action.entity.status.maxCounterQty.SpellCounter??0)&&i.action.entity.hadArrivedToFieldAt().totalProcSeq<=i.targetChainBlock.isActivatedAt.totalProcSeq),prepare:C,execute:async i=>i.action.entity.face==="FaceDown"||!i.action.entity.isOnFieldAsMonsterStrictly||!i.action.entity.isEffective?!1:(i.action.entity.counterHolder.add("SpellCounter",e,i.action.entity),!0),settle:async()=>!0}),{...ba[e],title:`${t}魔力回収(${e})`}),$a=(t,e,i)=>t.action.entity.counterHolder.getQty("SpellCounter")>=i,Ua=(t,e,i,a)=>{const r=a[0];return t.action.entity.counterHolder.remove("SpellCounter",r),{counter:r}};function*Xf(){yield{name:"魔導戦士 ブレイカー",actions:[{title:"①魔力充填",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["IfNormarlSummonSucceed"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["NormalSummon"]),prepare:C,execute:async t=>t.action.entity.face==="FaceDown"?!1:(t.action.entity.counterHolder.setQty("SpellCounter",1,t.action.entity),!0),settle:async()=>!0},{title:"③マナブレイク",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["Destroy","DestroyOnField","DestroySpellTrapOnField"],canPayCosts:(t,e)=>$a(t,e,1),payCosts:async(t,e,i)=>Ua(t,e,i,[1]),...De(t=>t.activator.duel.field.getSpellTrapsOnFieldStrictly().filter(e=>e.canBeTargetOfEffect(t)),{message:"破壊する対象を選択。",do:"Destroy"}),execute:async t=>t.selectedEntities.every(e=>!e.isOnFieldAsSpellTrapStrictly)?!1:(await S.tryDestroy(t.selectedEntities,t),!0),settle:async()=>!0}],continuousEffects:[zr("Monster",1),fi("②攻撃力上昇","Monster",t=>[t],t=>[ne.createContinuous("②攻撃力上昇",()=>!0,t,()=>!0,"attack","wip","Addition",(e,i,a)=>e.isEffective?a+e.counterHolder.getQty("SpellCounter")*300:a)])]},yield{name:"王立魔法図書館",actions:[{...Qf("①",1)},{title:"②ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:(t,e)=>$a(t,e,3),canExecute:t=>t.activator.getDeckCell().cardEntities.length>0,payCosts:async(t,e,i)=>Ua(t,e,i,[3]),prepare:C,execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),!0),settle:async()=>!0}],continuousEffects:[zr("Monster",3)]}}const sl=Object.freeze(Object.defineProperty({__proto__:null,canPaySpellCounters:$a,default:Xf,paySpellCounters:Ua},Symbol.toStringTag,{value:"Module"}));function*Kf(){yield{name:"スターダスト・ドラゴン",actions:[me(),{title:"①ヴィクテム・サンクチュアリ",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["MonsterZone","ExtraMonsterZone"],executablePeriods:le,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:fa,canExecute:t=>!!(t.targetChainBlock&&t.targetChainBlock.action.isWithChainBlock&&t.targetChainBlock.chainBlockTags.includes("DestroyOnField")),payCosts:pa,prepare:async t=>{if(!t.targetChainBlock)throw new _("想定されない状態",t);return{selectedEntities:[],chainBlockTags:t.action.calcChainBlockTagsForDestroy(t.activator,[t.targetChainBlock.action.entity]),prepared:void 0}},execute:async(t,e)=>{const i=e[t.index-1];return i.isNegatedActivationBy=t.action,await S.tryDestroy([i.action.entity],t),!0},settle:async()=>!0},{title:"②自己再生",playType:"IgnitionEffect",isMandatory:!1,spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["end"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromGraveyard"],canExecute:t=>{const e=t.action.entity.moveLog.latestRecord;if(e.movedBy!==t.action.entity||!t.activator.duel.clock.isSameTurn(e.movedAt)||!e.movedAs.includes("Cost"))return!1;const i=t.activator.duel,a=t.action.entity.actionLogRecords.filter(r=>i.clock.isSameTurn(r.clock)).map(r=>r.chainBlockInfo).findLast(r=>r.action.title==="①ヴィクテム・サンクチュアリ");return!a||a.state!=="done"?!1:he(t,k,[],["Effect"])},prepare:C,execute:Pe,settle:async()=>!0}]},yield{name:"閃珖竜 スターダスト",actions:[me(),{title:"波動音壁",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,...De(t=>t.activator.getEntiteisOnField().filter(e=>e.face==="FaceUp").filter(e=>e.canBeTargetOfEffect(t))),execute:async t=>(t.selectedEntities.filter(e=>e.isOnFieldStrictly).filter(e=>e.face==="FaceUp").filter(e=>e.canBeEffected(t.activator,t.action.entity,t.action)).forEach(e=>{e.counterHolder.add("SonicBarrier",1,t.action.entity)}),!0),settle:async()=>!0}],substituteEffects:[{title:"波動音壁（適用）",playType:"LingeringEffect",isMandatory:!0,executableCells:Me,executablePeriods:le,executableDuelistTypes:["Controller"],isApplicableTo:(t,e,i)=>i.filter(a=>a.counterHolder.getQty("SonicBarrier",t.entity)>0),substitute:async(t,e,i)=>{const a=i.filter(r=>r.counterHolder.getQty("SonicBarrier",t.entity)>0);return a.forEach(r=>{r.counterHolder.removeAll("SonicBarrier",t.entity),t.entity.controller.writeInfoLog(`波動音壁により${r.toString()}は１ターンに１度だけ戦闘効果では破壊されない。`)}),a}}]},yield{name:"真閃珖竜 スターダスト・クロニクル",actions:[me(t=>t.length===1&&t.every(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")}),t=>t.length>0&&t.every(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")})),{title:"波動護魂",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,...cr(t=>t.activator.getGraveyard().cardEntities.filter(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")})),prepare:C,execute:async t=>(t.action.entity.procFilterBundle.push(st.createLingering(t.action.title,e=>e.duel.clock.isSameTurn(e.isSpawnedAt),t.action.entity,t.action,()=>!0,["Effect"],()=>!1)),!0),settle:async()=>!0},{title:"②蘇生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain&&t.action.entity.moveLog.latestRecord.actionOwner!==t.activator&&(t.action.entity.wasMovedFrom.owner===t.activator||t.action.entity.wasMovedFrom.cellType==="ExtraMonsterZone"),...He(t=>t.activator.getBanished().cardEntities.filter(e=>e.kind==="Monster").filter(e=>e.face==="FaceUp").filter(e=>e.types.includes("Dragon")).filter(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")}).filter(e=>e.canBeTargetOfEffect(t))),settle:async()=>!0}]},yield{name:"聖珖神竜 スターダスト・シフル",actions:[me(t=>t.length===1&&t.every(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")}),t=>t.length>1&&t.every(e=>{var i;return(i=e.status.monsterCategories)==null?void 0:i.includes("Synchro")})),{title:"②珖波動反撃",isMandatory:!1,playType:"QuickEffect",spellSpeed:"Quick",executableCells:["Hand"],executablePeriods:x,executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,negatePreviousBlock:!0,fixedTags:["NegateCardEffect","DestroyOnField"],canExecute:t=>!!(t.targetChainBlock&&t.targetChainBlock.action.entity.isMonster&&t.targetChainBlock.action.isWithChainBlock&&t.activator!==t.targetChainBlock.activator),prepare:C,execute:async t=>{if(!t.targetChainBlock)return!1;const e=t.targetChainBlock;e.isNegatedEffectBy=t.action;const i=await t.activator.waitSelectEntity(t.action.duel.field.getCardsOnFieldStrictly(),"破壊するカードを選択。",!1);return(await S.tryDestroy(i?[i]:[],t)).length>0},settle:async()=>!0},{title:"③蘇生",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],priorityForNPC:10,fixedTags:["SpecialSummonFromGraveyard"],canPayCosts:gi,payCosts:da,...He(t=>t.activator.getGraveyard().cardEntities.filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("スターダスト")}).filter(e=>(e.lvl??12)<9)),settle:async()=>!0}],substituteEffects:[{title:"波動聖句",playType:"ContinuousEffect",isMandatory:!0,executableCells:["MonsterZone"],executablePeriods:le,executableDuelistTypes:["Controller"],isApplicableTo:(t,e,i)=>i.filter(a=>a.controller===t.entity.controller).filter(a=>a.counterHolder.getQty("SonicVerse",t.entity)===0),substitute:async(t,e,i)=>{if(!t.entity.isEffective)return[];const a=i.filter(r=>r.controller===t.entity.controller).filter(r=>r.counterHolder.getQty("SonicVerse",t.entity)===0);return a.forEach(r=>{r.counterHolder.add("SonicVerse",1,t.entity),t.entity.controller.writeInfoLog(`${t.entity.toString()}の効果により${r.toString()}は１ターンに１度だけ破壊されない。`)}),a}}]}}const ll=Object.freeze(Object.defineProperty({__proto__:null,default:Kf},Symbol.toStringTag,{value:"Module"}));function*Yf(){yield{name:"調律",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["SearchFromDeck","SendToGraveyardFromDeck"],priorityForNPC:40,canExecute:t=>{const e=t.activator.getDeckCell().cardEntities;return e.length<2?!1:e.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("シンクロン")}).some(i=>{var a;return(a=i.status.monsterCategories)==null?void 0:a.includes("Tuner")})},prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities;if(e.length<2)return!1;const i=e.filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("シンクロン")}).filter(r=>{var n;return(n=r.status.monsterCategories)==null?void 0:n.includes("Tuner")});if(i.length===0)return!1;const a=await t.activator.waitSelectEntity(i,"手札に加えるモンスターを選択",!1);if(!a)throw new F(t);return await a.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),t.activator.duel.clock.incrementProcSeq(),await t.activator.getDeckCell().cardEntities[0].sendToGraveyard(["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},b]}}const ol=Object.freeze(Object.defineProperty({__proto__:null,default:Yf},Symbol.toStringTag,{value:"Module"}));function*Jf(){yield{name:"フォーミュラ・シンクロン",actions:[me(),{title:"①ドロー",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],fixedTags:["Draw","IfSpecialSummonSucceed"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["SynchroSummon"],k,!0),canExecute:t=>t.activator.canDraw&&t.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),!0),settle:async()=>!0},ds({title:"②シンクロ召喚",isOnlyNTimesPerChain:1})]}}const cl=Object.freeze(Object.defineProperty({__proto__:null,default:Jf},Symbol.toStringTag,{value:"Module"}));function*If(){yield{name:"トゥーン・ワールド",actions:[{...lt,canPayCosts:t=>t.activator.lp>=1e3,payCosts:(t,e)=>$t(t,e,1e3)},b]}}const ul=Object.freeze(Object.defineProperty({__proto__:null,default:If},Symbol.toStringTag,{value:"Module"}));function*ep(){yield{name:"無の煉獄",actions:[{title:"発動",isMandatory:!1,playType:"CardActivation",spellSpeed:"Normal",executableCells:["Hand","SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],fixedTags:["Draw","DiscordAsEffect"],meetsConditions:t=>t.activator.getHandCell().cardEntities.length>2,canExecute:t=>t.activator.canDraw&&t.activator.status.canDiscardAsEffect&&t.activator.getDeckCell().cardEntities.length>0,prepare:C,execute:async t=>(await t.activator.draw(1,t.action.entity,t.activator),t.activator.entity.counterHolder.add("IntoTheVoid",1,t.action.entity),!0),settle:async()=>!0},{title:"手札抹殺",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:Me,executablePeriods:["end"],executableDuelistTypes:Gt,meetsConditions:t=>t.activator.entity.counterHolder.getQty("IntoTheVoid",t.action.entity)>0,prepare:C,execute:async t=>(await S.discardManyForTheSameReason(t.activator.getHandCell().cardEntities,["Effect"],t.action.entity,t.activator),t.activator.entity.counterHolder.remove("IntoTheVoid",1,t.action.entity),!0),settle:async()=>!0},b]}}const dl=Object.freeze(Object.defineProperty({__proto__:null,default:ep},Symbol.toStringTag,{value:"Module"}));function*tp(){yield{name:"星杯の妖精リース",actions:[{title:"①サーチ",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,fixedTags:["SearchFromDeck"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["NormalSummon","SpecialSummon"]),canExecute:t=>t.activator.canAddToHandFromDeck&&t.activator.getDeckCell().cardEntities.filter(e=>e.kind==="Monster").some(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("星杯")}),prepare:async t=>{const e=t.action.entity.hasBeenArrivalNow(["NormalSummon"])?["IfNormarlSummonSucceed"]:["IfSpecialSummonSucceed"];return{selectedEntities:[],chainBlockTags:e}},execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(a=>a.kind==="Monster").filter(a=>{var r;return(r=a.status.nameTags)==null?void 0:r.includes("星杯")});if(e.length===0)return!1;const i=await t.activator.waitSelectEntity(e,"手札に加えるモンスターを選択",!1);if(!i)throw new _("想定されない状態",t);return await i.addToHand(["Effect"],t.action.entity,t.activator),t.activator.getDeckCell().shuffle(),!0},settle:async()=>!0},{title:"②自己サルベージ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurn:1,canPayCosts:t=>[...t.activator.getMonstersOnField(),...t.activator.getHandCell().cardEntities.filter(e=>e.kind==="Monster")].some(e=>e.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsCost",t.action)),payCosts:async t=>{const e=[...t.activator.getMonstersOnField(),...t.activator.getHandCell().cardEntities.filter(a=>a.kind==="Monster")].filter(a=>a.canBeSentToGraveyard(t.activator,t.action.entity,"SendToGraveyardAsCost",t.action)),i=await t.activator.waitSelectEntity(e,"墓地に送るモンスターを選択。",!0);if(i)return await i.sendToGraveyard(["Cost"],t.action.entity,t.activator),{sendToGraveyard:[i]}},fixedTags:["SearchFromDeck"],prepare:C,execute:async t=>t.action.entity.wasMovedAfter(t.isActivatedAt)?!1:(await t.action.entity.addToHand(["Effect"],t.action.entity,t.activator),!0),settle:async()=>!0}]},yield{name:"星遺物－『星杯』",actions:[{title:"①墓地送り",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],canPayCosts:fa,canExecute:t=>t.activator.duel.field.moveLog.getPriviousChainLog().filter(e=>e.movedAs.includes("SpecialSummon")).map(e=>e.entity).some(e=>e.wasMovedFrom.cellType==="ExtraDeck"),payCosts:pa,prepare:C,execute:async t=>{const e=t.activator.duel.field.moveLog.getPriviousChainLog().filter(i=>i.movedAs.includes("SpecialSummon")).map(i=>i.entity).filter(i=>i.wasMovedFrom.cellType==="ExtraDeck").filter(i=>i.isOnFieldAsMonsterStrictly).filter(i=>i.canBeEffected(t.activator,t.action.entity,t.action)).toArray();return await S.sendManyToGraveyardForTheSameReason(e,["Effect"],t.action.entity,t.activator),!0},settle:async()=>!0},{title:"②リクルート",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Hand","Graveyard","Banished"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain&&t.action.entity.info.summonKinds.includes("NormalSummon")&&t.action.entity.moveLog.previousPlaceRecord.face==="FaceUp",canExecute:t=>{const e=t.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("星杯")}).filter(r=>r.nm!=="星遺物－『星杯』"),i=t.activator.getMonsterZones(),a=t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,cells:i,posList:k})),[],!1);return a.length>1&&a.flatMap(r=>r.cells).getDistinct().length>1},prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>{var n;return(n=r.status.nameTags)==null?void 0:n.includes("星杯")}).filter(r=>r.nm!=="星遺物－『星杯』"),i=t.activator.getMonsterZones();return(await t.activator.summonMany(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,cells:i,posList:k})),[],!1,2,r=>r.length==2,!1)??[]).length?(t.activator.getDeckCell().shuffle(),!0):!1},settle:async()=>!0},{title:"③サーチ",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],canPayCosts:gi,meetsConditions:t=>!t.action.entity.wasMovedAtCurrentTurn,canExecute:t=>t.activator.canAddToHandFromDeck&&t.activator.getDeckCell().cardEntities.filter(e=>{var i;return(i=e.status.nameTags)==null?void 0:i.includes("星遺物")}).length>0,payCosts:da,fixedTags:["SearchFromDeck"],prepare:C,execute:async t=>{const e=await t.activator.waitSelectEntity(t.activator.getDeckCell().cardEntities.filter(i=>{var a;return(a=i.status.nameTags)==null?void 0:a.includes("星遺物")}),"手札に加えるカードを選択",!1);return e?(await e.addToHand(["Effect"],t.action.entity,t.activator),!0):!1},settle:async()=>!0}]}}const fl=Object.freeze(Object.defineProperty({__proto__:null,default:tp},Symbol.toStringTag,{value:"Module"}));function*ip(){yield{name:"ドットスケーパー",actions:[{title:"①自己再生",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Graveyard"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,actionGroupName:"ドットスケーパー",fixedTags:["SpecialSummonFromGraveyard"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain&&t.action.entity.wasMovedFrom.cellType!=="Banished",canExecute:t=>he(t,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0},{title:"②自己帰還",isMandatory:!1,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,actionGroupName:"ドットスケーパー",fixedTags:["SpecialSummonFromBanished"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousChain,canExecute:t=>he(t,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}]}}const pl=Object.freeze(Object.defineProperty({__proto__:null,default:ip},Symbol.toStringTag,{value:"Module"}));function*ap(){yield{name:"ゼラの天使",actions:[me(),{title:"②自己帰還",isMandatory:!0,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["Banished"],executablePeriods:["stanby"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],fixedTags:["SpecialSummonFromBanished"],meetsConditions:t=>t.action.entity.wasMovedAtPreviousTurn,canExecute:t=>he(t,k,[],["Effect"]),prepare:C,execute:Pe,settle:async()=>!0}],continuousEffects:[fi("②攻撃力上昇","Monster",t=>[t],t=>[ne.createContinuous("①攻撃力上昇",()=>!0,t,()=>!0,"attack","wip","Addition",(e,i,a)=>e.isEffective?a+e.controller.getOpponentPlayer().getBanished().cardEntities.length*100:a)])]}}const gl=Object.freeze(Object.defineProperty({__proto__:null,default:ap},Symbol.toStringTag,{value:"Module"}));function*rp(){yield{name:"死霊騎士デスカリバー・ナイト",actions:[{title:"①モンスター効果無効",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Quick",executableCells:U,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],negatePreviousBlock:!0,canPayCosts:fa,canExecute:t=>!!(t.targetChainBlock&&t.targetChainBlock.action.entity.isMonster&&t.targetChainBlock.action.isWithChainBlock),payCosts:pa,prepare:async(t,e)=>{const i=t.targetChainBlock,a=e[t.index-1];return i!==a?{selectedEntities:[]}:{selectedEntities:[],chainBlockTags:["NegateCardEffect",...t.action.calcChainBlockTagsForDestroy(t.activator,[i.action.entity])],prepared:void 0}},execute:async(t,e)=>{const i=e.find(r=>r.action.entity.isMonster&&r.action.isWithChainBlock),a=e[t.index-1];return a!==i?!1:(a.isNegatedActivationBy=t.action,await S.tryDestroy([a.action.entity],t),!0)},settle:async()=>!0}]},yield{name:"Ｇ・コザッキー",actions:[{title:"自滅ダメージ",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:ca,executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],triggerPattern:{triggerType:"Departure",from:Se},meetsConditions:t=>t.action.entity.moveLog.previousPlaceRecord.face==="FaceUp",prepare:async t=>t.action.entity.moveLog.previousPlaceRecord.cell.owner!==t.action.entity.controller?{chainBlockTags:["DamageToOpponent"]}:{chainBlockTags:["DamageToSelf"]},execute:async t=>(t.chainBlockTags.includes("DamageToOpponent")?t.activator.getOpponentPlayer():t.activator).effectDamage(t.action.entity.origin.attack??0,t).length>0,settle:async()=>!0}],immediatelyActions:[{title:"自壊",executableCells:["MonsterZone"],executablePeriods:le.filter(t=>t!=="b1DBeforeDmgCalc"&&t!=="b2DBeforeDmgCalc"&&t!=="b1DDmgCalc"&&t!=="b2DDmgCalc"),executableFaces:["FaceUp"],execute:async t=>{t.entity.field.getCardsOnFieldStrictly().some(e=>e.nm==="コザッキー")||t.entity.isEffective&&t.entity.isOnFieldAsMonsterStrictly&&(t.entity.controller.writeInfoLog(`コザッキーがフィールド上に存在しないため、${t.entity.toString()}は破壊される。`),S.tryMarkForDestroy([t.entity],{activator:t.entity.controller,action:t,selectedEntities:[]}),t.entity.info.isDying=!0,t.entity.info.causeOfDeath=["Effect","Destroy"])}}]}}const hl=Object.freeze(Object.defineProperty({__proto__:null,default:rp},Symbol.toStringTag,{value:"Module"}));function*np(){yield{name:"召喚僧サモンプリースト",actions:[{title:"①表示形式変更",isMandatory:!0,playType:"TriggerEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:[...x,...R],executableDuelistTypes:["Controller"],meetsConditions:t=>t.action.entity.hasBeenArrivalNow(["NormalSummon","FlipSummon"]),fixedTags:["IfNormarlSummonSucceed"],prepare:C,execute:async t=>t.action.entity.battlePosition!=="Attack"||!t.action.entity.isOnFieldAsMonsterStrictly?!1:(await t.action.entity.setBattlePosition("Defense",["Effect"],t.action.entity,t.activator),!0),settle:async()=>!0},{title:"③リクルート",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["MonsterZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],isOnlyNTimesPerTurnIfFaceup:1,fixedTags:["SpecialSummonFromDeck"],canPayCosts:t=>t.activator.status.canDiscardAsCost?t.activator.getHandCell().cardEntities.some(e=>e.kind==="Spell"):!1,canExecute:t=>{const e=t.activator.getDeckCell().cardEntities.filter(r=>r.kind==="Monster").filter(r=>r.lvl===4),i=t.activator.getMonsterZones();return t.activator.getEnableSummonList(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,posList:k,cells:i})),[],!1).length>0},payCosts:async(t,e,i)=>{const a=t.activator.getHandCell().cardEntities.filter(n=>n.kind==="Spell"),r=await t.activator.waitSelectEntity(a,"手札コストを選択",i);if(!r&&!i)throw new F(t);if(r)return await r.discard(["Cost"],t.action.entity,t.activator),{discard:[r]}},prepare:C,execute:async t=>{const e=t.activator.getDeckCell().cardEntities.filter(r=>r.lvl===4),i=t.activator.getMonsterZones(),a=await t.activator.summonOne(t.activator,"SpecialSummon",["Effect"],t.action,e.map(r=>({monster:r,posList:k,cells:i})),[],!1,!1);return!a||(a.statusOperatorBundle.push(new oe({title:"攻撃不可",validateAlive:r=>r.duel.clock.isSameTurn(r.isSpawnedAt),isContinuous:!1,isSpawnedBy:t.action.entity,actionAttr:t.action,isApplicableTo:()=>!0,statusCalculator:()=>({canAttack:!1})})),!a)?!1:(t.activator.getDeckCell().shuffle(),!0)},settle:async()=>!0}],continuousEffects:[nr("②リリース不可","Monster",t=>[t],t=>[st.createContinuous("②リリース不可",()=>!0,t,()=>!0,["AdvanceSummonRelease","ReleaseAsEffect","ReleaseAsCost"],()=>!1)])]}}const yl=Object.freeze(Object.defineProperty({__proto__:null,default:np},Symbol.toStringTag,{value:"Module"}));function*sp(){yield{name:"アンカモフライト",actions:[lt,{title:"特殊召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["ExtraDeck"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerDuel:1,meetsConditions:t=>t.activator.getExtraDeck().cardEntities.every(e=>e.nm==="アンカモフライト"),canExecute:t=>t.action.entity.face==="FaceUp"&&he(t,k,[],["Rule"]),getDests:t=>Ot(t,k,[],["Rule"]),prepare:t=>ot(t,"SpecialSummon",["SpecialSummon","Rule"],k),execute:ct,settle:async()=>!0},{title:"①ドロー",isMandatory:!1,playType:"IgnitionEffect",spellSpeed:"Normal",executableCells:["SpellAndTrapZone"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],executableFaces:["FaceUp"],priorityForNPC:20,isOnlyNTimesPerTurn:1,fixedTags:["DestroySpellTrapOnField","Draw"],meetsConditions:t=>t.activator.getExtraDeck().cardEntities.every(e=>e.nm==="アンカモフライト"),canExecute:t=>t.activator.getDeckCell().cardEntities.length>0&&t.activator.canDraw,prepare:async()=>({selectedEntities:[]}),execute:async t=>(await S.tryDestroy([t.action.entity],t)).length?(t.action.entity.field.duel.clock.incrementProcSeq(),await t.activator.draw(1,t.action.entity,t.activator),!0):!1,settle:async()=>!0}],summonFilter:(t,e,i,a,r,n,s,l,c,u)=>{const d={posList:c,cells:u},f={posList:[],cells:[]};return s!==e||n.entity===e?d:f},continuousEffects:[ri("除外予定","Monster",t=>[t],t=>[new oe({title:"除外予定",validateAlive:()=>!0,isContinuous:!0,isSpawnedBy:t,actionAttr:{},isApplicableTo:(e,i)=>i.isOnFieldAsMonsterStrictly&&i.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})])]}}const vl=Object.freeze(Object.defineProperty({__proto__:null,default:sp},Symbol.toStringTag,{value:"Module"}));function*lp(){yield{name:"エキセントリック・ボーイ",actions:[],summonFilter:(t,e,i,a,r,n,s,l,c,u)=>{const d={posList:c,cells:u},f={posList:[],cells:[]};if(!r.includes("SynchroSummon"))return d;const p=l.find(h=>h.material===t.isSpawnedBy);return p?!p.cell.isMonsterZoneLikeCell||l.length!==2?f:l.filter(h=>h!==p).every(h=>h.cell.cellType==="Hand")?d:f:d},defaultStatus:{allowHandSynchro:!0},onUsedAsMaterial:(t,e,i)=>{i.info.summonKinds.includes("SynchroSummon")&&(e.action.entity.statusOperatorBundle.push(new oe({title:"除外予定",validateAlive:()=>!0,isContinuous:!1,isSpawnedBy:t,actionAttr:e.action,isApplicableTo:(a,r)=>r.isOnFieldAsMonsterStrictly&&r.face==="FaceUp",statusCalculator:()=>({willBeBanished:!0})})),i.info.isEffectiveIn=i.info.isEffectiveIn.filter(a=>a!=="ExtraMonsterZone").filter(a=>a!=="MonsterZone"))}}}const ml=Object.freeze(Object.defineProperty({__proto__:null,default:lp},Symbol.toStringTag,{value:"Module"})),op={title:"ペンデュラム召喚",isMandatory:!1,playType:"SpecialSummon",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main1","main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,canExecute:t=>{const e=t.activator.getPendulumScales();if(!e||e.upperBound-e.lowerBound<2)return!1;const i=[...t.activator.getHandCell().cardEntities.filter(n=>n.kind==="Monster"),...t.activator.getExtraDeck().cardEntities.filter(n=>n.face==="FaceUp")].filter(n=>n.kind==="Monster").filter(n=>n.lvl&&n.lvl>e.lowerBound).filter(n=>n.lvl&&n.lvl<e.upperBound);if(!i.length)return!1;const a=[...t.activator.getMonsterZones(),...t.activator.getAvailableMonsterZones()];return t.activator.getEnableSummonList(t.activator,"PendulumSummon",["Rule"],t.action,i.map(n=>({monster:n,cells:a,posList:k})),[],!1).length>0},prepare:async t=>{const e=t.activator.getPendulumScales();if(!e||e.upperBound-e.lowerBound<2)return;const i=[...t.activator.getHandCell().cardEntities.filter(r=>r.kind==="Monster"),...t.activator.getExtraDeck().cardEntities.filter(r=>r.face==="FaceUp")].filter(r=>r.kind==="Monster").filter(r=>r.lvl&&r.lvl>e.lowerBound).filter(r=>r.lvl&&r.lvl<e.upperBound);if(!i.length)return;const a=[...t.activator.getMonsterZones(),...t.activator.getAvailableExtraMonsterZones()];return await t.activator.summonMany(t.activator,"PendulumSummon",["Rule"],t.action,i.map(r=>({monster:r,posList:k,cells:a})),[],!1,void 0,r=>r.length>0,!1),C()},execute:async t=>{for(const e of t.activator.getPendingMonstersOnField())await e.determine();return!0},settle:async()=>!0},cp={title:"強制勝利",isMandatory:!0,playType:"LingeringEffect",spellSpeed:"Normal",executableCells:["Hand"],executablePeriods:["main2"],executableDuelistTypes:["Controller"],isOnlyNTimesPerTurn:1,canExecute:t=>t.activator.duel.clock.turn>1,prepare:async t=>(await S.sendManyToGraveyardForTheSameReason(t.activator.duel.field.getCardsOnFieldStrictly(),["Rule"],t.action.entity,t.activator),{selectedEntities:[],nextChainBlockFilter:()=>!1}),execute:async t=>{const e=[{name:"封印されし者の左足",column:4},{name:"封印されし者の右足",column:2},{name:"封印されし者の左腕",column:5},{name:"封印されし者の右腕",column:1},{name:"封印されしエクゾディア",column:3}];for(const i of e){const a=[t.activator.duel.field.getAllCardEntities().filter(r=>r.owner===t.activator).find(r=>r.origin.name===i.name),t.activator.getOpponentPlayer().getHandCell().cardEntities.find(r=>r.origin.name===i.name)].filter(r=>r!==void 0);if(!a.length)throw new _("想定されない状態",t.activator.getHandCell().cardEntities,i.name);await H.moveMany(a.map(r=>({entity:r,to:r.controller.getMonsterZones().find(n=>n.column===(r.controller.seat==="Above"?6-i.column:i.column))??r.controller.getFieldZone(),kind:"Monster",face:"FaceUp",orientation:"Vertical",pos:"Top",movedAs:["Rule"],movedBy:void 0,actionOwner:void 0,chooser:void 0})))}throw new re(t.activator,`${t.activator.getOpponentPlayer().name}がワンターンキルに失敗した。`)},settle:async()=>!0},up=t=>{const e=[op];return t.profile.npcType==="FtkChallenge"&&e.push(cp),{name:t.profile.name,actions:e,staticInfo:{name:t.profile.name,kind:"Monster",wikiEncodedName:"%A5%D7%A5%EC%A5%A4%A5%E4%A1%BC"}}},rt=t=>t.type==="Name",dp=t=>t.type==="Filter",fp=t=>t.type==="Overmuch";function*pp(){const t={...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousSpell.ts":ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousTrap.ts":is,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_CounterTrap.ts":as,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell.ts":rs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell_Preset.ts":ns,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell.ts":ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell_Preset.ts":ls,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FusionMonster.ts":os,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_LinkMonster.ts":fs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster.ts":ps,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Catapult.ts":gs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_DirectAttacker.ts":hs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Recruiter.ts":ys,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell.ts":vs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Draw.ts":ms,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Mill.ts":Ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Salvage.ts":_s,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_Preset.ts":Cs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap.ts":Ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap_UponAttackDeclaration.ts":ws,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_QuickPlaySpell.ts":Es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_RitualSpell.ts":ks,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_SynchroMonster.ts":Ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_TestMonster.ts":xs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_XyzMonster.ts":Ps}),...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/character_yusei/CardProcDefinitions_Yusei_SyncroTunerMonster.ts":Ms,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSubstitude_Monster.ts":Os,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSupport_Monster.ts":Ns,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_Monster.ts":Bs,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_NormalSpell.ts":Ls,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_EquipSpell.ts":qs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_NormalSpell.ts":Rs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_Blackwing_Monster.ts":Hs,"/src/ygo_entity_proc/card_proc_definitions/tag_c/CardProcDefinitions_Crystron_LinkMonster.ts":Zs,"/src/ygo_entity_proc/card_proc_definitions/tag_d/CardProcDefinitions_DestinyHero_Monster.ts":Gs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_ElementalHero_Monster.ts":$s,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_Exodia_Monster.ts":Us,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_FusionMonster.ts":js,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_Monster.ts":zs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalSpell.ts":Vs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalTrap.ts":Ws,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Firewall_LinkMonster.ts":Qs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Fusion_NormalSpell.ts":Xs,"/src/ygo_entity_proc/card_proc_definitions/tag_i/CardProcDefinitions_Igknight_Monster.ts":Ks,"/src/ygo_entity_proc/card_proc_definitions/tag_j/CardProcDefinitions_Junk_Monster.ts":Ys,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_NormalSpell.ts":Js,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_Rk4_XyzMonster.ts":Is,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv3_Monster.ts":el,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv4_Monster.ts":tl,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv8_SyncroMonster.ts":il,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_Monster.ts":al,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_NormalSpell.ts":rl,"/src/ygo_entity_proc/card_proc_definitions/tag_r/CardProcDefinitions_Resonator_Monster.ts":nl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_SpellCounter_Monster.ts":sl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Stardust_Monster.ts":ll,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_NormalSpell.ts":ol,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_SyncroMonster.ts":cl,"/src/ygo_entity_proc/card_proc_definitions/tag_t/CardProcDefinitions_Toon_ContinuousSpell.ts":ul,"/src/ygo_entity_proc/card_proc_definitions/tag_v/CardProcDefinitions_Void_NormalSpell.ts":dl,"/src/ygo_entity_proc/card_proc_definitions/tag_w/CardProcDefinitions_WorldChalice_Monster.ts":fl,"/src/ygo_entity_proc/card_proc_definitions/type_Cyberse/CardProcDefinitions_Earth_Cyberse_lvl1_Monster.ts":pl,"/src/ygo_entity_proc/card_proc_definitions/type_Fairy/CardProcDefinitions_Light_Fairy_lvl8_SyncroMonster.ts":gl,"/src/ygo_entity_proc/card_proc_definitions/type_Fiend/CardProcDefinitions_Dark_Fiend_lvl4_Monster.ts":hl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Dark_Spellcaster_lvl4_Monster.ts":yl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Light_Spellcaster_lvl5_PendulumMonster.ts":vl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Wind_Spellcaster_lvl3_Monster.ts":ml})};for(const e of Object.keys(t))t[e].default&&(yield*t[e].default())}function*gp(...t){var a,r;const e={...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousSpell.ts":ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_ContinuousTrap.ts":is,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_CounterTrap.ts":as,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell.ts":rs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_EquipSpell_Preset.ts":ns,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell.ts":ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FieldSpell_Preset.ts":ls,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_FusionMonster.ts":os,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_LinkMonster.ts":fs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster.ts":ps,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Catapult.ts":gs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_DirectAttacker.ts":hs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_Monster_Preset_Recruiter.ts":ys,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell.ts":vs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Draw.ts":ms,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Mill.ts":Ss,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_General_Salvage.ts":_s,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalSpell_Preset.ts":Cs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap.ts":Ts,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_NormalTrap_UponAttackDeclaration.ts":ws,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_QuickPlaySpell.ts":Es,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_RitualSpell.ts":ks,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_SynchroMonster.ts":Ds,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_TestMonster.ts":xs,"/src/ygo_entity_proc/card_proc_definitions/CardProcDefinitions_XyzMonster.ts":Ps}),...Object.assign({"/src/ygo_entity_proc/card_proc_definitions/character_yusei/CardProcDefinitions_Yusei_SyncroTunerMonster.ts":Ms,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSubstitude_Monster.ts":Os,"/src/ygo_entity_proc/card_proc_definitions/support_fusion/CardProcDefinitions_FustionSupport_Monster.ts":Ns,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_Monster.ts":Bs,"/src/ygo_entity_proc/card_proc_definitions/support_retual/CardProcDefinitions_RetualSupport_NormalSpell.ts":Ls,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_EquipSpell.ts":qs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_BambooSword_NormalSpell.ts":Rs,"/src/ygo_entity_proc/card_proc_definitions/tag_b/CardProcDefinitions_Blackwing_Monster.ts":Hs,"/src/ygo_entity_proc/card_proc_definitions/tag_c/CardProcDefinitions_Crystron_LinkMonster.ts":Zs,"/src/ygo_entity_proc/card_proc_definitions/tag_d/CardProcDefinitions_DestinyHero_Monster.ts":Gs,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_ElementalHero_Monster.ts":$s,"/src/ygo_entity_proc/card_proc_definitions/tag_e/CardProcDefinitions_Exodia_Monster.ts":Us,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_FusionMonster.ts":js,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_Monster.ts":zs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalSpell.ts":Vs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_FallenOfAlbaz_NormalTrap.ts":Ws,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Firewall_LinkMonster.ts":Qs,"/src/ygo_entity_proc/card_proc_definitions/tag_f/CardProcDefinitions_Fusion_NormalSpell.ts":Xs,"/src/ygo_entity_proc/card_proc_definitions/tag_i/CardProcDefinitions_Igknight_Monster.ts":Ks,"/src/ygo_entity_proc/card_proc_definitions/tag_j/CardProcDefinitions_Junk_Monster.ts":Ys,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_NormalSpell.ts":Js,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_Rk4_XyzMonster.ts":Is,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv3_Monster.ts":el,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv4_Monster.ts":tl,"/src/ygo_entity_proc/card_proc_definitions/tag_l/CardProcDefinitions_Lightsworn_lv8_SyncroMonster.ts":il,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_Monster.ts":al,"/src/ygo_entity_proc/card_proc_definitions/tag_m/CardProcDefinitions_Metalfoes_NormalSpell.ts":rl,"/src/ygo_entity_proc/card_proc_definitions/tag_r/CardProcDefinitions_Resonator_Monster.ts":nl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_SpellCounter_Monster.ts":sl,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Stardust_Monster.ts":ll,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_NormalSpell.ts":ol,"/src/ygo_entity_proc/card_proc_definitions/tag_s/CardProcDefinitions_Synchron_SyncroMonster.ts":cl,"/src/ygo_entity_proc/card_proc_definitions/tag_t/CardProcDefinitions_Toon_ContinuousSpell.ts":ul,"/src/ygo_entity_proc/card_proc_definitions/tag_v/CardProcDefinitions_Void_NormalSpell.ts":dl,"/src/ygo_entity_proc/card_proc_definitions/tag_w/CardProcDefinitions_WorldChalice_Monster.ts":fl,"/src/ygo_entity_proc/card_proc_definitions/type_Cyberse/CardProcDefinitions_Earth_Cyberse_lvl1_Monster.ts":pl,"/src/ygo_entity_proc/card_proc_definitions/type_Fairy/CardProcDefinitions_Light_Fairy_lvl8_SyncroMonster.ts":gl,"/src/ygo_entity_proc/card_proc_definitions/type_Fiend/CardProcDefinitions_Dark_Fiend_lvl4_Monster.ts":hl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Dark_Spellcaster_lvl4_Monster.ts":yl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Light_Spellcaster_lvl5_PendulumMonster.ts":vl,"/src/ygo_entity_proc/card_proc_definitions/type_Spellcaster/CardProcDefinitions_Wind_Spellcaster_lvl3_Monster.ts":ml})},i=[];for(const n of Object.values(e))if(n.default){for(const s of n.default())if(t.includes(s.name)){const l={...Je[s.name]};let c=s.summonFilter;l.kind==="Monster"&&l.monsterCategories&&!s.summonFilter&&l.monsterCategories.union(Mn).length&&(c=Ga),s.fusionMaterialInfos&&s.fusionMaterialInfos.some(d=>d.type==="Name")&&(l.textTags=[...l.textTags??[],...s.fusionMaterialInfos.filter(rt).map(d=>d.cardName)]);const u={...s,summonFilter:c,staticInfo:l};(a=l.monsterCategories)!=null&&a.includes("Link")?u.actions=[...us,...u.actions]:(r=l.monsterCategories)!=null&&r.includes("SpecialSummon")?u.actions=[...ji,...u.actions]:u.actions=[...Ur,...s.actions],u.actions.filter(d=>d.fixedTags&&d.fixedTags.some(f=>f.startsWith("SpecialSummon"))&&!d.fixedTags.includes("SpecialSummon")).forEach(d=>{var f;return(f=d.fixedTags)==null?void 0:f.push("SpecialSummon")}),yield u,i.push(s.name)}}yield*t.filter(n=>!i.includes(n)).map(n=>Je[n]).filter(n=>n).filter(n=>n.kind==="Monster").filter(n=>{var s;return!((s=n.monsterCategories)!=null&&s.includes("Effect"))}).filter(n=>{var s;return!((s=n.monsterCategories)!=null&&s.includes("Pendulum"))}).map(n=>{var s;return i.push(n.name),{name:n.name,actions:(s=n.monsterCategories)!=null&&s.includes("SpecialSummon")?ji:Ur,staticInfo:n}}),i.length!==t.length&&console.log(t.filter(n=>!i.includes(n)))}const hp=t=>({...up(t),staticInfo:{name:t.profile.name,kind:"Monster",wikiEncodedName:"%A5%D7%A5%EC%A5%A4%A5%E4%A1%BC"}}),yp=new Set,ja=Dl;let Sl=0,_l=0;for(const t of pp()){if(yp.has(t.name))throw new Error(`カード定義重複${t.name}`);ja[t.name]&&(ja[t.name].isImplemented=!0,Sl++)}const Je=Object.values(ja).reduce((t,e)=>{var i;return e.kind==="Monster"&&e.monsterCategories&&!((i=e.monsterCategories)!=null&&i.includes("Effect"))&&!e.monsterCategories.includes("Pendulum")&&(e.isImplemented=!0,_l++),e.isForTest&&e.isImplemented,t[e.name]=e,t},{}),ig=Sl,ag=_l,za=[{id:-1,name:"サンプルデッキ１",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","ジャンク・フォアード","ジャンク・フォアード","チューン・ウォリアー","チューン・ウォリアー","ガード・オブ・フレムベル","ガード・オブ・フレムベル","守護竜ユスティア","守護竜ユスティア","エンジェル・トランペッター","エンジェル・トランペッター","ジェムナイト・サフィア","ジェムナイト・サフィア","魂虎","魂虎","暗黒界の番兵 レンジ","暗黒界の番兵 レンジ","バトルフットボーラー","バトルフットボーラー","球騎士の三人娘","球騎士の三人娘","エンジェル・トランペッター","エンジェル・トランペッター","Ｇ戦隊 シャインブラック","Ｇ戦隊 シャインブラック","しゃりの軍貫","しゃりの軍貫","ジョングルグールの幻術師","ジョングルグールの幻術師","ゾンビーノ","ゾンビーノ","メガロスマッシャーＸ","メガロスマッシャーＸ","ライドロン","ライドロン","機界騎士アヴラム","機界騎士アヴラム","幻のグリフォン","幻のグリフォン","幻殻竜","幻殻竜","アレキサンドライドラゴン","アレキサンドライドラゴン","ジェネティック・ワーウルフ","ジェネティック・ワーウルフ","サイバー・ドラゴン","フロストザウルス","フロストザウルス","フロストザウルス","青眼の白龍","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-2,name:"サンプルデッキ２",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","グローアップ・バルブ","ガード・オブ・フレムベル","伝説の白石","伝説の白石","伝説の白石","守護竜ユスティア","ギャラクシーサーペント","ジェネクス・コントローラー","Ｅ・ＨＥＲＯ フェザーマン","Ｅ・ＨＥＲＯ バーストレディ","チューン・ウォリアー","Ｅ・ＨＥＲＯ クレイマン","Ｅ・ＨＥＲＯ スパークマン","しゃりの軍貫","ジョングルグールの幻術師","ゾンビーノ","ジェネティック・ワーウルフ","ライトロード・ビースト ウォルフ","サイバー・ドラゴン","サイバー・ドラゴン","サイバー・ドラゴン","ラブラドライドラゴン","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","フロストザウルス","Ｅ・ＨＥＲＯ ネオス","青眼の白龍","青眼の白龍","青眼の白龍","Ｅ－エマージェンシーコール","おろかな埋葬","トレード・イン","トレード・イン","トレード・イン","闇の量産工場","強欲な壺","強欲な壺","強欲な壺","死者蘇生","死者蘇生","死者蘇生","召喚師のスキル","召喚師のスキル","召喚師のスキル","成金ゴブリン","成金ゴブリン","成金ゴブリン","戦士の生還","増援","調和の宝札","調和の宝札","調和の宝札","天使の施し","天使の施し","天使の施し","貪欲な壺","貪欲な壺","貪欲な壺","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-3,name:"サンプルデッキ３",deckType:"NPC",description:"",cardNames:["アンノウン・シンクロン","六武衆のご隠居","ジャンク・フォアード","グローアップ・バルブ","ガード・オブ・フレムベル","伝説の白石","伝説の白石","伝説の白石","守護竜ユスティア","ギャラクシーサーペント","ジェネクス・コントローラー","Ｅ・ＨＥＲＯ フェザーマン","Ｅ・ＨＥＲＯ バーストレディ","チューン・ウォリアー","Ｅ・ＨＥＲＯ クレイマン","Ｅ・ＨＥＲＯ スパークマン","しゃりの軍貫","ジョングルグールの幻術師","ゾンビーノ","ジェネティック・ワーウルフ","ライトロード・ビースト ウォルフ","サイバー・ドラゴン","サイバー・ドラゴン","サイバー・ドラゴン","ラブラドライドラゴン","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","Ｄ－ＨＥＲＯ ディアボリックガイ","フロストザウルス","Ｅ・ＨＥＲＯ ネオス","青眼の白龍","青眼の白龍","青眼の白龍","Ｅ－エマージェンシーコール","おろかな埋葬","トレード・イン","トレード・イン","トレード・イン","闇の量産工場","強欲な壺","強欲な壺","強欲な壺","死者蘇生","死者蘇生","死者蘇生","召喚師のスキル","召喚師のスキル","召喚師のスキル","成金ゴブリン","成金ゴブリン","成金ゴブリン","戦士の生還","増援","調和の宝札","調和の宝札","調和の宝札","天使の施し","天使の施し","天使の施し","貪欲な壺","貪欲な壺","貪欲な壺","マジカル・アンドロイド","マジカル・アンドロイド","マジカル・アンドロイド","大地の騎士ガイアナイト","大地の騎士ガイアナイト","大地の騎士ガイアナイト","スクラップ・デスデーモン","スクラップ・デスデーモン","スクラップ・デスデーモン","スターダスト・ドラゴン","スターダスト・ドラゴン","スターダスト・ドラゴン","ナチュル・ガオドレイク","ナチュル・ガオドレイク","ナチュル・ガオドレイク"]},{id:-9007199254740991,name:"FtkChallenge",deckType:"NPC",description:"FtkChallenge",cardNames:["封印されし者の右足","封印されし者の右腕","封印されし者の左足","封印されし者の左腕","封印されしエクゾディア","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン","スカゴブリン"]},{id:-1e3,name:"図書館エクゾプリセット",deckType:"Preset",description:"プリセット",cardNames:["封印されし者の右足","封印されし者の右腕","封印されし者の左足","封印されし者の左腕","封印されしエクゾディア","王立魔法図書館","王立魔法図書館","王立魔法図書館","召喚僧サモンプリースト","召喚僧サモンプリースト","召喚僧サモンプリースト","アンカモフライト","ダーク・バースト","チキンレース","チキンレース","チキンレース","テラ・フォーミング","トゥーン・ワールド","トゥーンのもくじ","トゥーンのもくじ","トゥーンのもくじ","一時休戦","黄金色の竹光","黄金色の竹光","黄金色の竹光","手札断殺","手札断殺","手札断殺","真刀竹光","成金ゴブリン","成金ゴブリン","成金ゴブリン","打ち出の小槌","打ち出の小槌","無の煉獄","無の煉獄","無の煉獄","妖刀竹光","妖刀竹光","妖刀竹光"]}],vp=t=>{if(!Tc(t))return!1;const e=t;return Gn(e.id)&&typeof e.name=="string"&&typeof e.description=="string"&&typeof e.lastUsedAt=="string"&&Array.isArray(e.cardNames)&&e.cardNames.every(i=>typeof i=="string")},M=class M{constructor(e,i){o(this,"id");o(this,"name");o(this,"deckType");o(this,"description");o(this,"lastUsedAt");o(this,"cardNames");o(this,"getIllegalCardNames",()=>Array.from(new Set(this.cardNames.filter(e=>!Object.keys(Je).includes(e)))));o(this,"getDisableCardNames",()=>Array.from(new Set(this.cardNames.filter(e=>!Object.keys(Je).includes(e)))));o(this,"createCardInfos",()=>{const e=this.getIllegalCardNames();if(e.length>0)throw new Error(`存在しないカード名からデッキを生成しようとした。${e}`);return this.cardNames.map(i=>Je==null?void 0:Je[i]).filter(i=>i)});o(this,"copy",async()=>M.createNewDeck(this.name,this.description,this.cardNames));o(this,"updateTimestamp",async()=>{await M.tblHeader.update(this.id,e=>({...e,lastUsedAt:new Date}))});o(this,"saveDeckInfo",async e=>{const i=e??this;await M.tblHeader.update(this.id,n=>({...n,name:i.name,description:i.description,deckType:"User",lastUsedAt:new Date}));const a=(await M.tblDetail.getAll()).filter(n=>n.deckId===this.id);await M.tblDetail.delete(a.map(n=>n.id));const r=await M.tblDetail.insertMany(i.cardNames.map((n,s)=>({deckId:this.id,seq:s,name:n,description:""})));return new M(await M.tblHeader.get(this.id),r)});o(this,"delete",async()=>{await M.remove(this.id)});this.id=e.id,this.name=e.name,this.deckType=e.deckType,this.description=e.description,this.lastUsedAt=e.lastUsedAt,this.cardNames=i.filter(a=>a.deckId===this.id).map(a=>a.name)}};o(M,"toJson",e=>{const i=e.map(a=>{const{id:r,name:n,description:s,lastUsedAt:l,cardNames:c}=a;return{id:r,name:n,description:s,lastUsedAt:l,cardNames:c}});return i.forEach(a=>{a.cardNames=a.cardNames.map(r=>Je[r]).sort(Nn).map(r=>r.name)}),JSON.stringify(i,null,2)}),o(M,"createfromJson",async e=>{let i;try{const r=await e.text();i=JSON.parse(r)}catch(r){throw console.error(r),new Error(`${e.name}は正しいJSONファイル形式ではない。`)}if(!Array.isArray(i))throw new Error(`${e.name}は正しいデッキ情報の形式ではない。`);if(!i.length)throw new Error(`${e.name}にデッキ情報が含まれていない。`);const a=i.filter(vp).map(r=>({...r,deckType:"User",id:Number(r.id),lastUsedAt:new Date(r.lastUsedAt)}));if(i.length!==a.length)throw new Error(`${e.name}のデッキ情報${i.length}件のうち、${i.length-a.length}件が正しいデッキ情報の形式ではなかった。`);return a}),o(M,"convertToObjectURL",e=>{const i=M.toJson(e),a=new Blob([i],{type:"text/plain"});return window.URL.createObjectURL(a)}),o(M,"idb"),o(M,"tblHeader"),o(M,"tblDetail"),o(M,"getAllDeckInfo",async e=>{if(e&&(M.idb=e),!M.idb)throw new Error("illegal argument: idb is undefined.");M.tblHeader||(M.tblHeader=new mp(M.idb)),M.tblDetail||(M.tblDetail=new Sp(M.idb));const i=await M.tblHeader.getAll(),a=await M.tblDetail.getAll();return i.length?i.map(r=>new M(r,a)):[await M.prepareSampleDeck()]}),o(M,"createNewDeck",async(e,i,a,r)=>{const n=await M.tblHeader.insert({name:e,description:i,deckType:"User",lastUsedAt:r??new Date}),s=await M.tblDetail.insertMany(a.map((l,c)=>({deckId:n.id,seq:c,name:l,description:""})));return new M(n,s)}),o(M,"prepareSampleDeck",async()=>{const e=za.find(i=>i.deckType==="Preset")??za.slice(-1)[0];return await M.createNewDeck(e.name,e.description,e.cardNames)}),o(M,"remove",async e=>{await M.tblHeader.delete([e]);const i=(await M.tblDetail.getAll()).filter(a=>a.deckId===e);await M.tblDetail.delete(i.map(a=>a.id))});let Vr=M;class mp extends ar{constructor(i){super(i,"TblDeckHeader");o(this,"_prepareInitialRecords",()=>[])}}class Sp extends ar{constructor(i){super(i,"TblDeckDetail");o(this,"_prepareInitialRecords",()=>[])}}const rg=za.map(t=>({...t,lastUsedAt:new Date})).filter(t=>t.id<0);export{Dp as $,Mp as A,ti as B,ge as C,Wn as D,Kp as E,bp as F,Hn as G,wp as H,qp as I,Gi as J,Je as K,zp as L,cc as M,oc as N,nc as O,rc as P,sc as Q,lc as R,_ as S,ru as T,tg as U,Np as V,eg as W,Za as X,Pp as Y,Yp as Z,Rp as _,Y as a,Li as a0,Nn as a1,$p as a2,Gp as a3,Zp as a4,Xp as a5,lr as a6,Bp as a7,Vr as a8,Wu as a9,cu as aa,qa as ab,tc as ac,Qp as ad,Wp as ae,Vp as af,jp as ag,Up as ah,Ep as ai,Lp as aj,Fp as ak,ag as al,ig as am,Op as an,Hp as ao,Hr as ap,Zr as aq,rg as ar,_a as as,Ip as at,xp as au,Ap as av,Jp as aw,kp as ax,Ve as b,K as c,oa as d,L as e,X as f,P as g,te as h,Zt as i,at as j,ae as k,Wo as l,Ai as m,br as n,pt as o,ut as p,O as q,Ht as r,ue as s,G as t,dt as u,Tp as v,vt as w,Ne as x,Q as y,ii as z};
